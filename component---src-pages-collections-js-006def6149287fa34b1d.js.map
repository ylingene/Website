{"version":3,"sources":["webpack:///./src/components/header/header.js","webpack:///./src/components/header/style.scss","webpack:///./src/components/blog/blog.js","webpack:///./src/pages/collections.js","webpack:///./src/components/blog/style.scss"],"names":["cx","classNames","bind","style","getBorderClasses","accentColor","borderBlue","ACCENT_BLUE","borderGreen","ACCENT_GREEN","borderRed","ACCENT_RED","Header","title","sectionTitle","description","className","header","defaultProps","module","exports","BlogPost","frontmatter","fields","backgroundColor","excerpt","key","slug","to","post","hero","heroWrapper","alt","heroAlt","fluid","childImageSharp","location","date","Blog","headerData","posts","map","pageQuery","Collections","data","allMarkdownRemark","nodes"],"mappings":"2FAAA,+EAQMA,EAAKC,IAAWC,KAAKC,KAErBC,EAAmB,SAACC,GAAD,OACrBL,EAAG,CACCM,WAAYD,IAAgBE,IAC5BC,YAAaH,IAAgBI,IAC7BC,UAAWL,IAAgBM,OAI7BC,EAAS,SAAC,GAAD,IAAGP,EAAH,EAAGA,YAAaQ,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,YAArC,OACb,4BAAQC,UAAWb,IAAMc,QACvB,yBAAKD,UAAWb,IAAMU,OACpB,yBAAKG,UAAWZ,EAAiBC,KACjC,6BACE,4BAAKQ,GACL,4BAAKC,OAGNC,GAAe,yBAAKC,UAAWb,IAAMY,aAAcA,KAI1DH,EAAOM,aAAe,CACpBH,YAAY,IAUCH,O,qBCzCfO,EAAOC,QAAU,CAAC,MAAQ,UAAU,WAAa,2BAA2B,YAAc,4BAA4B,UAAY,0BAA0B,YAAc,4BAA4B,OAAS,uBAAuB,MAAQ,wB,kNCUxOC,EAAW,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,OACzBC,GAD+C,EAAdC,QACfH,EAAYE,gBAAkB,CAACA,gBAAiBF,EAAYE,iBAAmB,IACvG,OACE,6BAASE,IAAKH,EAAOI,KAAMxB,MAAOqB,GAChC,kBAAC,OAAD,CAAMI,GAAIL,EAAOI,KAAMX,UAAWb,IAAM0B,QACnCP,EAAYQ,MACb,yBAAKd,UAAWb,IAAM4B,aACpB,kBAAC,IAAD,CACEC,IAAKV,EAAYW,QACjBjB,UAAWb,IAAM2B,KACjBI,MAAOZ,EAAYQ,KAAKK,gBAAgBD,SAI9C,4BAAQlB,UAAWb,IAAMc,QACvB,+BAAQK,EAAYc,UACpB,4BAAKd,EAAYT,OACjB,+BAAQS,EAAYe,UAO9BhB,EAASH,aAAe,CACtBO,QAAQ,IAmBV,IAkBea,EAlBF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MACxB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK3B,MAAO0B,EAAWzB,aAAcC,YAAawB,EAAWxB,cAC7D,kBAAC,IAAWwB,GACXC,EAAMC,IAAIpB,KC1BNqB,GAFEC,UAzBK,SAAC,GAAc,IAC3BH,EAD0B,EAAXI,KACFC,kBAAkBC,MAErC,OACE,kBAAC,EAAD,CACEP,WAAY,CACVlC,YAAaM,IACbE,MAAO,cACPC,aAAc,cACdC,YACE,2EAEJyB,MAAOA,KAeS,c,uBCjCtBrB,EAAOC,QAAU,CAAC,MAAQ,UAAU,KAAO,qBAAqB,OAAS,uBAAuB,YAAc,4BAA4B,KAAO","file":"component---src-pages-collections-js-006def6149287fa34b1d.js","sourcesContent":["import classNames from \"classnames/bind\"\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { ACCENT_BLUE, ACCENT_GREEN, ACCENT_RED } from \"../../utils/defs\"\n\nimport style from \"./style.scss\"\n\nconst cx = classNames.bind(style)\n\nconst getBorderClasses = (accentColor) => (\n    cx({\n        borderBlue: accentColor === ACCENT_BLUE,\n        borderGreen: accentColor === ACCENT_GREEN,\n        borderRed: accentColor === ACCENT_RED,\n    })\n)\n\nconst Header = ({ accentColor, title, sectionTitle, description }) => (\n  <header className={style.header}>\n    <div className={style.title}>\n      <div className={getBorderClasses(accentColor)}></div>\n      <div>\n        <h3>{title}</h3>\n        <h1>{sectionTitle}</h1>\n      </div>\n    </div>\n    {!!description && <div className={style.description}>{description}</div>}\n  </header>\n)\n\nHeader.defaultProps = {\n  description: ``,\n}\n\nHeader.propTypes = {\n  accentColor: PropTypes.oneOf([ACCENT_BLUE, ACCENT_GREEN, ACCENT_RED]).isRequired,\n  title: PropTypes.string.isRequired,\n  sectionTitle: PropTypes.string.isRequired,\n  description: PropTypes.string,\n}\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"#03030c\",\"borderBlue\":\"style--borderBlue--1ePo0\",\"borderGreen\":\"style--borderGreen--3ZxpL\",\"borderRed\":\"style--borderRed--2VTQu\",\"description\":\"style--description--1e9ns\",\"header\":\"style--header--2Cxvk\",\"title\":\"style--title--1PW1x\"};","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image from \"gatsby-image\"\nimport PropTypes from \"prop-types\"\n\nimport SEO from \"../seo\"\nimport Container from \"../container/container\"\nimport Header from \"../header/header\"\n\nimport style from \"./style.scss\"\n\nconst BlogPost = ({ frontmatter, fields, excerpt }) => {\n  const backgroundColor = frontmatter.backgroundColor ? {backgroundColor: frontmatter.backgroundColor} : {}\n  return (\n    <article key={fields.slug} style={backgroundColor}>\n      <Link to={fields.slug} className={style.post}>\n        {!!frontmatter.hero && (\n          <div className={style.heroWrapper}>\n            <Image\n              alt={frontmatter.heroAlt}\n              className={style.hero}\n              fluid={frontmatter.hero.childImageSharp.fluid}\n            />\n          </div>\n        )}\n        <header className={style.header}>\n          <small>{frontmatter.location}</small>\n          <h2>{frontmatter.title}</h2>\n          <small>{frontmatter.date}</small>\n        </header>\n      </Link>\n    </article>\n  )\n}\n\nBlogPost.defaultProps = {\n  excerpt: ``,\n}\n\nBlogPost.propTypes = {\n  frontmatter: PropTypes.shape({\n    date: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    location: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    hero: PropTypes.object,\n    heroAlt: PropTypes.string,\n  }).isRequired,\n  fields: PropTypes.shape({\n    slug: PropTypes.string,\n  }).isRequired,\n  excerpt: PropTypes.string,\n}\n\nconst Blog = ({ headerData, posts }) => {\n    return (\n      <Container>\n        <SEO title={headerData.sectionTitle} description={headerData.description} />\n        <Header {...headerData} />\n        {posts.map(BlogPost)}\n      </Container>\n    )\n}\n\nBlog.propTypes = {\n  headerData: PropTypes.shape({\n    sectionTitle: PropTypes.string.isRequired,\n    description: PropTypes.string,\n  }).isRequired,\n  posts: PropTypes.array.isRequired,\n}\n\nexport default Blog\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport { ACCENT_RED } from \"../utils/defs\"\nimport Blog from \"../components/blog/blog\"\n\nconst Collections = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Blog\n      headerData={{\n        accentColor: ACCENT_RED,\n        title: \"Collections\",\n        sectionTitle: \"Photography\",\n        description:\n          \"Moments from my past trips. Photographs taken on both digital and film.\",\n      }}\n      posts={posts}\n    />\n  )\n}\n\nCollections.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      nodes: PropTypes.arrayOf(PropTypes.object),\n    }),\n  }).isRequired,\n}\n\nexport default Collections\n\nexport const pageQuery = graphql`\n         query {\n           allMarkdownRemark(\n             sort: { fields: [frontmatter___date], order: DESC }\n           ) {\n             nodes {\n               excerpt\n               fields {\n                 slug\n               }\n               frontmatter {\n                 date(formatString: \"YYYY\")\n                 title\n                 description\n                 location\n                 backgroundColor\n                 hero {\n                   childImageSharp {\n                     ...ImageFragment\n                   }\n                 }\n                 heroAlt\n               }\n             }\n           }\n         }\n       `\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"#03030c\",\"hero\":\"style--hero--2kJxt\",\"header\":\"style--header--1H2vy\",\"heroWrapper\":\"style--heroWrapper--5qdAi\",\"post\":\"style--post--2ppAp\"};"],"sourceRoot":""}