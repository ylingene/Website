{"version":3,"sources":["webpack:///./src/components/portfolio/portfolio.js","webpack:///./src/pages/illustrations.js","webpack:///./src/components/header/header.js","webpack:///./src/components/portfolio/style.scss","webpack:///./src/components/header/style.scss"],"names":["cx","classNames","bind","style","Filters","filterValues","activeFilter","onFilterUpdate","className","filters","map","filter","key","filterActive","onClick","onMouseDown","e","preventDefault","Portfolio","description","headerData","fluidImages","allFilters","concat","useState","updateActiveFilter","displayedImages","setDisplayedImages","useEffect","image","type","title","sectionTitle","length","Illustrations","data","accentColor","ACCENT_GREEN","allFile","nodes","childrenYaml","pageQuery","getBorderClasses","borderBlue","ACCENT_BLUE","borderGreen","borderRed","ACCENT_RED","Header","header","defaultProps","module","exports"],"mappings":"6FAAA,mHAWMA,EAAKC,IAAWC,KAAKC,KAErBC,EAAU,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eAC7C,OACE,yBAAKC,UAAWL,IAAMM,SACnBJ,EAAaK,KAAI,SAACC,GACjB,OACE,4BACEC,IAAKD,EACLH,UAAWR,EAAG,CACZW,QAAQ,EACRE,aAAcF,IAAWL,IAE3BQ,QAAS,kBAAMP,EAAeI,IAC9BI,YAAa,SAACC,GAAD,OAAOA,EAAEC,mBAErBN,QA+DEO,IAjDG,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,WAA2C,IAA/BX,eAA+B,MAArB,GAAqB,EAAjBY,EAAiB,EAAjBA,YACpDC,EAAa,CAAC,OAAOC,OAAOd,GADyC,EAEhCe,mBAASF,EAAW,IAAxDhB,EAFoE,KAEtDmB,EAFsD,OAG7BD,mBAASH,GAAhDK,EAHoE,KAGnDC,EAHmD,KAgB3E,OAXAC,qBAAU,WAEND,EADmB,QAAjBrB,EACiBe,EAGjBA,EAAYV,QAAO,SAACkB,GAAD,OAAWA,EAAMC,OAASxB,QAGhD,CAACA,EAAce,IAIhB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEU,MAAOX,EAAWY,aAClBb,YAAaC,EAAWD,aAAeA,IAEzC,kBAAC,IAAWC,GACXX,EAAQwB,OAAS,GAChB,kBAAC7B,EAAD,CACEC,aAAciB,EACdhB,aAAcA,EACdC,eAAgBkB,IAGpB,kBAAC,IAAD,CAASJ,YAAaK,O,oCCvE5B,kGAkCeQ,UA3BO,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACvB,OACE,kBAAC,IAAD,CACEhB,YAAY,6DACZC,WAAY,CACVgB,YAAaC,IACbN,MAAO,UACPC,aAAc,gBACdb,YAAa,gBAEfE,YAAac,EAAKG,QAAQC,MAAM,GAAGC,gBAmBlC,IAAMC,EAAS,c,kCCpCtB,+EAQMzC,EAAKC,IAAWC,KAAKC,KAErBuC,EAAmB,SAACN,GAAD,OACrBpC,EAAG,CACC2C,WAAYP,IAAgBQ,IAC5BC,YAAaT,IAAgBC,IAC7BS,UAAWV,IAAgBW,OAI7BC,EAAS,SAAC,GAAD,IAAGZ,EAAH,EAAGA,YAAaL,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,aAAcb,EAArC,EAAqCA,YAArC,OACb,4BAAQX,UAAWL,IAAM8C,QACvB,yBAAKzC,UAAWL,IAAM4B,OACpB,yBAAKvB,UAAWkC,EAAiBN,KACjC,6BACE,4BAAKL,GACL,4BAAKC,OAGNb,GAAe,yBAAKX,UAAWL,IAAMgB,aAAcA,KAI1D6B,EAAOE,aAAe,CACpB/B,YAAY,IAUC6B,O,qBCzCfG,EAAOC,QAAU,CAAC,MAAQ,UAAU,YAAc,yBAAyB,OAAS,uBAAuB,aAAe,6BAA6B,QAAU,0B,qBCAjKD,EAAOC,QAAU,CAAC,MAAQ,UAAU,YAAc,yBAAyB,WAAa,2BAA2B,YAAc,4BAA4B,UAAY,0BAA0B,YAAc,4BAA4B,OAAS,uBAAuB,MAAQ","file":"component---src-pages-illustrations-js-b87d377eec031c36bb78.js","sourcesContent":["import classNames from \"classnames/bind\"\nimport React, { useState, useEffect } from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Container from \"../container/container\"\nimport Gallery from \"../gallery/gallery\"\nimport Header from \"../header/header\"\nimport SEO from \"../seo\"\n\nimport style from \"./style.scss\"\n\nconst cx = classNames.bind(style)\n\nconst Filters = ({ filterValues, activeFilter, onFilterUpdate }) => {\n  return (\n    <div className={style.filters}>\n      {filterValues.map((filter) => {\n        return (\n          <button\n            key={filter}\n            className={cx({\n              filter: true,\n              filterActive: filter === activeFilter,\n            })}\n            onClick={() => onFilterUpdate(filter)}\n            onMouseDown={(e) => e.preventDefault()}\n          >\n            {filter}\n          </button>\n        )\n      })}\n    </div>\n  )\n}\n\nFilters.propTypes = {\n  filterValues: PropTypes.arrayOf(PropTypes.string).isRequired,\n  activeFilter: PropTypes.string.isRequired,\n  onFilterUpdate: PropTypes.func.isRequired,\n}\n\nconst Portfolio = ({ description, headerData, filters = [], fluidImages}) => {\n  const allFilters = [\"all\"].concat(filters)\n  const [activeFilter, updateActiveFilter] = useState(allFilters[0])\n  const [displayedImages, setDisplayedImages] = useState(fluidImages)\n\n  useEffect(() => {\n    if (activeFilter === \"all\") {\n      setDisplayedImages(fluidImages)\n    } else {\n      setDisplayedImages(\n        fluidImages.filter((image) => image.type === activeFilter)\n      )\n    }\n  }, [activeFilter, fluidImages])\n\n\n  return (\n    <Container>\n      <SEO\n        title={headerData.sectionTitle}\n        description={headerData.description || description}\n      />\n      <Header {...headerData} />\n      {filters.length > 0 && (\n        <Filters\n          filterValues={allFilters}\n          activeFilter={activeFilter}\n          onFilterUpdate={updateActiveFilter}\n        />\n      )}\n      <Gallery fluidImages={displayedImages} />\n    </Container>\n  )\n}\n\nPortfolio.propTypes = {\n  description: PropTypes.string,\n  headerData: PropTypes.shape({\n    sectionTitle: PropTypes.string.isRequired,\n    description: PropTypes.string,\n  }).isRequired,\n  filters: PropTypes.arrayOf(PropTypes.string),\n  fluidImages: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n    })\n  ).isRequired,\n}\n\nexport default Portfolio\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport { ACCENT_GREEN } from \"../utils/defs\"\nimport Portfolio from \"../components/portfolio/portfolio\"\n\nconst Illustrations = ({ data }) => {\n  return (\n    <Portfolio\n      description=\"Illustrations from my recent dabbling in digital painting.\"\n      headerData={{\n        accentColor: ACCENT_GREEN,\n        title: \"Gallery\",\n        sectionTitle: \"Illustrations\",\n        description: \"Coming soon.\",\n      }}\n      fluidImages={data.allFile.nodes[0].childrenYaml}\n    />\n  )\n}\n\nIllustrations.propTypes = {\n  data: PropTypes.shape({\n    allFile: PropTypes.shape({\n      nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n          childrenYaml: PropTypes.array,\n        })\n      ),\n    }),\n  }).isRequired,\n}\n\nexport default Illustrations\n\nexport const pageQuery = graphql`\n  query {\n    allFile(\n      filter: {\n        sourceInstanceName: { eq: \"galleries\" }\n        name: { eq: \"illustrations\" }\n      }\n    ) {\n      nodes {\n        childrenYaml {\n          ...GalleryImageFragment\n        }\n      }\n    }\n  }\n`\n","import classNames from \"classnames/bind\"\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { ACCENT_BLUE, ACCENT_GREEN, ACCENT_RED } from \"../../utils/defs\"\n\nimport style from \"./style.scss\"\n\nconst cx = classNames.bind(style)\n\nconst getBorderClasses = (accentColor) => (\n    cx({\n        borderBlue: accentColor === ACCENT_BLUE,\n        borderGreen: accentColor === ACCENT_GREEN,\n        borderRed: accentColor === ACCENT_RED,\n    })\n)\n\nconst Header = ({ accentColor, title, sectionTitle, description }) => (\n  <header className={style.header}>\n    <div className={style.title}>\n      <div className={getBorderClasses(accentColor)}></div>\n      <div>\n        <h3>{title}</h3>\n        <h1>{sectionTitle}</h1>\n      </div>\n    </div>\n    {!!description && <div className={style.description}>{description}</div>}\n  </header>\n)\n\nHeader.defaultProps = {\n  description: ``,\n}\n\nHeader.propTypes = {\n  accentColor: PropTypes.oneOf([ACCENT_BLUE, ACCENT_GREEN, ACCENT_RED]).isRequired,\n  title: PropTypes.string.isRequired,\n  sectionTitle: PropTypes.string.isRequired,\n  description: PropTypes.string,\n}\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"#03030c\",\"white_faded\":\"rgba(255,255,255,0.95)\",\"filter\":\"style--filter--1usFb\",\"filterActive\":\"style--filterActive--1nW7a\",\"filters\":\"style--filters--TYHrL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"#03030c\",\"white_faded\":\"rgba(255,255,255,0.95)\",\"borderBlue\":\"style--borderBlue--1ePo0\",\"borderGreen\":\"style--borderGreen--3ZxpL\",\"borderRed\":\"style--borderRed--2VTQu\",\"description\":\"style--description--1e9ns\",\"header\":\"style--header--2Cxvk\",\"title\":\"style--title--1PW1x\"};"],"sourceRoot":""}