{"version":3,"sources":["webpack://lingene/./src/components/header/header.js","webpack://lingene/./src/components/header/style.scss","webpack://lingene/./src/components/collection/style.scss","webpack://lingene/./src/components/collection/collection.js","webpack://lingene/./src/pages/photography/collections.js"],"names":["cx","classNames","borderBlue","borderGreen","borderRed","getBorderClasses","accentColor","ACCENT_BLUE","ACCENT_GREEN","ACCENT_RED","Header","title","sectionTitle","description","className","defaultProps","postDetail","CollectionPost","frontmatter","fields","excerpt","key","slug","style","backgroundColor","Link","to","G","alt","heroAlt","image","hero","childImageSharp","gatsbyImageData","location","date","headerData","posts","map","data","allMarkdownRemark","nodes"],"mappings":"kLAeMA,EAAKC,SAAgB,CACzBC,WCbsB,2BDctBC,YCfuB,4BDgBvBC,UCjBqB,4BDoBjBC,EAAmB,SAACC,GAAD,OACrBN,EAAG,CACCE,WAAYI,IAAgBC,KAC5BJ,YAAaG,IAAgBE,KAC7BJ,UAAWE,IAAgBG,QAI7BC,EAAS,SAAC,GAAD,IAAGJ,EAAH,EAAGA,YAAaK,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,aAAcC,EAArC,EAAqCA,YAArC,OACb,0BAAQC,UCzBU,wBD0BhB,uBAAKA,UCzBU,uBD0Bb,uBAAKA,UAAWT,EAAiBC,KACjC,2BACE,0BAAKK,GACL,0BAAKC,OAGNC,GAAe,uBAAKC,UClCF,6BDkCgCD,KAIzDH,EAAOK,aAAe,CACpBF,YAAY,IAUd,S,yJE/CWG,EAAa,2BCYlBC,EAAiB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,OAAsB,EAAdC,QAC7C,OACE,2BAASC,IAAKF,EAAOG,KAAMC,MAAO,CAACC,gBAAiBN,EAAYM,kBAC9D,gBAAC,EAAAC,KAAD,CAAMC,GAAIP,EAAOG,KAAMR,UDhBX,sBCiBV,uBAAKA,UDlBY,6BCmBf,gBAAC,EAAAa,EAAD,CACEC,IAAKV,EAAYW,QACjBf,UDvBM,qBCwBNgB,MAAOZ,EAAYa,KAAKC,gBAAgBC,mBAG5C,0BAAQnB,UD1BI,wBC2BV,yBAAOA,UAAWE,GAAaE,EAAYgB,UAC3C,sBAAIpB,UDxBS,2BCwBcI,EAAYP,OACvC,yBAAOG,UAAWE,GAAaE,EAAYiB,UAOrDlB,EAAeF,aAAe,CAC5BK,QAAQ,IAmBV,IAkBA,EAlBmB,SAAC,GAA2B,IAAzBgB,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,MAC9B,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAK1B,MAAOyB,EAAWxB,aAAcC,YAAauB,EAAWvB,cAC7D,gBAAC,IAAWuB,GACXC,EAAMC,IAAIrB,KChCnB,EAzBoB,SAAC,GAAc,IAC3BoB,EAD0B,EAAXE,KACFC,kBAAkBC,MAErC,OACE,gBAAC,EAAD,CACEL,WAAY,CACV9B,YAAaG,KACbE,MAAO,cACPC,aAAc,cACdC,YACE,oFAEJwB,MAAOA","file":"component---src-pages-photography-collections-js-ae087442e880e8a0d288.js","sourcesContent":["import classNames from \"classnames/bind\"\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { ACCENT_BLUE, ACCENT_GREEN, ACCENT_RED } from \"../../utils/defs\"\n\nimport {\n  borderBlue,\n  borderGreen,\n  borderRed,\n  description as descriptionStyle,\n  header as headerStyle,\n  title as titleStyle,\n} from \"./style.scss\"\n\nconst cx = classNames.bind({\n  borderBlue,\n  borderGreen,\n  borderRed,\n})\n\nconst getBorderClasses = (accentColor) => (\n    cx({\n        borderBlue: accentColor === ACCENT_BLUE,\n        borderGreen: accentColor === ACCENT_GREEN,\n        borderRed: accentColor === ACCENT_RED,\n    })\n)\n\nconst Header = ({ accentColor, title, sectionTitle, description }) => (\n  <header className={headerStyle}>\n    <div className={titleStyle}>\n      <div className={getBorderClasses(accentColor)}></div>\n      <div>\n        <h3>{title}</h3>\n        <h1>{sectionTitle}</h1>\n      </div>\n    </div>\n    {!!description && <div className={descriptionStyle}>{description}</div>}\n  </header>\n)\n\nHeader.defaultProps = {\n  description: ``,\n}\n\nHeader.propTypes = {\n  accentColor: PropTypes.oneOf([ACCENT_BLUE, ACCENT_GREEN, ACCENT_RED]).isRequired,\n  title: PropTypes.string.isRequired,\n  sectionTitle: PropTypes.string.isRequired,\n  description: PropTypes.string,\n}\n\nexport default Header\n","// extracted by mini-css-extract-plugin\nexport var borderRed = \"style--borderRed--Ky7vy\";\nexport var borderGreen = \"style--borderGreen--aGofA\";\nexport var borderBlue = \"style--borderBlue--2KvrE\";\nexport var description = \"style--description--Q-x-7\";\nexport var header = \"style--header--3LH-S\";\nexport var title = \"style--title--3pXfs\";","// extracted by mini-css-extract-plugin\nexport var screen_mobile_small = \"400\";\nexport var hero = \"style--hero--30EIH\";\nexport var header = \"style--header--1Fapq\";\nexport var heroWrapper = \"style--heroWrapper--x7pwN\";\nexport var post = \"style--post--3IWb9\";\nexport var postDetail = \"style--postDetail--3jmM2\";\nexport var postTitle = \"style--postTitle--1E4Ao\";","import { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport Seo from \"../seo\"\nimport Container from \"../container/container\"\nimport Header from \"../header/header\"\n\nimport {\n  header,\n  hero,\n  heroWrapper,\n  post,\n  postDetail,\n  postTitle,\n} from \"./style.scss\"\n\nconst CollectionPost = ({ frontmatter, fields, excerpt }) => {\n  return (\n    <article key={fields.slug} style={{backgroundColor: frontmatter.backgroundColor}}>\n      <Link to={fields.slug} className={post}>\n        <div className={heroWrapper}>\n          <GatsbyImage\n            alt={frontmatter.heroAlt}\n            className={hero}\n            image={frontmatter.hero.childImageSharp.gatsbyImageData}\n          />\n        </div>\n        <header className={header}>\n          <small className={postDetail}>{frontmatter.location}</small>\n          <h2 className={postTitle}>{frontmatter.title}</h2>\n          <small className={postDetail}>{frontmatter.date}</small>\n        </header>\n      </Link>\n    </article>\n  )\n}\n\nCollectionPost.defaultProps = {\n  excerpt: ``,\n}\n\nCollectionPost.propTypes = {\n  frontmatter: PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    location: PropTypes.string.isRequired,\n    backgroundColor: PropTypes.string.isRequired,\n    hero: PropTypes.object.isRequired,\n    heroAlt: PropTypes.string.isRequired,\n  }).isRequired,\n  fields: PropTypes.shape({\n    slug: PropTypes.string.isRequired,\n  }).isRequired,\n  excerpt: PropTypes.string,\n}\n\nconst Collection = ({ headerData, posts }) => {\n    return (\n      <Container>\n        <Seo title={headerData.sectionTitle} description={headerData.description} />\n        <Header {...headerData} />\n        {posts.map(CollectionPost)}\n      </Container>\n    )\n}\n\nCollection.propTypes = {\n  headerData: PropTypes.shape({\n    sectionTitle: PropTypes.string.isRequired,\n    description: PropTypes.string,\n  }).isRequired,\n  posts: PropTypes.array.isRequired,\n}\n\nexport default Collection\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport { ACCENT_RED } from \"../../utils/defs\"\nimport Collection from \"../../components/collection/collection\"\n\nconst Collections = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  return (\n    <Collection\n      headerData={{\n        accentColor: ACCENT_RED,\n        title: \"Collections\",\n        sectionTitle: \"Photography\",\n        description:\n          \"Moments from my life and past trips. Photographs taken on both digital and film.\",\n      }}\n      posts={posts}\n    />\n  )\n}\n\nCollections.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      nodes: PropTypes.arrayOf(PropTypes.object),\n    }),\n  }).isRequired,\n}\n\nexport default Collections\n\nexport const pageQuery = graphql`\n         query {\n           allMarkdownRemark(\n             sort: { fields: [frontmatter___date], order: DESC }\n           ) {\n             nodes {\n               excerpt\n               fields {\n                 slug\n               }\n               frontmatter {\n                 date(formatString: \"YYYY\")\n                 title\n                 description\n                 location\n                 backgroundColor\n                 hero {\n                   childImageSharp {\n                     ...ImageFragment\n                   }\n                 }\n                 heroAlt\n               }\n             }\n           }\n         }\n       `\n"],"sourceRoot":""}