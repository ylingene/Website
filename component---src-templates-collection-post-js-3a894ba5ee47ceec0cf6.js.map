{"version":3,"sources":["webpack://lingene/./src/templates/collection-post.js","webpack://lingene/./src/templates/style.scss"],"names":["data","pageContext","post","markdownRemark","frontmatter","date","description","hero","location","photos","title","images","childrenYaml","metaImage","childImageSharp","original","keywords","previous","next","excerpt","className","dangerouslySetInnerHTML","__html","html","Link","to","COLLECTIONS_PATH","fluidImages","fields","slug","rel"],"mappings":"oNA4GA,EA3F2B,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1BC,EAAOF,EAAKG,eAClB,EAOID,EAAKE,YANLC,EADJ,EACIA,KACAC,EAFJ,EAEIA,YACAC,EAHJ,EAGIA,KACAC,EAJJ,EAIIA,SACAC,EALJ,EAKIA,OACAC,EANJ,EAMIA,MAEEC,EAASF,EAASA,EAAOG,aAAe,GACxCC,EAAYN,EAAKO,gBAAgBC,SACjCC,EAAW,CAACN,EAAOF,EAAR,4BACTS,EAAmBhB,EAAnBgB,SAAUC,EAASjB,EAATiB,KAElB,OACI,gBAAC,IAAD,KACI,gBAAC,IAAD,CACIR,MAAOA,EACPJ,YAAaA,GAAeJ,EAAKiB,QACjCH,SAAUA,EACVH,UAAWA,IAEf,0BAAQO,UCnCA,wBDoCJ,0BAAKZ,GACL,0BAAKE,GACL,6BAAQL,IAEZ,uBAAKe,UCzCW,gCD0CZ,+BACI,2BACIA,UC7CH,wBD8CGC,wBAAyB,CAAEC,OAAQpB,EAAKqB,SAGhD,uBAAKH,UCnDW,oCDoDZ,gBAAC,EAAAI,KAAD,CAAMC,GAAIC,MAAV,yBAGR,gBAAC,IAAD,CAASC,YAAahB,IACtB,2BACI,sBAAIS,UCxDc,sCDyDd,0BACKH,GACG,gBAAC,EAAAO,KAAD,CAAMC,GAAIR,EAASW,OAAOC,KAAMC,IAAI,QAApC,KACOb,EAASb,YAAYM,QAIpC,0BACKQ,GACG,gBAAC,EAAAM,KAAD,CAAMC,GAAIP,EAAKU,OAAOC,KAAMC,IAAI,QAC3BZ,EAAKd,YAAYM,MADtB","file":"component---src-templates-collection-post-js-3a894ba5ee47ceec0cf6.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport PropTypes from \"prop-types\"\n\nimport Container from \"../components/container/container\"\nimport Gallery from \"../components/gallery/gallery\"\nimport Seo from \"../components/seo\"\nimport { COLLECTIONS_PATH } from \"../utils/defs\"\n\nimport {\n    backLinkNavigation,\n    collectionNavigation,\n    content,\n    contentSection,\n    header as headerStyle,\n} from \"./style.scss\"\n\nconst CollectionTemplate = ({ data, pageContext }) => {\n    const post = data.markdownRemark\n    const {\n        date,\n        description,\n        hero,\n        location,\n        photos,\n        title,\n    } = post.frontmatter\n    const images = photos ? photos.childrenYaml : []\n    const metaImage = hero.childImageSharp.original\n    const keywords = [title, location, `photography`, `collection`]\n    const { previous, next } = pageContext\n\n    return (\n        <Container>\n            <Seo\n                title={title}\n                description={description || post.excerpt}\n                keywords={keywords}\n                metaImage={metaImage}\n            />\n            <header className={headerStyle}>\n                <h3>{location}</h3>\n                <h1>{title}</h1>\n                <small>{date}</small>\n            </header>\n            <div className={contentSection}>\n                <article>\n                    <section\n                        className={content}\n                        dangerouslySetInnerHTML={{ __html: post.html }}\n                    />\n                </article>\n                <div className={backLinkNavigation}>\n                    <Link to={COLLECTIONS_PATH}>back to collections</Link>\n                </div>\n            </div>\n            <Gallery fluidImages={images} />\n            <nav>\n                <ul className={collectionNavigation}>\n                    <li>\n                        {previous && (\n                            <Link to={previous.fields.slug} rel=\"prev\">\n                                ← {previous.frontmatter.title}\n                            </Link>\n                        )}\n                    </li>\n                    <li>\n                        {next && (\n                            <Link to={next.fields.slug} rel=\"next\">\n                                {next.frontmatter.title} →\n                            </Link>\n                        )}\n                    </li>\n                </ul>\n            </nav>\n        </Container>\n    )\n}\n\nCollectionTemplate.propTypes = {\n    data: PropTypes.shape({\n        markdownRemark: PropTypes.shape({\n            id: PropTypes.string,\n            excerpt: PropTypes.string,\n            html: PropTypes.string,\n            frontmatter: PropTypes.shape({\n                title: PropTypes.string,\n                date: PropTypes.string,\n                description: PropTypes.string,\n                hero: PropTypes.shape({\n                    childImageSharp: PropTypes.shape({\n                        original: PropTypes.shape({\n                            src: PropTypes.string,\n                            height: PropTypes.number,\n                            width: PropTypes.number,\n                        }),\n                    }),\n                }),\n                location: PropTypes.string,\n                photos: PropTypes.shape({\n                    childrenYaml: PropTypes.array,\n                }),\n            }),\n        }),\n    }).isRequired,\n    pageContext: PropTypes.object.isRequired,\n}\n\nexport default CollectionTemplate\n\nexport const pageQuery = graphql`\n    query CollectionBySlug($slug: String!) {\n        markdownRemark(fields: { slug: { eq: $slug } }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM YYYY\")\n                description\n                hero {\n                    childImageSharp {\n                        ...MetaImageFragment\n                    }\n                }\n                location\n                photos {\n                    childrenYaml {\n                        ...GalleryImageFragment\n                    }\n                }\n            }\n        }\n    }\n`\n","// extracted by mini-css-extract-plugin\nexport var backLinkNavigation = \"style--backLinkNavigation--3IamH\";\nexport var collectionNavigation = \"style--collectionNavigation--2eZKE\";\nexport var content = \"style--content--3pxhw\";\nexport var contentSection = \"style--contentSection--15gk7\";\nexport var header = \"style--header--2KulW\";"],"sourceRoot":""}