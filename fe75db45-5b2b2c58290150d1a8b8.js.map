{"version":3,"sources":["webpack://lingene/./node_modules/photoswipe/dist/photoswipe.esm.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","createElement","className","tagName","appendToEl","el","document","appendChild","equalizePoints","p1","p2","x","y","undefined","id","roundPoint","p","Math","round","getDistanceBetween","abs","sqrt","pointsEqual","clamp","val","min","max","toTransformString","scale","propValue","setTransform","style","transform","setTransitionStyle","prop","duration","ease","transition","setWidthHeight","w","h","width","height","LOAD_STATE","isSafari","navigator","vendor","match","supportsPassive","window","addEventListener","get","DOMEvents","_pool","value","type","listener","passive","_toggleListener","_this","poolItem","unbind","skipPool","_this2","methodName","split","eType","eventOptions","getViewportSize","options","pswp","getViewportSizeFn","newViewportSize","documentElement","clientWidth","innerHeight","parsePaddingOption","viewportSize","itemData","index","paddingValue","paddingFn","padding","legacyPropName","toUpperCase","slice","getPanAreaSize","PanBounds","slide","currZoomLevel","center","reset","_updateAxis","dispatch","axis","elSize","data","panAreaSize","panOffset","ZoomLevel","maxWidth","maxHeight","elementSize","hRatio","vRatio","fit","fill","vFill","initial","_getInitial","secondary","_getSecondary","_getMax","zoomLevels","slideData","optionPrefix","optionName","optionValue","Number","_parseZoomLevelOption","Slide","isActive","currIndex","currentResolution","isFirstSlide","opener","isOpen","pan","content","contentLoader","getContentBySlide","container","bounds","prevDisplayedWidth","prevDisplayedHeight","activate","deactivate","holderElement","transformOrigin","calculateSize","load","updateContentSize","appendHeavy","zoomAndPanToInitial","applyCurrentZoomPan","heavyAppended","mainScroll","isShifted","defaultPrevented","append","hasSlide","remove","update","panTo","force","scaleMultiplier","sizeChanged","setDisplayedSize","placeholder","element","destZoomLevel","centerPoint","transitionDuration","ignoreBounds","_this3","isZoomable","animations","stopAllPan","prevZoomLevel","setZoomLevel","calculateZoomToPanOffset","finishTransition","_setResolution","startTransition","isPan","name","getCurrentTransform","onComplete","easing","zoomTo","zoomAnimationDuration","point","getViewportCenterPoint","zoomFactor","correctPan","panX","panY","_applyZoomTransform","currSlide","zoom","newResolution","DragHandler","gestures","startPan","stopAll","_this$gestures","prevP1","dragAxis","closeOnVerticalDrag","isMultitouch","_setPanWithFriction","bgOpacity","_getVerticalDragRatio","applyBgOpacity","_panOrMoveMainScroll","_this$gestures2","velocity","indexDiff","currentSlideVisibilityRatio","getCurrSlideX","moveIndexBy","correctZoomPan","_finishPanGestureForAxis","panPos","restoreBgOpacity","projectedPosition","initialVelocity","decelerationRate","project","vDragRatio","projectedVDragRatio","close","correctedPanPosition","dampingRatio","initialBgOpacity","totalPanDist","startSpring","start","end","onUpdate","pos","animationProgressRatio","floor","_this$gestures3","delta","newMainScrollX","isPannable","moveTo","newPan","allowPanToNext","currSlideMainScrollX","mainScrollShiftDiff","isLeftToRight","isRightToLeft","potentialPan","customFriction","_this$pswp$currSlide","getZoomPointsCenter","ZoomHandler","_startPan","_startZoomPoint","_zoomPoint","_startZoomLevel","_wasOverFitZoomLevel","_this$gestures4","startP1","startP2","minZoomLevel","maxZoomLevel","pinchToClose","_calculatePanForZoomLevel","ignoreGesture","destinationZoomLevel","currZoomLevelNeedsChange","initialPan","destinationPan","panNeedsChange","naturalFrequency","now","newZoomLevel","didTapOnMainContent","event","closest","TapHandler","originalEvent","targetClassList","classList","isImageClick","contains","isBackgroundClick","_doClickOrTapAction","actionName","actionFullName","toggleZoom","clickToCloseNonZoomable","toggle","Gestures","_this4","prevP2","_lastStartP1","_intervalP1","_numActivePoints","_ongoingPointers","_touchEventEnabled","_pointerEventEnabled","PointerEvent","supportsTouch","maxTouchPoints","drag","tapHandler","on","events","add","scrollWrap","_onClick","_bindEvents","ontouchmove","ontouchend","pref","down","up","cancel","cancelEvent","onPointerDown","bind","onPointerMove","onPointerUp","isMousePointer","pointerType","button","mouseDetected","_preventPointerEventBehaviour","_updatePoints","pointerDown","_clearTapTimer","preventDefault","isDragging","isZooming","_finishDrag","_updateStartPoints","_rafStopLoop","_rafRenderLoop","_calculateDragDirection","_intervalTime","Date","_velocityCalculated","_updateVelocity","_finishTap","change","_updatePrevPoints","raf","requestAnimationFrame","time","_getVelocity","_this5","indexOf","tapDelay","doubleTapAction","_tapTimer","doubleTap","setTimeout","tap","click","clearTimeout","displacement","cancelAnimationFrame","pointerEvent","pointerIndex","findIndex","ongoingPoiner","pointerId","splice","_convertEventPosToPoint","touchEvent","touches","diff","axisToCheck","pageX","offset","pageY","identifier","stopPropagation","MainScroll","slideWidth","itemHolders","resetPosition","resizeSlides","_this6","newSlideWidth","spacing","slideWidthChanged","itemHolder","_containerShiftIndex","resize","_currPositionIndex","_prevPositionIndex","setAttribute","display","getNumItems","animate","velocityX","_this7","newIndex","potentialIndex","numSlides","canLoop","getLoopedIndex","distance","stopMainScroll","destinationX","isMainScroll","updateCurrItem","currDiff","currDistance","positionDifference","tempHolder","diffAbs","shift","setContent","pop","unshift","setIsActive","updateLazy","dragging","newSlideIndexOffset","Keyboard","_this8","initialPointerPos","_focusRoot","_onFocusIn","_onKeyDown","lastActiveElement","activeElement","returnFocus","_wasFocused","focus","which","ctrlKey","metaKey","altKey","shiftKey","specialKeyUsed","keydownAction","isForward","keyCode","escKey","arrowKeys","template","CSSAnimation","props","_this9","onFinish","_target","_onComplete","_onTransitionEnd","_helperTimeout","_finalizeAnimation","_finished","removeEventListener","SpringEaser","_dampingRatio","_naturalFrequency","_dampedFrequency","deltaPosition","deltaTime","coeff","naturalDumpingPow","pow","E","dumpedFCos","cos","dumpedFSin","sin","SpringAnimation","_this10","easer","prevTime","_raf","animationLoop","easeFrame","Animations","activeAnimations","_start","isSpring","animation","_this11","stop","destroy","some","ScrollWheel","_onWheel","deltaX","deltaY","wheelToZoom","deltaMode","clientX","clientY","UIElement","elementHTML","html","isButton","concat","toLowerCase","title","ariaLabel","innerHTML","htmlData","isCustomSVG","svgData","out","join","size","outlineID","inner","addElementHTML","onInit","onClick","onclick","appendTo","topBar","applyFilters","initArrowButton","isNextButton","loop","disabled","arrowPrev","order","arrowNext","closeButton","zoomButton","loadingIndicator","indicatorElement","isVisible","delayTimeout","setIndicatorVisibility","visible","updatePreloaderVisibility","isLoading","preloaderDelay","ui","counterIndicator","counterElement","innerText","indexIndicatorSep","setZoomedIn","isZoomedIn","UI","_lastUpdatedZoomLevel","_this12","isRegistered","uiElementsData","sort","a","b","items","uiElementData","registerElement","_onZoomPanUpdate","elementData","_this$pswp","isClosing","currZoomLevelDiff","imageClickAction","PhotoSwipeEvent","details","assign","Eventable","_listeners","_filters","fn","priority","f1","f2","addFilter","removeFilter","_this13","_len","args","Array","_key","off","_this14","Placeholder","imageSrc","decoding","alt","src","parentNode","Content","instance","displayedImageWidth","displayedImageHeight","isAttached","state","_this15","keepPlaceholder","isLazy","reload","usePlaceholder","placeholderEl","parentElement","prepend","placeholderSrc","msrc","isImageContent","loadImage","_this16","imageElement","updateSrcsetSizes","srcset","complete","onLoaded","onload","onerror","onError","removePlaceholder","displayError","isError","isInitialSizeUpdate","image","sizesWidth","dataset","largestUsedSize","parseInt","sizes","String","errorMsgEl","errorMsg","_this17","supportsDecode","isDecoding","decode","catch","finally","appendImage","_lazyLoadData","createContentFromData","lazyLoad","zoomLevel","ceil","ContentLoader","limit","preload","_cachedItems","loadSlideByIndex","getContentByIndex","getItemData","lazyLoadSlide","addToCache","setSlide","removeByIndex","indexToRemove","item","find","PhotoSwipeBase","_Eventable","_super","numItems","dataSource","_getGalleryDOMElements","gallery","dataSourceItem","isArray","Element","_domElementToItemData","galleryElement","children","childSelector","option","legacySelector","parent","elements","NodeList","from","selector","querySelectorAll","getElementsFromOption","linkEl","querySelector","pswpSrc","href","pswpSrcset","pswpWidth","pswpHeight","pswpType","thumbnailEl","currentSrc","getAttribute","pswpCropped","cropped","thumbCropped","MIN_OPACITY","Opener","isClosed","_prepareOpen","_thumbBounds","_this18","isOpening","_duration","hideAnimationDuration","maxWidthToAnimate","_applyStartProps","_croppedZoom","showAnimationDuration","showHideAnimationType","showHideOpacity","_initialThumbBounds","getThumbBounds","_placeholder","getPlaceholderElement","_useAnimation","_animateZoom","_animateRootOpacity","_animateBgOpacity","_opacityElement","bg","opacity","innerRect","_cropContainer1","_cropContainer2","overflow","_setClosedStateZoomPan","willChange","_this19","Promise","resolve","img","decoded","isDelaying","reject","_initiate","setProperty","_animateToOpenState","_animateToClosedState","_onAnimationComplete","_animateTo","containerOnePanX","containerOnePanY","containerTwoPanX","containerTwoPanY","_this20","animProps","defaultOptions","bgClickAction","tapAction","PhotoSwipe","_PhotoSwipeBase","_super2","_this21","_prepareOptions","_prevViewportSize","keyboard","_this22","isDestroying","_createMainStructure","rootClasses","mainClass","scrollWheel","isNaN","updateSize","pageYOffset","_initialItemData","_handlePageResize","_updatePageScrollOffset","open","goTo","_this$currSlide","removeAll","listeners","slideIndex","_this23","potentialHolderIndex","holder","hasMouse","matchMedia","matches","_this24","test","userAgent","setScrollOffset","appendHolders","init","body","thumbBounds","thumbnail","thumbAreaRect","thumbSelector","imageWidth","imageHeight","getBoundingClientRect","fillZoomLevel","offsetX","offsetY","left","top","getCroppedBoundsByElement","_getThumbBounds"],"mappings":"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","file":"fe75db45-5b2b2c58290150d1a8b8.js","sourcesContent":["import _defineProperty from \"/Users/lingene/code/lingene/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _assertThisInitialized from \"/Users/lingene/code/lingene/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/lingene/code/lingene/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/lingene/code/lingene/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lingene/code/lingene/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _classCallCheck from \"/Users/lingene/code/lingene/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lingene/code/lingene/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport \"core-js/modules/es.promise.finally.js\";\n\n/*!\n  * PhotoSwipe 5.3.4 - https://photoswipe.com\n  * (c) 2022 Dmytro Semenov\n  */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {undefined | null | false | '' | 0} Falsy */\n\n/** @typedef {keyof HTMLElementTagNameMap} HTMLElementTagName */\n\n/**\r\n * @template {HTMLElementTagName | Falsy} [T=\"div\"]\r\n * @template {Node | undefined} [NodeToAppendElementTo=undefined]\r\n * @param {string=} className\r\n * @param {T=} [tagName]\r\n * @param {NodeToAppendElementTo=} appendToEl\r\n * @returns {T extends HTMLElementTagName ? HTMLElementTagNameMap[T] : HTMLElementTagNameMap['div']}\r\n */\nfunction createElement(className, tagName, appendToEl) {\n  var el = document.createElement(tagName || 'div');\n\n  if (className) {\n    el.className = className;\n  }\n\n  if (appendToEl) {\n    appendToEl.appendChild(el);\n  } // @ts-expect-error\n\n\n  return el;\n}\n/**\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\n\n\nfunction equalizePoints(p1, p2) {\n  p1.x = p2.x;\n  p1.y = p2.y;\n\n  if (p2.id !== undefined) {\n    p1.id = p2.id;\n  }\n\n  return p1;\n}\n/**\r\n * @param {Point} p\r\n */\n\n\nfunction roundPoint(p) {\n  p.x = Math.round(p.x);\n  p.y = Math.round(p.y);\n}\n/**\r\n * Returns distance between two points.\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\n\n\nfunction getDistanceBetween(p1, p2) {\n  var x = Math.abs(p1.x - p2.x);\n  var y = Math.abs(p1.y - p2.y);\n  return Math.sqrt(x * x + y * y);\n}\n/**\r\n * Whether X and Y positions of points are qual\r\n *\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\n\n\nfunction pointsEqual(p1, p2) {\n  return p1.x === p2.x && p1.y === p2.y;\n}\n/**\r\n * The float result between the min and max values.\r\n *\r\n * @param {number} val\r\n * @param {number} min\r\n * @param {number} max\r\n */\n\n\nfunction clamp(val, min, max) {\n  return Math.min(Math.max(val, min), max);\n}\n/**\r\n * Get transform string\r\n *\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\n\n\nfunction toTransformString(x, y, scale) {\n  var propValue = 'translate3d(' + x + 'px,' + (y || 0) + 'px' + ',0)';\n\n  if (scale !== undefined) {\n    propValue += ' scale3d(' + scale + ',' + scale + ',1)';\n  }\n\n  return propValue;\n}\n/**\r\n * Apply transform:translate(x, y) scale(scale) to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {number} x\r\n * @param {number=} y\r\n * @param {number=} scale\r\n */\n\n\nfunction setTransform(el, x, y, scale) {\n  el.style.transform = toTransformString(x, y, scale);\n}\n\nvar defaultCSSEasing = 'cubic-bezier(.4,0,.22,1)';\n/**\r\n * Apply CSS transition to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string=} prop CSS property to animate\r\n * @param {number=} duration in ms\r\n * @param {string=} ease CSS easing function\r\n */\n\nfunction setTransitionStyle(el, prop, duration, ease) {\n  // inOut: 'cubic-bezier(.4, 0, .22, 1)', // for \"toggle state\" transitions\n  // out: 'cubic-bezier(0, 0, .22, 1)', // for \"show\" transitions\n  // in: 'cubic-bezier(.4, 0, 1, 1)'// for \"hide\" transitions\n  el.style.transition = prop ? prop + ' ' + duration + 'ms ' + (ease || defaultCSSEasing) : 'none';\n}\n/**\r\n * Apply width and height CSS properties to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {string | number} w\r\n * @param {string | number} h\r\n */\n\n\nfunction setWidthHeight(el, w, h) {\n  el.style.width = typeof w === 'number' ? w + 'px' : w;\n  el.style.height = typeof h === 'number' ? h + 'px' : h;\n}\n/**\r\n * @param {HTMLElement} el\r\n */\n\n\nfunction removeTransitionStyle(el) {\n  setTransitionStyle(el);\n}\n/**\r\n * @param {HTMLImageElement} img\r\n * @returns {Promise<HTMLImageElement | void>}\r\n */\n\n\nfunction decodeImage(img) {\n  if ('decode' in img) {\n    return img.decode().catch(function () {});\n  }\n\n  if (img.complete) {\n    return Promise.resolve(img);\n  }\n\n  return new Promise(function (resolve, reject) {\n    img.onload = function () {\n      return resolve(img);\n    };\n\n    img.onerror = reject;\n  });\n}\n/** @typedef {LOAD_STATE[keyof LOAD_STATE]} LoadState */\n\n/** @type {{ IDLE: 'idle'; LOADING: 'loading'; LOADED: 'loaded'; ERROR: 'error' }} */\n\n\nvar LOAD_STATE = {\n  IDLE: 'idle',\n  LOADING: 'loading',\n  LOADED: 'loaded',\n  ERROR: 'error'\n};\n/**\r\n * Check if click or keydown event was dispatched\r\n * with a special key or via mouse wheel.\r\n *\r\n * @param {MouseEvent | KeyboardEvent} e\r\n */\n\nfunction specialKeyUsed(e) {\n  if (e.which === 2 || e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {\n    return true;\n  }\n}\n/**\r\n * Parse `gallery` or `children` options.\r\n *\r\n * @param {import('../photoswipe.js').ElementProvider} option\r\n * @param {string=} legacySelector\r\n * @param {HTMLElement | Document} [parent]\r\n * @returns HTMLElement[]\r\n */\n\n\nfunction getElementsFromOption(option, legacySelector) {\n  var parent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : document;\n\n  /** @type {HTMLElement[]} */\n  var elements = [];\n\n  if (option instanceof Element) {\n    elements = [option];\n  } else if (option instanceof NodeList || Array.isArray(option)) {\n    elements = Array.from(option);\n  } else {\n    var selector = typeof option === 'string' ? option : legacySelector;\n\n    if (selector) {\n      elements = Array.from(parent.querySelectorAll(selector));\n    }\n  }\n\n  return elements;\n}\n/**\r\n * Check if browser is Safari\r\n *\r\n * @returns {boolean}\r\n */\n\n\nfunction isSafari() {\n  return !!(navigator.vendor && navigator.vendor.match(/apple/i));\n} // Detect passive event listener support\n\n\nvar supportsPassive = false;\n/* eslint-disable */\n\ntry {\n  window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  }));\n} catch (e) {}\n/* eslint-enable */\n\n/**\r\n * @typedef {Object} PoolItem\r\n * @prop {HTMLElement | Window | Document} target\r\n * @prop {string} type\r\n * @prop {(e: any) => void} listener\r\n * @prop {boolean} passive\r\n */\n\n\nvar DOMEvents = /*#__PURE__*/function () {\n  function DOMEvents() {\n    _classCallCheck(this, DOMEvents);\n\n    /**\r\n     * @type {PoolItem[]}\r\n     * @private\r\n     */\n    this._pool = [];\n  }\n  /**\r\n   * Adds event listeners\r\n   *\r\n   * @param {HTMLElement | Window | Document} target\r\n   * @param {string} type Can be multiple, separated by space.\r\n   * @param {(e: any) => void} listener\r\n   * @param {boolean=} passive\r\n   */\n\n\n  _createClass(DOMEvents, [{\n    key: \"add\",\n    value: function add(target, type, listener, passive) {\n      this._toggleListener(target, type, listener, passive);\n    }\n    /**\r\n     * Removes event listeners\r\n     *\r\n     * @param {HTMLElement | Window | Document} target\r\n     * @param {string} type\r\n     * @param {(e: any) => void} listener\r\n     * @param {boolean=} passive\r\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(target, type, listener, passive) {\n      this._toggleListener(target, type, listener, passive, true);\n    }\n    /**\r\n     * Removes all bound events\r\n     */\n\n  }, {\n    key: \"removeAll\",\n    value: function removeAll() {\n      var _this = this;\n\n      this._pool.forEach(function (poolItem) {\n        _this._toggleListener(poolItem.target, poolItem.type, poolItem.listener, poolItem.passive, true, true);\n      });\n\n      this._pool = [];\n    }\n    /**\r\n     * Adds or removes event\r\n     *\r\n     * @param {HTMLElement | Window | Document} target\r\n     * @param {string} type\r\n     * @param {(e: any) => void} listener\r\n     * @param {boolean} passive\r\n     * @param {boolean=} unbind Whether the event should be added or removed\r\n     * @param {boolean=} skipPool Whether events pool should be skipped\r\n     */\n\n  }, {\n    key: \"_toggleListener\",\n    value: function _toggleListener(target, type, listener, passive, unbind, skipPool) {\n      var _this2 = this;\n\n      if (!target) {\n        return;\n      }\n\n      var methodName = unbind ? 'removeEventListener' : 'addEventListener';\n      var types = type.split(' ');\n      types.forEach(function (eType) {\n        if (eType) {\n          // Events pool is used to easily unbind all events when PhotoSwipe is closed,\n          // so developer doesn't need to do this manually\n          if (!skipPool) {\n            if (unbind) {\n              // Remove from the events pool\n              _this2._pool = _this2._pool.filter(function (poolItem) {\n                return poolItem.type !== eType || poolItem.listener !== listener || poolItem.target !== target;\n              });\n            } else {\n              // Add to the events pool\n              _this2._pool.push({\n                target: target,\n                type: eType,\n                listener: listener,\n                passive: passive\n              });\n            }\n          } // most PhotoSwipe events call preventDefault,\n          // and we do not need browser to scroll the page\n\n\n          var eventOptions = supportsPassive ? {\n            passive: passive || false\n          } : false;\n          target[methodName](eType, listener, eventOptions);\n        }\n      });\n    }\n  }]);\n\n  return DOMEvents;\n}();\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {PhotoSwipe} pswp\r\n */\n\n\nfunction getViewportSize(options, pswp) {\n  if (options.getViewportSizeFn) {\n    var newViewportSize = options.getViewportSizeFn(options, pswp);\n\n    if (newViewportSize) {\n      return newViewportSize;\n    }\n  }\n\n  return {\n    x: document.documentElement.clientWidth,\n    // TODO: height on mobile is very incosistent due to toolbar\n    // find a way to improve this\n    //\n    // document.documentElement.clientHeight - doesn't seem to work well\n    y: window.innerHeight\n  };\n}\n/**\r\n * Parses padding option.\r\n * Supported formats:\r\n *\r\n * // Object\r\n * padding: {\r\n *  top: 0,\r\n *  bottom: 0,\r\n *  left: 0,\r\n *  right: 0\r\n * }\r\n *\r\n * // A function that returns the object\r\n * paddingFn: (viewportSize, itemData, index) => {\r\n *  return {\r\n *    top: 0,\r\n *    bottom: 0,\r\n *    left: 0,\r\n *    right: 0\r\n *  };\r\n * }\r\n *\r\n * // Legacy variant\r\n * paddingLeft: 0,\r\n * paddingRight: 0,\r\n * paddingTop: 0,\r\n * paddingBottom: 0,\r\n *\r\n * @param {'left' | 'top' | 'bottom' | 'right'} prop\r\n * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n * @param {{ x?: number; y?: number }} viewportSize PhotoSwipe viewport size, for example: { x:800, y:600 }\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {number} index Slide index\r\n * @returns {number}\r\n */\n\n\nfunction parsePaddingOption(prop, options, viewportSize, itemData, index) {\n  /** @type {number} */\n  var paddingValue;\n\n  if (options.paddingFn) {\n    paddingValue = options.paddingFn(viewportSize, itemData, index)[prop];\n  } else if (options.padding) {\n    paddingValue = options.padding[prop];\n  } else {\n    var legacyPropName = 'padding' + prop[0].toUpperCase() + prop.slice(1); // @ts-expect-error\n\n    if (options[legacyPropName]) {\n      // @ts-expect-error\n      paddingValue = options[legacyPropName];\n    }\n  }\n\n  return paddingValue || 0;\n}\n/**\r\n * @param {PhotoSwipeOptions} options\r\n * @param {{ x?: number; y?: number }} viewportSize\r\n * @param {SlideData} itemData\r\n * @param {number} index\r\n */\n\n\nfunction getPanAreaSize(options, viewportSize, itemData, index) {\n  return {\n    x: viewportSize.x - parsePaddingOption('left', options, viewportSize, itemData, index) - parsePaddingOption('right', options, viewportSize, itemData, index),\n    y: viewportSize.y - parsePaddingOption('top', options, viewportSize, itemData, index) - parsePaddingOption('bottom', options, viewportSize, itemData, index)\n  };\n}\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {{ x?: number; y?: number }} Point */\n\n/** @typedef {'x' | 'y'} Axis */\n\n/**\r\n * Calculates minimum, maximum and initial (center) bounds of a slide\r\n */\n\n\nvar PanBounds = /*#__PURE__*/function () {\n  /**\r\n   * @param {Slide} slide\r\n   */\n  function PanBounds(slide) {\n    _classCallCheck(this, PanBounds);\n\n    this.slide = slide;\n    this.currZoomLevel = 1;\n    /** @type {Point} */\n\n    this.center = {};\n    /** @type {Point} */\n\n    this.max = {};\n    /** @type {Point} */\n\n    this.min = {};\n    this.reset();\n  }\n  /**\r\n   * _getItemBounds\r\n   *\r\n   * @param {number} currZoomLevel\r\n   */\n\n\n  _createClass(PanBounds, [{\n    key: \"update\",\n    value: function update(currZoomLevel) {\n      this.currZoomLevel = currZoomLevel;\n\n      if (!this.slide.width) {\n        this.reset();\n      } else {\n        this._updateAxis('x');\n\n        this._updateAxis('y');\n\n        this.slide.pswp.dispatch('calcBounds', {\n          slide: this.slide\n        });\n      }\n    }\n    /**\r\n     * _calculateItemBoundsForAxis\r\n     *\r\n     * @param {Axis} axis\r\n     */\n\n  }, {\n    key: \"_updateAxis\",\n    value: function _updateAxis(axis) {\n      var pswp = this.slide.pswp;\n      var elSize = this.slide[axis === 'x' ? 'width' : 'height'] * this.currZoomLevel;\n      var paddingProp = axis === 'x' ? 'left' : 'top';\n      var padding = parsePaddingOption(paddingProp, pswp.options, pswp.viewportSize, this.slide.data, this.slide.index);\n      var panAreaSize = this.slide.panAreaSize[axis]; // Default position of element.\n      // By defaul it is center of viewport:\n\n      this.center[axis] = Math.round((panAreaSize - elSize) / 2) + padding; // maximum pan position\n\n      this.max[axis] = elSize > panAreaSize ? Math.round(panAreaSize - elSize) + padding : this.center[axis]; // minimum pan position\n\n      this.min[axis] = elSize > panAreaSize ? padding : this.center[axis];\n    } // _getZeroBounds\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.center.x = 0;\n      this.center.y = 0;\n      this.max.x = 0;\n      this.max.y = 0;\n      this.min.x = 0;\n      this.min.y = 0;\n    }\n    /**\r\n     * Correct pan position if it's beyond the bounds\r\n     *\r\n     * @param {Axis} axis x or y\r\n     * @param {number} panOffset\r\n     */\n\n  }, {\n    key: \"correctPan\",\n    value: function correctPan(axis, panOffset) {\n      // checkPanBounds\n      return clamp(panOffset, this.max[axis], this.min[axis]);\n    }\n  }]);\n\n  return PanBounds;\n}();\n\nvar MAX_IMAGE_WIDTH = 4000;\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {'fit' | 'fill' | number | ((zoomLevelObject: ZoomLevel) => number)} ZoomLevelOption */\n\n/**\r\n * Calculates zoom levels for specific slide.\r\n * Depends on viewport size and image size.\r\n */\n\nvar ZoomLevel = /*#__PURE__*/function () {\n  /**\r\n   * @param {PhotoSwipeOptions} options PhotoSwipe options\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {number} index Slide index\r\n   * @param {PhotoSwipe=} pswp PhotoSwipe instance, can be undefined if not initialized yet\r\n   */\n  function ZoomLevel(options, itemData, index, pswp) {\n    _classCallCheck(this, ZoomLevel);\n\n    this.pswp = pswp;\n    this.options = options;\n    this.itemData = itemData;\n    this.index = index;\n  }\n  /**\r\n   * Calculate initial, secondary and maximum zoom level for the specified slide.\r\n   *\r\n   * It should be called when either image or viewport size changes.\r\n   *\r\n   * @param {number} maxWidth\r\n   * @param {number} maxHeight\r\n   * @param {{ x?: number; y?: number }} panAreaSize\r\n   */\n\n\n  _createClass(ZoomLevel, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, panAreaSize) {\n      this.elementSize = {\n        x: maxWidth,\n        y: maxHeight\n      };\n      this.panAreaSize = panAreaSize;\n      var hRatio = this.panAreaSize.x / this.elementSize.x;\n      var vRatio = this.panAreaSize.y / this.elementSize.y;\n      this.fit = Math.min(1, hRatio < vRatio ? hRatio : vRatio);\n      this.fill = Math.min(1, hRatio > vRatio ? hRatio : vRatio); // zoom.vFill defines zoom level of the image\n      // when it has 100% of viewport vertical space (height)\n\n      this.vFill = Math.min(1, vRatio);\n      this.initial = this._getInitial();\n      this.secondary = this._getSecondary();\n      this.max = Math.max(this.initial, this.secondary, this._getMax());\n      this.min = Math.min(this.fit, this.initial, this.secondary);\n\n      if (this.pswp) {\n        this.pswp.dispatch('zoomLevelsUpdate', {\n          zoomLevels: this,\n          slideData: this.itemData\n        });\n      }\n    }\n    /**\r\n     * Parses user-defined zoom option.\r\n     *\r\n     * @private\r\n     * @param {'initial' | 'secondary' | 'max'} optionPrefix Zoom level option prefix (initial, secondary, max)\r\n     */\n\n  }, {\n    key: \"_parseZoomLevelOption\",\n    value: function _parseZoomLevelOption(optionPrefix) {\n      // eslint-disable-next-line max-len\n      var optionName =\n      /** @type {'initialZoomLevel' | 'secondaryZoomLevel' | 'maxZoomLevel'} */\n      optionPrefix + 'ZoomLevel';\n      var optionValue = this.options[optionName];\n\n      if (!optionValue) {\n        return;\n      }\n\n      if (typeof optionValue === 'function') {\n        return optionValue(this);\n      }\n\n      if (optionValue === 'fill') {\n        return this.fill;\n      }\n\n      if (optionValue === 'fit') {\n        return this.fit;\n      }\n\n      return Number(optionValue);\n    }\n    /**\r\n     * Get zoom level to which image will be zoomed after double-tap gesture,\r\n     * or when user clicks on zoom icon,\r\n     * or mouse-click on image itself.\r\n     * If you return 1 image will be zoomed to its original size.\r\n     *\r\n     * @private\r\n     * @return {number}\r\n     */\n\n  }, {\n    key: \"_getSecondary\",\n    value: function _getSecondary() {\n      var currZoomLevel = this._parseZoomLevelOption('secondary');\n\n      if (currZoomLevel) {\n        return currZoomLevel;\n      } // 3x of \"fit\" state, but not larger than original\n\n\n      currZoomLevel = Math.min(1, this.fit * 3);\n\n      if (currZoomLevel * this.elementSize.x > MAX_IMAGE_WIDTH) {\n        currZoomLevel = MAX_IMAGE_WIDTH / this.elementSize.x;\n      }\n\n      return currZoomLevel;\n    }\n    /**\r\n     * Get initial image zoom level.\r\n     *\r\n     * @private\r\n     * @return {number}\r\n     */\n\n  }, {\n    key: \"_getInitial\",\n    value: function _getInitial() {\n      return this._parseZoomLevelOption('initial') || this.fit;\n    }\n    /**\r\n     * Maximum zoom level when user zooms\r\n     * via zoom/pinch gesture,\r\n     * via cmd/ctrl-wheel or via trackpad.\r\n     *\r\n     * @private\r\n     * @return {number}\r\n     */\n\n  }, {\n    key: \"_getMax\",\n    value: function _getMax() {\n      var currZoomLevel = this._parseZoomLevelOption('max');\n\n      if (currZoomLevel) {\n        return currZoomLevel;\n      } // max zoom level is x4 from \"fit state\",\n      // used for zoom gesture and ctrl/trackpad zoom\n\n\n      return Math.max(1, this.fit * 4);\n    }\n  }]);\n\n  return ZoomLevel;\n}();\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/**\r\n * Renders and allows to control a single slide\r\n */\n\n\nvar Slide = /*#__PURE__*/function () {\n  /**\r\n   * @param {SlideData} data\r\n   * @param {number} index\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  function Slide(data, index, pswp) {\n    _classCallCheck(this, Slide);\n\n    this.data = data;\n    this.index = index;\n    this.pswp = pswp;\n    this.isActive = index === pswp.currIndex;\n    this.currentResolution = 0;\n    /** @type {Point} */\n\n    this.panAreaSize = {};\n    this.isFirstSlide = this.isActive && !pswp.opener.isOpen;\n    this.zoomLevels = new ZoomLevel(pswp.options, data, index, pswp);\n    this.pswp.dispatch('gettingData', {\n      slide: this,\n      data: this.data,\n      index: index\n    });\n    this.pan = {\n      x: 0,\n      y: 0\n    };\n    this.content = this.pswp.contentLoader.getContentBySlide(this);\n    this.container = createElement('pswp__zoom-wrap');\n    this.currZoomLevel = 1;\n    /** @type {number} */\n\n    this.width = this.content.width;\n    /** @type {number} */\n\n    this.height = this.content.height;\n    this.bounds = new PanBounds(this);\n    this.prevDisplayedWidth = -1;\n    this.prevDisplayedHeight = -1;\n    this.pswp.dispatch('slideInit', {\n      slide: this\n    });\n  }\n  /**\r\n   * If this slide is active/current/visible\r\n   *\r\n   * @param {boolean} isActive\r\n   */\n\n\n  _createClass(Slide, [{\n    key: \"setIsActive\",\n    value: function setIsActive(isActive) {\n      if (isActive && !this.isActive) {\n        // slide just became active\n        this.activate();\n      } else if (!isActive && this.isActive) {\n        // slide just became non-active\n        this.deactivate();\n      }\n    }\n    /**\r\n     * Appends slide content to DOM\r\n     *\r\n     * @param {HTMLElement} holderElement\r\n     */\n\n  }, {\n    key: \"append\",\n    value: function append(holderElement) {\n      this.holderElement = holderElement;\n      this.container.style.transformOrigin = '0 0'; // Slide appended to DOM\n\n      if (!this.data) {\n        return;\n      }\n\n      this.calculateSize();\n      this.load();\n      this.updateContentSize();\n      this.appendHeavy();\n      this.holderElement.appendChild(this.container);\n      this.zoomAndPanToInitial();\n      this.pswp.dispatch('firstZoomPan', {\n        slide: this\n      });\n      this.applyCurrentZoomPan();\n      this.pswp.dispatch('afterSetContent', {\n        slide: this\n      });\n\n      if (this.isActive) {\n        this.activate();\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load() {\n      this.content.load();\n      this.pswp.dispatch('slideLoad', {\n        slide: this\n      });\n    }\n    /**\r\n     * Append \"heavy\" DOM elements\r\n     *\r\n     * This may depend on a type of slide,\r\n     * but generally these are large images.\r\n     */\n\n  }, {\n    key: \"appendHeavy\",\n    value: function appendHeavy() {\n      var pswp = this.pswp;\n      var appendHeavyNearby = true; // todo\n      // Avoid appending heavy elements during animations\n\n      if (this.heavyAppended || !pswp.opener.isOpen || pswp.mainScroll.isShifted() || !this.isActive && !appendHeavyNearby) {\n        return;\n      }\n\n      if (this.pswp.dispatch('appendHeavy', {\n        slide: this\n      }).defaultPrevented) {\n        return;\n      }\n\n      this.heavyAppended = true;\n      this.content.append();\n      this.pswp.dispatch('appendHeavyContent', {\n        slide: this\n      });\n    }\n    /**\r\n     * Triggered when this slide is active (selected).\r\n     *\r\n     * If it's part of opening/closing transition -\r\n     * activate() will trigger after the transition is ended.\r\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      this.isActive = true;\n      this.appendHeavy();\n      this.content.activate();\n      this.pswp.dispatch('slideActivate', {\n        slide: this\n      });\n    }\n    /**\r\n     * Triggered when this slide becomes inactive.\r\n     *\r\n     * Slide can become inactive only after it was active.\r\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.isActive = false;\n      this.content.deactivate();\n\n      if (this.currZoomLevel !== this.zoomLevels.initial) {\n        // allow filtering\n        this.calculateSize();\n      } // reset zoom level\n\n\n      this.currentResolution = 0;\n      this.zoomAndPanToInitial();\n      this.applyCurrentZoomPan();\n      this.updateContentSize();\n      this.pswp.dispatch('slideDeactivate', {\n        slide: this\n      });\n    }\n    /**\r\n     * The slide should destroy itself, it will never be used again.\r\n     * (unbind all events and destroy internal components)\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.content.hasSlide = false;\n      this.content.remove();\n      this.container.remove();\n      this.pswp.dispatch('slideDestroy', {\n        slide: this\n      });\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (this.currZoomLevel === this.zoomLevels.initial || !this.isActive) {\n        // Keep initial zoom level if it was before the resize,\n        // as well as when this slide is not active\n        // Reset position and scale to original state\n        this.calculateSize();\n        this.currentResolution = 0;\n        this.zoomAndPanToInitial();\n        this.applyCurrentZoomPan();\n        this.updateContentSize();\n      } else {\n        // readjust pan position if it's beyond the bounds\n        this.calculateSize();\n        this.bounds.update(this.currZoomLevel);\n        this.panTo(this.pan.x, this.pan.y);\n      }\n    }\n    /**\r\n     * Apply size to current slide content,\r\n     * based on the current resolution and scale.\r\n     *\r\n     * @param {boolean=} force if size should be updated even if dimensions weren't changed\r\n     */\n\n  }, {\n    key: \"updateContentSize\",\n    value: function updateContentSize(force) {\n      // Use initial zoom level\n      // if resolution is not defined (user didn't zoom yet)\n      var scaleMultiplier = this.currentResolution || this.zoomLevels.initial;\n\n      if (!scaleMultiplier) {\n        return;\n      }\n\n      var width = Math.round(this.width * scaleMultiplier) || this.pswp.viewportSize.x;\n      var height = Math.round(this.height * scaleMultiplier) || this.pswp.viewportSize.y;\n\n      if (!this.sizeChanged(width, height) && !force) {\n        return;\n      }\n\n      this.content.setDisplayedSize(width, height);\n    }\n    /**\r\n     * @param {number} width\r\n     * @param {number} height\r\n     */\n\n  }, {\n    key: \"sizeChanged\",\n    value: function sizeChanged(width, height) {\n      if (width !== this.prevDisplayedWidth || height !== this.prevDisplayedHeight) {\n        this.prevDisplayedWidth = width;\n        this.prevDisplayedHeight = height;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"getPlaceholderElement\",\n    value: function getPlaceholderElement() {\n      if (this.content.placeholder) {\n        return this.content.placeholder.element;\n      }\n    }\n    /**\r\n     * Zoom current slide image to...\r\n     *\r\n     * @param {number} destZoomLevel Destination zoom level.\r\n     * @param {{ x?: number; y?: number }} centerPoint\r\n     * Transform origin center point, or false if viewport center should be used.\r\n     * @param {number | false} [transitionDuration] Transition duration, may be set to 0.\r\n     * @param {boolean=} ignoreBounds Minimum and maximum zoom levels will be ignored.\r\n     * @return {boolean=} Returns true if animated.\r\n     */\n\n  }, {\n    key: \"zoomTo\",\n    value: function zoomTo(destZoomLevel, centerPoint, transitionDuration, ignoreBounds) {\n      var _this3 = this;\n\n      var pswp = this.pswp;\n\n      if (!this.isZoomable() || pswp.mainScroll.isShifted()) {\n        return;\n      }\n\n      pswp.dispatch('beforeZoomTo', {\n        destZoomLevel: destZoomLevel,\n        centerPoint: centerPoint,\n        transitionDuration: transitionDuration\n      }); // stop all pan and zoom transitions\n\n      pswp.animations.stopAllPan(); // if (!centerPoint) {\n      //   centerPoint = pswp.getViewportCenterPoint();\n      // }\n\n      var prevZoomLevel = this.currZoomLevel;\n\n      if (!ignoreBounds) {\n        destZoomLevel = clamp(destZoomLevel, this.zoomLevels.min, this.zoomLevels.max);\n      } // if (transitionDuration === undefined) {\n      //   transitionDuration = this.pswp.options.zoomAnimationDuration;\n      // }\n\n\n      this.setZoomLevel(destZoomLevel);\n      this.pan.x = this.calculateZoomToPanOffset('x', centerPoint, prevZoomLevel);\n      this.pan.y = this.calculateZoomToPanOffset('y', centerPoint, prevZoomLevel);\n      roundPoint(this.pan);\n\n      var finishTransition = function finishTransition() {\n        _this3._setResolution(destZoomLevel);\n\n        _this3.applyCurrentZoomPan();\n      };\n\n      if (!transitionDuration) {\n        finishTransition();\n      } else {\n        pswp.animations.startTransition({\n          isPan: true,\n          name: 'zoomTo',\n          target: this.container,\n          transform: this.getCurrentTransform(),\n          onComplete: finishTransition,\n          duration: transitionDuration,\n          easing: pswp.options.easing\n        });\n      }\n    }\n    /**\r\n     * @param {{ x?: number, y?: number }} [centerPoint]\r\n     */\n\n  }, {\n    key: \"toggleZoom\",\n    value: function toggleZoom(centerPoint) {\n      this.zoomTo(this.currZoomLevel === this.zoomLevels.initial ? this.zoomLevels.secondary : this.zoomLevels.initial, centerPoint, this.pswp.options.zoomAnimationDuration);\n    }\n    /**\r\n     * Updates zoom level property and recalculates new pan bounds,\r\n     * unlike zoomTo it does not apply transform (use applyCurrentZoomPan)\r\n     *\r\n     * @param {number} currZoomLevel\r\n     */\n\n  }, {\n    key: \"setZoomLevel\",\n    value: function setZoomLevel(currZoomLevel) {\n      this.currZoomLevel = currZoomLevel;\n      this.bounds.update(this.currZoomLevel);\n    }\n    /**\r\n     * Get pan position after zoom at a given `point`.\r\n     *\r\n     * Always call setZoomLevel(newZoomLevel) beforehand to recalculate\r\n     * pan bounds according to the new zoom level.\r\n     *\r\n     * @param {'x' | 'y'} axis\r\n     * @param {{ x?: number; y?: number }} [point]\r\n     * point based on which zoom is performed, usually refers to the current mouse position,\r\n     * if false - viewport center will be used.\r\n     * @param {number=} prevZoomLevel Zoom level before new zoom was applied.\r\n     */\n\n  }, {\n    key: \"calculateZoomToPanOffset\",\n    value: function calculateZoomToPanOffset(axis, point, prevZoomLevel) {\n      var totalPanDistance = this.bounds.max[axis] - this.bounds.min[axis];\n\n      if (totalPanDistance === 0) {\n        return this.bounds.center[axis];\n      }\n\n      if (!point) {\n        point = this.pswp.getViewportCenterPoint();\n      }\n\n      var zoomFactor = this.currZoomLevel / prevZoomLevel;\n      return this.bounds.correctPan(axis, (this.pan[axis] - point[axis]) * zoomFactor + point[axis]);\n    }\n    /**\r\n     * Apply pan and keep it within bounds.\r\n     *\r\n     * @param {number} panX\r\n     * @param {number} panY\r\n     */\n\n  }, {\n    key: \"panTo\",\n    value: function panTo(panX, panY) {\n      this.pan.x = this.bounds.correctPan('x', panX);\n      this.pan.y = this.bounds.correctPan('y', panY);\n      this.applyCurrentZoomPan();\n    }\n    /**\r\n     * If the slide in the current state can be panned by the user\r\n     */\n\n  }, {\n    key: \"isPannable\",\n    value: function isPannable() {\n      return this.width && this.currZoomLevel > this.zoomLevels.fit;\n    }\n    /**\r\n     * If the slide can be zoomed\r\n     */\n\n  }, {\n    key: \"isZoomable\",\n    value: function isZoomable() {\n      return this.width && this.content.isZoomable();\n    }\n    /**\r\n     * Apply transform and scale based on\r\n     * the current pan position (this.pan) and zoom level (this.currZoomLevel)\r\n     */\n\n  }, {\n    key: \"applyCurrentZoomPan\",\n    value: function applyCurrentZoomPan() {\n      this._applyZoomTransform(this.pan.x, this.pan.y, this.currZoomLevel);\n\n      if (this === this.pswp.currSlide) {\n        this.pswp.dispatch('zoomPanUpdate', {\n          slide: this\n        });\n      }\n    }\n  }, {\n    key: \"zoomAndPanToInitial\",\n    value: function zoomAndPanToInitial() {\n      this.currZoomLevel = this.zoomLevels.initial; // pan according to the zoom level\n\n      this.bounds.update(this.currZoomLevel);\n      equalizePoints(this.pan, this.bounds.center);\n      this.pswp.dispatch('initialZoomPan', {\n        slide: this\n      });\n    }\n    /**\r\n     * Set translate and scale based on current resolution\r\n     *\r\n     * @param {number} x\r\n     * @param {number} y\r\n     * @param {number} zoom\r\n     */\n\n  }, {\n    key: \"_applyZoomTransform\",\n    value: function _applyZoomTransform(x, y, zoom) {\n      zoom /= this.currentResolution || this.zoomLevels.initial;\n      setTransform(this.container, x, y, zoom);\n    }\n  }, {\n    key: \"calculateSize\",\n    value: function calculateSize() {\n      var pswp = this.pswp;\n      equalizePoints(this.panAreaSize, getPanAreaSize(pswp.options, pswp.viewportSize, this.data, this.index));\n      this.zoomLevels.update(this.width, this.height, this.panAreaSize);\n      pswp.dispatch('calcSlideSize', {\n        slide: this\n      });\n    }\n  }, {\n    key: \"getCurrentTransform\",\n    value: function getCurrentTransform() {\n      var scale = this.currZoomLevel / (this.currentResolution || this.zoomLevels.initial);\n      return toTransformString(this.pan.x, this.pan.y, scale);\n    }\n    /**\r\n     * Set resolution and re-render the image.\r\n     *\r\n     * For example, if the real image size is 2000x1500,\r\n     * and resolution is 0.5 - it will be rendered as 1000x750.\r\n     *\r\n     * Image with zoom level 2 and resolution 0.5 is\r\n     * the same as image with zoom level 1 and resolution 1.\r\n     *\r\n     * Used to optimize animations and make\r\n     * sure that browser renders image in highest quality.\r\n     * Also used by responsive images to load the correct one.\r\n     *\r\n     * @param {number} newResolution\r\n     */\n\n  }, {\n    key: \"_setResolution\",\n    value: function _setResolution(newResolution) {\n      if (newResolution === this.currentResolution) {\n        return;\n      }\n\n      this.currentResolution = newResolution;\n      this.updateContentSize();\n      this.pswp.dispatch('resolutionChanged');\n    }\n  }]);\n\n  return Slide;\n}();\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('./gestures.js').default} Gestures */\n\n\nvar PAN_END_FRICTION = 0.35;\nvar VERTICAL_DRAG_FRICTION = 0.6; // 1 corresponds to the third of viewport height\n\nvar MIN_RATIO_TO_CLOSE = 0.4; // Minimum speed required to navigate\n// to next or previous slide\n\nvar MIN_NEXT_SLIDE_SPEED = 0.5;\n/**\r\n * @param {number} initialVelocity\r\n * @param {number} decelerationRate\r\n */\n\nfunction project(initialVelocity, decelerationRate) {\n  return initialVelocity * decelerationRate / (1 - decelerationRate);\n}\n/**\r\n * Handles single pointer dragging\r\n */\n\n\nvar DragHandler = /*#__PURE__*/function () {\n  /**\r\n   * @param {Gestures} gestures\r\n   */\n  function DragHandler(gestures) {\n    _classCallCheck(this, DragHandler);\n\n    this.gestures = gestures;\n    this.pswp = gestures.pswp;\n    /** @type {Point} */\n\n    this.startPan = {};\n  }\n\n  _createClass(DragHandler, [{\n    key: \"start\",\n    value: function start() {\n      equalizePoints(this.startPan, this.pswp.currSlide.pan);\n      this.pswp.animations.stopAll();\n    }\n  }, {\n    key: \"change\",\n    value: function change() {\n      var _this$gestures = this.gestures,\n          p1 = _this$gestures.p1,\n          prevP1 = _this$gestures.prevP1,\n          dragAxis = _this$gestures.dragAxis,\n          pswp = _this$gestures.pswp;\n      var currSlide = pswp.currSlide;\n\n      if (dragAxis === 'y' && pswp.options.closeOnVerticalDrag && currSlide.currZoomLevel <= currSlide.zoomLevels.fit && !this.gestures.isMultitouch) {\n        // Handle vertical drag to close\n        var panY = currSlide.pan.y + (p1.y - prevP1.y);\n\n        if (!pswp.dispatch('verticalDrag', {\n          panY: panY\n        }).defaultPrevented) {\n          this._setPanWithFriction('y', panY, VERTICAL_DRAG_FRICTION);\n\n          var bgOpacity = 1 - Math.abs(this._getVerticalDragRatio(currSlide.pan.y));\n          pswp.applyBgOpacity(bgOpacity);\n          currSlide.applyCurrentZoomPan();\n        }\n      } else {\n        var mainScrollChanged = this._panOrMoveMainScroll('x');\n\n        if (!mainScrollChanged) {\n          this._panOrMoveMainScroll('y');\n\n          roundPoint(currSlide.pan);\n          currSlide.applyCurrentZoomPan();\n        }\n      }\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var _this$gestures2 = this.gestures,\n          pswp = _this$gestures2.pswp,\n          velocity = _this$gestures2.velocity;\n      var mainScroll = pswp.mainScroll;\n      var indexDiff = 0;\n      pswp.animations.stopAll(); // Handle main scroll if it's shifted\n\n      if (mainScroll.isShifted()) {\n        // Position of the main scroll relative to the viewport\n        var mainScrollShiftDiff = mainScroll.x - mainScroll.getCurrSlideX(); // Ratio between 0 and 1:\n        // 0 - slide is not visible at all,\n        // 0.5 - half of the slide is vicible\n        // 1 - slide is fully visible\n\n        var currentSlideVisibilityRatio = mainScrollShiftDiff / pswp.viewportSize.x; // Go next slide.\n        //\n        // - if velocity and its direction is matched\n        //   and we see at least tiny part of the next slide\n        //\n        // - or if we see less than 50% of the current slide\n        //   and velocity is close to 0\n        //\n\n        if (velocity.x < -MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio < 0 || velocity.x < 0.1 && currentSlideVisibilityRatio < -0.5) {\n          // Go to next slide\n          indexDiff = 1;\n          velocity.x = Math.min(velocity.x, 0);\n        } else if (velocity.x > MIN_NEXT_SLIDE_SPEED && currentSlideVisibilityRatio > 0 || velocity.x > -0.1 && currentSlideVisibilityRatio > 0.5) {\n          // Go to prev slide\n          indexDiff = -1;\n          velocity.x = Math.max(velocity.x, 0);\n        }\n\n        mainScroll.moveIndexBy(indexDiff, true, velocity.x);\n      } // Restore zoom level\n\n\n      if (pswp.currSlide.currZoomLevel > pswp.currSlide.zoomLevels.max || this.gestures.isMultitouch) {\n        this.gestures.zoomLevels.correctZoomPan(true);\n      } else {\n        // we run two animations instead of one,\n        // as each axis has own pan boundaries and thus different spring function\n        // (correctZoomPan does not have this functionality,\n        //  it animates all properties with single timing function)\n        this._finishPanGestureForAxis('x');\n\n        this._finishPanGestureForAxis('y');\n      }\n    }\n    /**\r\n     * @private\r\n     * @param {'x' | 'y'} axis\r\n     */\n\n  }, {\n    key: \"_finishPanGestureForAxis\",\n    value: function _finishPanGestureForAxis(axis) {\n      var pswp = this.pswp;\n      var currSlide = pswp.currSlide;\n      var velocity = this.gestures.velocity;\n      var pan = currSlide.pan,\n          bounds = currSlide.bounds;\n      var panPos = pan[axis];\n      var restoreBgOpacity = pswp.bgOpacity < 1 && axis === 'y'; // 0.995 means - scroll view loses 0.5% of its velocity per millisecond\n      // Inceasing this number will reduce travel distance\n\n      var decelerationRate = 0.995; // 0.99\n      // Pan position if there is no bounds\n\n      var projectedPosition = panPos + project(velocity[axis], decelerationRate);\n\n      if (restoreBgOpacity) {\n        var vDragRatio = this._getVerticalDragRatio(panPos);\n\n        var projectedVDragRatio = this._getVerticalDragRatio(projectedPosition); // If we are above and moving upwards,\n        // or if we are below and moving downwards\n\n\n        if (vDragRatio < 0 && projectedVDragRatio < -MIN_RATIO_TO_CLOSE || vDragRatio > 0 && projectedVDragRatio > MIN_RATIO_TO_CLOSE) {\n          pswp.close();\n          return;\n        }\n      } // Pan position with corrected bounds\n\n\n      var correctedPanPosition = bounds.correctPan(axis, projectedPosition); // Exit if pan position should not be changed\n      // or if speed it too low\n\n      if (panPos === correctedPanPosition) {\n        return;\n      } // Overshoot if the final position is out of pan bounds\n\n\n      var dampingRatio = correctedPanPosition === projectedPosition ? 1 : 0.82;\n      var initialBgOpacity = pswp.bgOpacity;\n      var totalPanDist = correctedPanPosition - panPos;\n      pswp.animations.startSpring({\n        name: 'panGesture' + axis,\n        isPan: true,\n        start: panPos,\n        end: correctedPanPosition,\n        velocity: velocity[axis],\n        dampingRatio: dampingRatio,\n        onUpdate: function onUpdate(pos) {\n          // Animate opacity of background relative to Y pan position of an image\n          if (restoreBgOpacity && pswp.bgOpacity < 1) {\n            // 0 - start of animation, 1 - end of animation\n            var animationProgressRatio = 1 - (correctedPanPosition - pos) / totalPanDist; // We clamp opacity to keep it between 0 and 1.\n            // As progress ratio can be larger than 1 due to overshoot,\n            // and we do not want to bounce opacity.\n\n            pswp.applyBgOpacity(clamp(initialBgOpacity + (1 - initialBgOpacity) * animationProgressRatio, 0, 1));\n          }\n\n          pan[axis] = Math.floor(pos);\n          currSlide.applyCurrentZoomPan();\n        }\n      });\n    }\n    /**\r\n     * Update position of the main scroll,\r\n     * or/and update pan position of the current slide.\r\n     *\r\n     * Should return true if it changes (or can change) main scroll.\r\n     *\r\n     * @private\r\n     * @param {'x' | 'y'} axis\r\n     */\n\n  }, {\n    key: \"_panOrMoveMainScroll\",\n    value: function _panOrMoveMainScroll(axis) {\n      var _this$gestures3 = this.gestures,\n          p1 = _this$gestures3.p1,\n          pswp = _this$gestures3.pswp,\n          dragAxis = _this$gestures3.dragAxis,\n          prevP1 = _this$gestures3.prevP1,\n          isMultitouch = _this$gestures3.isMultitouch;\n      var currSlide = pswp.currSlide,\n          mainScroll = pswp.mainScroll;\n      var delta = p1[axis] - prevP1[axis];\n      var newMainScrollX = mainScroll.x + delta;\n\n      if (!delta) {\n        return;\n      } // Always move main scroll if image can not be panned\n\n\n      if (axis === 'x' && !currSlide.isPannable() && !isMultitouch) {\n        mainScroll.moveTo(newMainScrollX, true);\n        return true; // changed main scroll\n      }\n\n      var bounds = currSlide.bounds;\n      var newPan = currSlide.pan[axis] + delta;\n\n      if (pswp.options.allowPanToNext && dragAxis === 'x' && axis === 'x' && !isMultitouch) {\n        var currSlideMainScrollX = mainScroll.getCurrSlideX(); // Position of the main scroll relative to the viewport\n\n        var mainScrollShiftDiff = mainScroll.x - currSlideMainScrollX;\n        var isLeftToRight = delta > 0;\n        var isRightToLeft = !isLeftToRight;\n\n        if (newPan > bounds.min[axis] && isLeftToRight) {\n          // Panning from left to right, beyond the left edge\n          // Wether the image was at minimum pan position (or less)\n          // when this drag gesture started.\n          // Minimum pan position refers to the left edge of the image.\n          var wasAtMinPanPosition = bounds.min[axis] <= this.startPan[axis];\n\n          if (wasAtMinPanPosition) {\n            mainScroll.moveTo(newMainScrollX, true);\n            return true;\n          } else {\n            this._setPanWithFriction(axis, newPan); //currSlide.pan[axis] = newPan;\n\n          }\n        } else if (newPan < bounds.max[axis] && isRightToLeft) {\n          // Paning from right to left, beyond the right edge\n          // Maximum pan position refers to the right edge of the image.\n          var wasAtMaxPanPosition = this.startPan[axis] <= bounds.max[axis];\n\n          if (wasAtMaxPanPosition) {\n            mainScroll.moveTo(newMainScrollX, true);\n            return true;\n          } else {\n            this._setPanWithFriction(axis, newPan); //currSlide.pan[axis] = newPan;\n\n          }\n        } else {\n          // If main scroll is shifted\n          if (mainScrollShiftDiff !== 0) {\n            // If main scroll is shifted right\n            if (mainScrollShiftDiff > 0\n            /*&& isRightToLeft*/\n            ) {\n                mainScroll.moveTo(Math.max(newMainScrollX, currSlideMainScrollX), true);\n                return true;\n              } else if (mainScrollShiftDiff < 0\n            /*&& isLeftToRight*/\n            ) {\n                // Main scroll is shifted left (Position is less than 0 comparing to the viewport 0)\n                mainScroll.moveTo(Math.min(newMainScrollX, currSlideMainScrollX), true);\n                return true;\n              }\n          } else {\n            // We are within pan bounds, so just pan\n            this._setPanWithFriction(axis, newPan);\n          }\n        }\n      } else {\n        if (axis === 'y') {\n          // Do not pan vertically if main scroll is shifted o\n          if (!mainScroll.isShifted() && bounds.min.y !== bounds.max.y) {\n            this._setPanWithFriction(axis, newPan);\n          }\n        } else {\n          this._setPanWithFriction(axis, newPan);\n        }\n      }\n    } //\n    // If we move above - the ratio is negative\n    // If we move below the ratio is positive\n\n    /**\r\n     * Relation between pan Y position and third of viewport height.\r\n     *\r\n     * When we are at initial position (center bounds) - the ratio is 0,\r\n     * if position is shifted upwards - the ratio is negative,\r\n     * if position is shifted downwards - the ratio is positive.\r\n     *\r\n     * @private\r\n     * @param {number} panY The current pan Y position.\r\n     */\n\n  }, {\n    key: \"_getVerticalDragRatio\",\n    value: function _getVerticalDragRatio(panY) {\n      return (panY - this.pswp.currSlide.bounds.center.y) / (this.pswp.viewportSize.y / 3);\n    }\n    /**\r\n     * Set pan position of the current slide.\r\n     * Apply friction if the position is beyond the pan bounds,\r\n     * or if custom friction is defined.\r\n     *\r\n     * @private\r\n     * @param {'x' | 'y'} axis\r\n     * @param {number} potentialPan\r\n     * @param {number=} customFriction (0.1 - 1)\r\n     */\n\n  }, {\n    key: \"_setPanWithFriction\",\n    value: function _setPanWithFriction(axis, potentialPan, customFriction) {\n      var _this$pswp$currSlide = this.pswp.currSlide,\n          pan = _this$pswp$currSlide.pan,\n          bounds = _this$pswp$currSlide.bounds;\n      var correctedPan = bounds.correctPan(axis, potentialPan); // If we are out of pan bounds\n\n      if (correctedPan !== potentialPan || customFriction) {\n        var delta = Math.round(potentialPan - pan[axis]);\n        pan[axis] += delta * (customFriction || PAN_END_FRICTION);\n      } else {\n        pan[axis] = potentialPan;\n      }\n    }\n  }]);\n\n  return DragHandler;\n}();\n/** @typedef {import('../photoswipe.js').Point} Point */\n\n/** @typedef {import('./gestures.js').default} Gestures */\n\n\nvar UPPER_ZOOM_FRICTION = 0.05;\nvar LOWER_ZOOM_FRICTION = 0.15;\n/**\r\n * Get center point between two points\r\n *\r\n * @param {Point} p\r\n * @param {Point} p1\r\n * @param {Point} p2\r\n */\n\nfunction getZoomPointsCenter(p, p1, p2) {\n  p.x = (p1.x + p2.x) / 2;\n  p.y = (p1.y + p2.y) / 2;\n  return p;\n}\n\nvar ZoomHandler = /*#__PURE__*/function () {\n  /**\r\n   * @param {Gestures} gestures\r\n   */\n  function ZoomHandler(gestures) {\n    _classCallCheck(this, ZoomHandler);\n\n    this.gestures = gestures;\n    this.pswp = this.gestures.pswp;\n    /** @type {Point} */\n\n    this._startPan = {};\n    /** @type {Point} */\n\n    this._startZoomPoint = {};\n    /** @type {Point} */\n\n    this._zoomPoint = {};\n  }\n\n  _createClass(ZoomHandler, [{\n    key: \"start\",\n    value: function start() {\n      this._startZoomLevel = this.pswp.currSlide.currZoomLevel;\n      equalizePoints(this._startPan, this.pswp.currSlide.pan);\n      this.pswp.animations.stopAllPan();\n      this._wasOverFitZoomLevel = false;\n    }\n  }, {\n    key: \"change\",\n    value: function change() {\n      var _this$gestures4 = this.gestures,\n          p1 = _this$gestures4.p1,\n          startP1 = _this$gestures4.startP1,\n          p2 = _this$gestures4.p2,\n          startP2 = _this$gestures4.startP2,\n          pswp = _this$gestures4.pswp;\n      var currSlide = pswp.currSlide;\n      var minZoomLevel = currSlide.zoomLevels.min;\n      var maxZoomLevel = currSlide.zoomLevels.max;\n\n      if (!currSlide.isZoomable() || pswp.mainScroll.isShifted()) {\n        return;\n      }\n\n      getZoomPointsCenter(this._startZoomPoint, startP1, startP2);\n      getZoomPointsCenter(this._zoomPoint, p1, p2);\n\n      var currZoomLevel = 1 / getDistanceBetween(startP1, startP2) * getDistanceBetween(p1, p2) * this._startZoomLevel; // slightly over the zoom.fit\n\n\n      if (currZoomLevel > currSlide.zoomLevels.initial + currSlide.zoomLevels.initial / 15) {\n        this._wasOverFitZoomLevel = true;\n      }\n\n      if (currZoomLevel < minZoomLevel) {\n        if (pswp.options.pinchToClose && !this._wasOverFitZoomLevel && this._startZoomLevel <= currSlide.zoomLevels.initial) {\n          // fade out background if zooming out\n          var bgOpacity = 1 - (minZoomLevel - currZoomLevel) / (minZoomLevel / 1.2);\n\n          if (!pswp.dispatch('pinchClose', {\n            bgOpacity: bgOpacity\n          }).defaultPrevented) {\n            pswp.applyBgOpacity(bgOpacity);\n          }\n        } else {\n          // Apply the friction if zoom level is below the min\n          currZoomLevel = minZoomLevel - (minZoomLevel - currZoomLevel) * LOWER_ZOOM_FRICTION;\n        }\n      } else if (currZoomLevel > maxZoomLevel) {\n        // Apply the friction if zoom level is above the max\n        currZoomLevel = maxZoomLevel + (currZoomLevel - maxZoomLevel) * UPPER_ZOOM_FRICTION;\n      }\n\n      currSlide.pan.x = this._calculatePanForZoomLevel('x', currZoomLevel);\n      currSlide.pan.y = this._calculatePanForZoomLevel('y', currZoomLevel);\n      currSlide.setZoomLevel(currZoomLevel);\n      currSlide.applyCurrentZoomPan();\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      var pswp = this.pswp;\n      var currSlide = pswp.currSlide;\n\n      if (currSlide.currZoomLevel < currSlide.zoomLevels.initial && !this._wasOverFitZoomLevel && pswp.options.pinchToClose) {\n        pswp.close();\n      } else {\n        this.correctZoomPan();\n      }\n    }\n    /**\r\n     * @private\r\n     * @param {'x' | 'y'} axis\r\n     * @param {number} currZoomLevel\r\n     */\n\n  }, {\n    key: \"_calculatePanForZoomLevel\",\n    value: function _calculatePanForZoomLevel(axis, currZoomLevel) {\n      var zoomFactor = currZoomLevel / this._startZoomLevel;\n      return this._zoomPoint[axis] - (this._startZoomPoint[axis] - this._startPan[axis]) * zoomFactor;\n    }\n    /**\r\n     * Correct currZoomLevel and pan if they are\r\n     * beyond minimum or maximum values.\r\n     * With animation.\r\n     *\r\n     * @param {boolean=} ignoreGesture\r\n     * Wether gesture coordinates should be ignored when calculating destination pan position.\r\n     */\n\n  }, {\n    key: \"correctZoomPan\",\n    value: function correctZoomPan(ignoreGesture) {\n      var pswp = this.pswp;\n      var currSlide = pswp.currSlide;\n\n      if (!currSlide.isZoomable()) {\n        return;\n      }\n\n      if (this._zoomPoint.x === undefined) {\n        ignoreGesture = true;\n      }\n\n      var prevZoomLevel = currSlide.currZoomLevel;\n      /** @type {number} */\n\n      var destinationZoomLevel;\n      var currZoomLevelNeedsChange = true;\n\n      if (prevZoomLevel < currSlide.zoomLevels.initial) {\n        destinationZoomLevel = currSlide.zoomLevels.initial; // zoom to min\n      } else if (prevZoomLevel > currSlide.zoomLevels.max) {\n        destinationZoomLevel = currSlide.zoomLevels.max; // zoom to max\n      } else {\n        currZoomLevelNeedsChange = false;\n        destinationZoomLevel = prevZoomLevel;\n      }\n\n      var initialBgOpacity = pswp.bgOpacity;\n      var restoreBgOpacity = pswp.bgOpacity < 1;\n      var initialPan = equalizePoints({}, currSlide.pan);\n      var destinationPan = equalizePoints({}, initialPan);\n\n      if (ignoreGesture) {\n        this._zoomPoint.x = 0;\n        this._zoomPoint.y = 0;\n        this._startZoomPoint.x = 0;\n        this._startZoomPoint.y = 0;\n        this._startZoomLevel = prevZoomLevel;\n        equalizePoints(this._startPan, initialPan);\n      }\n\n      if (currZoomLevelNeedsChange) {\n        destinationPan = {\n          x: this._calculatePanForZoomLevel('x', destinationZoomLevel),\n          y: this._calculatePanForZoomLevel('y', destinationZoomLevel)\n        };\n      } // set zoom level, so pan bounds are updated according to it\n\n\n      currSlide.setZoomLevel(destinationZoomLevel);\n      destinationPan = {\n        x: currSlide.bounds.correctPan('x', destinationPan.x),\n        y: currSlide.bounds.correctPan('y', destinationPan.y)\n      }; // return zoom level and its bounds to initial\n\n      currSlide.setZoomLevel(prevZoomLevel);\n      var panNeedsChange = true;\n\n      if (pointsEqual(destinationPan, initialPan)) {\n        panNeedsChange = false;\n      }\n\n      if (!panNeedsChange && !currZoomLevelNeedsChange && !restoreBgOpacity) {\n        // update resolution after gesture\n        currSlide._setResolution(destinationZoomLevel);\n\n        currSlide.applyCurrentZoomPan(); // nothing to animate\n\n        return;\n      }\n\n      pswp.animations.stopAllPan();\n      pswp.animations.startSpring({\n        isPan: true,\n        start: 0,\n        end: 1000,\n        velocity: 0,\n        dampingRatio: 1,\n        naturalFrequency: 40,\n        onUpdate: function onUpdate(now) {\n          now /= 1000; // 0 - start, 1 - end\n\n          if (panNeedsChange || currZoomLevelNeedsChange) {\n            if (panNeedsChange) {\n              currSlide.pan.x = initialPan.x + (destinationPan.x - initialPan.x) * now;\n              currSlide.pan.y = initialPan.y + (destinationPan.y - initialPan.y) * now;\n            }\n\n            if (currZoomLevelNeedsChange) {\n              var newZoomLevel = prevZoomLevel + (destinationZoomLevel - prevZoomLevel) * now;\n              currSlide.setZoomLevel(newZoomLevel);\n            }\n\n            currSlide.applyCurrentZoomPan();\n          } // Restore background opacity\n\n\n          if (restoreBgOpacity && pswp.bgOpacity < 1) {\n            // We clamp opacity to keep it between 0 and 1.\n            // As progress ratio can be larger than 1 due to overshoot,\n            // and we do not want to bounce opacity.\n            pswp.applyBgOpacity(clamp(initialBgOpacity + (1 - initialBgOpacity) * now, 0, 1));\n          }\n        },\n        onComplete: function onComplete() {\n          // update resolution after transition ends\n          currSlide._setResolution(destinationZoomLevel);\n\n          currSlide.applyCurrentZoomPan();\n        }\n      });\n    }\n  }]);\n\n  return ZoomHandler;\n}();\n/**\r\n * @template T\r\n * @template P\r\n * @typedef {import('../types.js').AddPostfix<T, P>} AddPostfix<T, P>\r\n */\n\n/** @typedef {import('./gestures.js').default} Gestures */\n\n/** @typedef {'imageClick' | 'bgClick' | 'tap' | 'doubleTap'} Actions */\n\n/** @typedef {{ x?: number; y?: number }} Point */\n\n/**\r\n * Whether the tap was performed on the main slide\r\n * (rather than controls or caption).\r\n *\r\n * @param {PointerEvent} event\r\n */\n\n\nfunction didTapOnMainContent(event) {\n  return !!\n  /** @type {HTMLElement} */\n  event.target.closest('.pswp__container');\n}\n/**\r\n * Tap, double-tap handler.\r\n */\n\n\nvar TapHandler = /*#__PURE__*/function () {\n  /**\r\n   * @param {Gestures} gestures\r\n   */\n  function TapHandler(gestures) {\n    _classCallCheck(this, TapHandler);\n\n    this.gestures = gestures;\n  }\n  /**\r\n   * @param {Point} point\r\n   * @param {PointerEvent} originalEvent\r\n   */\n\n\n  _createClass(TapHandler, [{\n    key: \"click\",\n    value: function click(point, originalEvent) {\n      var targetClassList =\n      /** @type {HTMLElement} */\n      originalEvent.target.classList;\n      var isImageClick = targetClassList.contains('pswp__img');\n      var isBackgroundClick = targetClassList.contains('pswp__item') || targetClassList.contains('pswp__zoom-wrap');\n\n      if (isImageClick) {\n        this._doClickOrTapAction('imageClick', point, originalEvent);\n      } else if (isBackgroundClick) {\n        this._doClickOrTapAction('bgClick', point, originalEvent);\n      }\n    }\n    /**\r\n     * @param {Point} point\r\n     * @param {PointerEvent} originalEvent\r\n     */\n\n  }, {\n    key: \"tap\",\n    value: function tap(point, originalEvent) {\n      if (didTapOnMainContent(originalEvent)) {\n        this._doClickOrTapAction('tap', point, originalEvent);\n      }\n    }\n    /**\r\n     * @param {Point} point\r\n     * @param {PointerEvent} originalEvent\r\n     */\n\n  }, {\n    key: \"doubleTap\",\n    value: function doubleTap(point, originalEvent) {\n      if (didTapOnMainContent(originalEvent)) {\n        this._doClickOrTapAction('doubleTap', point, originalEvent);\n      }\n    }\n    /**\r\n     * @param {Actions} actionName\r\n     * @param {Point} point\r\n     * @param {PointerEvent} originalEvent\r\n     */\n\n  }, {\n    key: \"_doClickOrTapAction\",\n    value: function _doClickOrTapAction(actionName, point, originalEvent) {\n      var pswp = this.gestures.pswp;\n      var currSlide = pswp.currSlide;\n      var actionFullName =\n      /** @type {AddPostfix<Actions, 'Action'>} */\n      actionName + 'Action';\n      var optionValue = pswp.options[actionFullName];\n\n      if (pswp.dispatch(actionFullName, {\n        point: point,\n        originalEvent: originalEvent\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (typeof optionValue === 'function') {\n        optionValue.call(pswp, point, originalEvent);\n        return;\n      }\n\n      switch (optionValue) {\n        case 'close':\n        case 'next':\n          pswp[optionValue]();\n          break;\n\n        case 'zoom':\n          currSlide.toggleZoom(point);\n          break;\n\n        case 'zoom-or-close':\n          // by default click zooms current image,\n          // if it can not be zoomed - gallery will be closed\n          if (currSlide.isZoomable() && currSlide.zoomLevels.secondary !== currSlide.zoomLevels.initial) {\n            currSlide.toggleZoom(point);\n          } else if (pswp.options.clickToCloseNonZoomable) {\n            pswp.close();\n          }\n\n          break;\n\n        case 'toggle-controls':\n          this.gestures.pswp.element.classList.toggle('pswp--ui-visible'); // if (_controlsVisible) {\n          //   _ui.hideControls();\n          // } else {\n          //   _ui.showControls();\n          // }\n\n          break;\n      }\n    }\n  }]);\n\n  return TapHandler;\n}();\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').Point} Point */\n// How far should user should drag\n// until we can determine that the gesture is swipe and its direction\n\n\nvar AXIS_SWIPE_HYSTERISIS = 10; //const PAN_END_FRICTION = 0.35;\n\nvar DOUBLE_TAP_DELAY = 300; // ms\n\nvar MIN_TAP_DISTANCE = 25; // px\n\n/**\r\n * Gestures class bind touch, pointer or mouse events\r\n * and emits drag to drag-handler and zoom events zoom-handler.\r\n *\r\n * Drag and zoom events are emited in requestAnimationFrame,\r\n * and only when one of pointers was actually changed.\r\n */\n\nvar Gestures = /*#__PURE__*/function () {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  function Gestures(pswp) {\n    var _this4 = this;\n\n    _classCallCheck(this, Gestures);\n\n    this.pswp = pswp;\n    /** @type {'x' | 'y'} */\n\n    this.dragAxis = undefined; // point objects are defined once and reused\n    // PhotoSwipe keeps track only of two pointers, others are ignored\n\n    /** @type {Point} */\n\n    this.p1 = {}; // the first pressed pointer\n\n    /** @type {Point} */\n\n    this.p2 = {}; // the second pressed pointer\n\n    /** @type {Point} */\n\n    this.prevP1 = {};\n    /** @type {Point} */\n\n    this.prevP2 = {};\n    /** @type {Point} */\n\n    this.startP1 = {};\n    /** @type {Point} */\n\n    this.startP2 = {};\n    /** @type {Point} */\n\n    this.velocity = {};\n    /** @type {Point} */\n\n    this._lastStartP1 = {};\n    /** @type {Point} */\n\n    this._intervalP1 = {};\n    this._numActivePoints = 0;\n    /** @type {Point[]} */\n\n    this._ongoingPointers = [];\n    this._touchEventEnabled = 'ontouchstart' in window;\n    this._pointerEventEnabled = !!window.PointerEvent;\n    this.supportsTouch = this._touchEventEnabled || this._pointerEventEnabled && navigator.maxTouchPoints > 1;\n\n    if (!this.supportsTouch) {\n      // disable pan to next slide for non-touch devices\n      pswp.options.allowPanToNext = false;\n    }\n\n    this.drag = new DragHandler(this);\n    this.zoomLevels = new ZoomHandler(this);\n    this.tapHandler = new TapHandler(this);\n    pswp.on('bindEvents', function () {\n      pswp.events.add(pswp.scrollWrap, 'click', function (e) {\n        return _this4._onClick(e);\n      });\n\n      if (_this4._pointerEventEnabled) {\n        _this4._bindEvents('pointer', 'down', 'up', 'cancel');\n      } else if (_this4._touchEventEnabled) {\n        _this4._bindEvents('touch', 'start', 'end', 'cancel'); // In previous versions we also bound mouse event here,\n        // in case device supports both touch and mouse events,\n        // but newer versions of browsers now support PointerEvent.\n        // on iOS10 if you bind touchmove/end after touchstart,\n        // and you don't preventDefault touchstart (which PhotoSwipe does),\n        // preventDefault will have no effect on touchmove and touchend.\n        // Unless you bind it previously.\n\n\n        pswp.scrollWrap.ontouchmove = function () {}; // eslint-disable-line\n\n\n        pswp.scrollWrap.ontouchend = function () {}; // eslint-disable-line\n\n      } else {\n        _this4._bindEvents('mouse', 'down', 'up');\n      }\n    });\n  }\n  /**\r\n   *\r\n   * @param {'mouse' | 'touch' | 'pointer'} pref\r\n   * @param {'down' | 'start'} down\r\n   * @param {'up' | 'end'} up\r\n   * @param {'cancel'} [cancel]\r\n   */\n\n\n  _createClass(Gestures, [{\n    key: \"_bindEvents\",\n    value: function _bindEvents(pref, down, up, cancel) {\n      var pswp = this.pswp;\n      var events = pswp.events;\n      var cancelEvent = cancel ? pref + cancel : '';\n      events.add(pswp.scrollWrap, pref + down, this.onPointerDown.bind(this));\n      events.add(window, pref + 'move', this.onPointerMove.bind(this));\n      events.add(window, pref + up, this.onPointerUp.bind(this));\n\n      if (cancelEvent) {\n        events.add(pswp.scrollWrap, cancelEvent, this.onPointerUp.bind(this));\n      }\n    }\n    /**\r\n     * @param {PointerEvent} e\r\n     */\n\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(e) {\n      // We do not call preventDefault for touch events\n      // to allow browser to show native dialog on longpress\n      // (the one that allows to save image or open it in new tab).\n      //\n      // Desktop Safari allows to drag images when preventDefault isn't called on mousedown,\n      // even though preventDefault IS called on mousemove. That's why we preventDefault mousedown.\n      var isMousePointer;\n\n      if (e.type === 'mousedown' || e.pointerType === 'mouse') {\n        isMousePointer = true;\n      } // Allow dragging only via left mouse button.\n      // http://www.quirksmode.org/js/events_properties.html\n      // https://developer.mozilla.org/en-US/docs/Web/API/event.button\n\n\n      if (isMousePointer && e.button > 0) {\n        return;\n      }\n\n      var pswp = this.pswp; // if PhotoSwipe is opening or closing\n\n      if (!pswp.opener.isOpen) {\n        e.preventDefault();\n        return;\n      }\n\n      if (pswp.dispatch('pointerDown', {\n        originalEvent: e\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (isMousePointer) {\n        pswp.mouseDetected(); // preventDefault mouse event to prevent\n        // browser image drag feature\n\n        this._preventPointerEventBehaviour(e);\n      }\n\n      pswp.animations.stopAll();\n\n      this._updatePoints(e, 'down');\n\n      this.pointerDown = true;\n\n      if (this._numActivePoints === 1) {\n        this.dragAxis = null; // we need to store initial point to determine the main axis,\n        // drag is activated only after the axis is determined\n\n        equalizePoints(this.startP1, this.p1);\n      }\n\n      if (this._numActivePoints > 1) {\n        // Tap or double tap should not trigger if more than one pointer\n        this._clearTapTimer();\n\n        this.isMultitouch = true;\n      } else {\n        this.isMultitouch = false;\n      }\n    }\n    /**\r\n     * @param {PointerEvent} e\r\n     */\n\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(e) {\n      e.preventDefault(); // always preventDefault move event\n\n      if (!this._numActivePoints) {\n        return;\n      }\n\n      this._updatePoints(e, 'move');\n\n      if (this.pswp.dispatch('pointerMove', {\n        originalEvent: e\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (this._numActivePoints === 1 && !this.isDragging) {\n        if (!this.dragAxis) {\n          this._calculateDragDirection();\n        } // Drag axis was detected, emit drag.start\n\n\n        if (this.dragAxis && !this.isDragging) {\n          if (this.isZooming) {\n            this.isZooming = false;\n            this.zoomLevels.end();\n          }\n\n          this.isDragging = true;\n\n          this._clearTapTimer(); // Tap can not trigger after drag\n          // Adjust starting point\n\n\n          this._updateStartPoints();\n\n          this._intervalTime = Date.now(); //this._startTime = this._intervalTime;\n\n          this._velocityCalculated = false;\n          equalizePoints(this._intervalP1, this.p1);\n          this.velocity.x = 0;\n          this.velocity.y = 0;\n          this.drag.start();\n\n          this._rafStopLoop();\n\n          this._rafRenderLoop();\n        }\n      } else if (this._numActivePoints > 1 && !this.isZooming) {\n        this._finishDrag();\n\n        this.isZooming = true; // Adjust starting points\n\n        this._updateStartPoints();\n\n        this.zoomLevels.start();\n\n        this._rafStopLoop();\n\n        this._rafRenderLoop();\n      }\n    }\n    /**\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_finishDrag\",\n    value: function _finishDrag() {\n      if (this.isDragging) {\n        this.isDragging = false; // Try to calculate velocity,\n        // if it wasn't calculated yet in drag.change\n\n        if (!this._velocityCalculated) {\n          this._updateVelocity(true);\n        }\n\n        this.drag.end();\n        this.dragAxis = null;\n      }\n    }\n    /**\r\n     * @param {PointerEvent} e\r\n     */\n\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(e) {\n      if (!this._numActivePoints) {\n        return;\n      }\n\n      this._updatePoints(e, 'up');\n\n      if (this.pswp.dispatch('pointerUp', {\n        originalEvent: e\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (this._numActivePoints === 0) {\n        this.pointerDown = false;\n\n        this._rafStopLoop();\n\n        if (this.isDragging) {\n          this._finishDrag();\n        } else if (!this.isZooming && !this.isMultitouch) {\n          //this.zoomLevels.correctZoomPan();\n          this._finishTap(e);\n        }\n      }\n\n      if (this._numActivePoints < 2 && this.isZooming) {\n        this.isZooming = false;\n        this.zoomLevels.end();\n\n        if (this._numActivePoints === 1) {\n          // Since we have 1 point left, we need to reinitiate drag\n          this.dragAxis = null;\n\n          this._updateStartPoints();\n        }\n      }\n    }\n    /**\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_rafRenderLoop\",\n    value: function _rafRenderLoop() {\n      if (this.isDragging || this.isZooming) {\n        this._updateVelocity();\n\n        if (this.isDragging) {\n          // make sure that pointer moved since the last update\n          if (!pointsEqual(this.p1, this.prevP1)) {\n            this.drag.change();\n          }\n        } else\n          /* if (this.isZooming) */\n          {\n            if (!pointsEqual(this.p1, this.prevP1) || !pointsEqual(this.p2, this.prevP2)) {\n              this.zoomLevels.change();\n            }\n          }\n\n        this._updatePrevPoints();\n\n        this.raf = requestAnimationFrame(this._rafRenderLoop.bind(this));\n      }\n    }\n    /**\r\n     * Update velocity at 50ms interval\r\n     *\r\n     * @param {boolean=} force\r\n     */\n\n  }, {\n    key: \"_updateVelocity\",\n    value: function _updateVelocity(force) {\n      var time = Date.now();\n      var duration = time - this._intervalTime;\n\n      if (duration < 50 && !force) {\n        return;\n      }\n\n      this.velocity.x = this._getVelocity('x', duration);\n      this.velocity.y = this._getVelocity('y', duration);\n      this._intervalTime = time;\n      equalizePoints(this._intervalP1, this.p1);\n      this._velocityCalculated = true;\n    }\n    /**\r\n     * @private\r\n     * @param {PointerEvent} e\r\n     */\n\n  }, {\n    key: \"_finishTap\",\n    value: function _finishTap(e) {\n      var _this5 = this;\n\n      var mainScroll = this.pswp.mainScroll; // Do not trigger tap events if main scroll is shifted\n\n      if (mainScroll.isShifted()) {\n        // restore main scroll position\n        // (usually happens if stopped in the middle of animation)\n        mainScroll.moveIndexBy(0, true);\n        return;\n      } // Do not trigger tap for touchcancel or pointercancel\n\n\n      if (e.type.indexOf('cancel') > 0) {\n        return;\n      } // Trigger click instead of tap for mouse events\n\n\n      if (e.type === 'mouseup' || e.pointerType === 'mouse') {\n        this.tapHandler.click(this.startP1, e);\n        return;\n      } // Disable delay if there is no doubleTapAction\n\n\n      var tapDelay = this.pswp.options.doubleTapAction ? DOUBLE_TAP_DELAY : 0; // If tapTimer is defined - we tapped recently,\n      // check if the current tap is close to the previous one,\n      // if yes - trigger double tap\n\n      if (this._tapTimer) {\n        this._clearTapTimer(); // Check if two taps were more or less on the same place\n\n\n        if (getDistanceBetween(this._lastStartP1, this.startP1) < MIN_TAP_DISTANCE) {\n          this.tapHandler.doubleTap(this.startP1, e);\n        }\n      } else {\n        equalizePoints(this._lastStartP1, this.startP1);\n        this._tapTimer = setTimeout(function () {\n          _this5.tapHandler.tap(_this5.startP1, e);\n\n          _this5._clearTapTimer();\n        }, tapDelay);\n      }\n    }\n    /**\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_clearTapTimer\",\n    value: function _clearTapTimer() {\n      if (this._tapTimer) {\n        clearTimeout(this._tapTimer);\n        this._tapTimer = null;\n      }\n    }\n    /**\r\n     * Get velocity for axis\r\n     *\r\n     * @private\r\n     * @param {'x' | 'y'} axis\r\n     * @param {number} duration\r\n     */\n\n  }, {\n    key: \"_getVelocity\",\n    value: function _getVelocity(axis, duration) {\n      // displacement is like distance, but can be negative.\n      var displacement = this.p1[axis] - this._intervalP1[axis];\n\n      if (Math.abs(displacement) > 1 && duration > 5) {\n        return displacement / duration;\n      }\n\n      return 0;\n    }\n    /**\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_rafStopLoop\",\n    value: function _rafStopLoop() {\n      if (this.raf) {\n        cancelAnimationFrame(this.raf);\n        this.raf = null;\n      }\n    }\n    /**\r\n     * @private\r\n     * @param {PointerEvent} e\r\n     */\n\n  }, {\n    key: \"_preventPointerEventBehaviour\",\n    value: function _preventPointerEventBehaviour(e) {\n      // TODO find a way to disable e.preventDefault on some elements\n      //      via event or some class or something\n      e.preventDefault();\n      return true;\n    }\n    /**\r\n     * Parses and normalizes points from the touch, mouse or pointer event.\r\n     * Updates p1 and p2.\r\n     *\r\n     * @private\r\n     * @param {PointerEvent | TouchEvent} e\r\n     * @param {'up' | 'down' | 'move'} pointerType Normalized pointer type\r\n     */\n\n  }, {\n    key: \"_updatePoints\",\n    value: function _updatePoints(e, pointerType) {\n      if (this._pointerEventEnabled) {\n        var pointerEvent =\n        /** @type {PointerEvent} */\n        e; // Try to find the current pointer in ongoing pointers by its ID\n\n        var pointerIndex = this._ongoingPointers.findIndex(function (ongoingPoiner) {\n          return ongoingPoiner.id === pointerEvent.pointerId;\n        });\n\n        if (pointerType === 'up' && pointerIndex > -1) {\n          // release the pointer - remove it from ongoing\n          this._ongoingPointers.splice(pointerIndex, 1);\n        } else if (pointerType === 'down' && pointerIndex === -1) {\n          // add new pointer\n          this._ongoingPointers.push(this._convertEventPosToPoint(pointerEvent, {}));\n        } else if (pointerIndex > -1) {\n          // update existing pointer\n          this._convertEventPosToPoint(pointerEvent, this._ongoingPointers[pointerIndex]);\n        }\n\n        this._numActivePoints = this._ongoingPointers.length; // update points that PhotoSwipe uses\n        // to calculate position and scale\n\n        if (this._numActivePoints > 0) {\n          equalizePoints(this.p1, this._ongoingPointers[0]);\n        }\n\n        if (this._numActivePoints > 1) {\n          equalizePoints(this.p2, this._ongoingPointers[1]);\n        }\n      } else {\n        var touchEvent =\n        /** @type {TouchEvent} */\n        e;\n        this._numActivePoints = 0;\n\n        if (touchEvent.type.indexOf('touch') > -1) {\n          // Touch Event\n          // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent\n          if (touchEvent.touches && touchEvent.touches.length > 0) {\n            this._convertEventPosToPoint(touchEvent.touches[0], this.p1);\n\n            this._numActivePoints++;\n\n            if (touchEvent.touches.length > 1) {\n              this._convertEventPosToPoint(touchEvent.touches[1], this.p2);\n\n              this._numActivePoints++;\n            }\n          }\n        } else {\n          // Mouse Event\n          this._convertEventPosToPoint(\n          /** @type {PointerEvent} */\n          e, this.p1);\n\n          if (pointerType === 'up') {\n            // clear all points on mouseup\n            this._numActivePoints = 0;\n          } else {\n            this._numActivePoints++;\n          }\n        }\n      }\n    } // update points that were used during previous rAF tick\n\n  }, {\n    key: \"_updatePrevPoints\",\n    value: function _updatePrevPoints() {\n      equalizePoints(this.prevP1, this.p1);\n      equalizePoints(this.prevP2, this.p2);\n    } // update points at the start of gesture\n\n  }, {\n    key: \"_updateStartPoints\",\n    value: function _updateStartPoints() {\n      equalizePoints(this.startP1, this.p1);\n      equalizePoints(this.startP2, this.p2);\n\n      this._updatePrevPoints();\n    }\n  }, {\n    key: \"_calculateDragDirection\",\n    value: function _calculateDragDirection() {\n      if (this.pswp.mainScroll.isShifted()) {\n        // if main scroll position is shifted – direction is always horizontal\n        this.dragAxis = 'x';\n      } else {\n        // calculate delta of the last touchmove tick\n        var diff = Math.abs(this.p1.x - this.startP1.x) - Math.abs(this.p1.y - this.startP1.y);\n\n        if (diff !== 0) {\n          // check if pointer was shifted horizontally or vertically\n          var axisToCheck = diff > 0 ? 'x' : 'y';\n\n          if (Math.abs(this.p1[axisToCheck] - this.startP1[axisToCheck]) >= AXIS_SWIPE_HYSTERISIS) {\n            this.dragAxis = axisToCheck;\n          }\n        }\n      }\n    }\n    /**\r\n     * Converts touch, pointer or mouse event\r\n     * to PhotoSwipe point.\r\n     *\r\n     * @private\r\n     * @param {Touch | PointerEvent} e\r\n     * @param {Point} p\r\n     */\n\n  }, {\n    key: \"_convertEventPosToPoint\",\n    value: function _convertEventPosToPoint(e, p) {\n      p.x = e.pageX - this.pswp.offset.x;\n      p.y = e.pageY - this.pswp.offset.y;\n\n      if ('pointerId' in e) {\n        p.id = e.pointerId;\n      } else if (e.identifier !== undefined) {\n        p.id = e.identifier;\n      }\n\n      return p;\n    }\n    /**\r\n     * @private\r\n     * @param {PointerEvent} e\r\n     */\n\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(e) {\n      // Do not allow click event to pass through after drag\n      if (this.pswp.mainScroll.isShifted()) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  }]);\n\n  return Gestures;\n}();\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('./slide/slide.js').default} Slide */\n\n/** @typedef {{ el: HTMLDivElement; slide?: Slide }} ItemHolder */\n\n\nvar MAIN_SCROLL_END_FRICTION = 0.35; // const MIN_SWIPE_TRANSITION_DURATION = 250;\n// const MAX_SWIPE_TRABSITION_DURATION = 500;\n// const DEFAULT_SWIPE_TRANSITION_DURATION = 333;\n\n/**\r\n * Handles movement of the main scrolling container\r\n * (for example, it repositions when user swipes left or right).\r\n *\r\n * Also stores its state.\r\n */\n\nvar MainScroll = /*#__PURE__*/function () {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  function MainScroll(pswp) {\n    _classCallCheck(this, MainScroll);\n\n    this.pswp = pswp;\n    this.x = 0;\n    /** @type {number} */\n\n    this.slideWidth = undefined;\n    /** @type {ItemHolder[]} */\n\n    this.itemHolders = undefined;\n    this.resetPosition();\n  }\n  /**\r\n   * Position the scroller and slide containers\r\n   * according to viewport size.\r\n   *\r\n   * @param {boolean=} resizeSlides Whether slides content should resized\r\n   */\n\n\n  _createClass(MainScroll, [{\n    key: \"resize\",\n    value: function resize(resizeSlides) {\n      var _this6 = this;\n\n      var pswp = this.pswp;\n      var newSlideWidth = Math.round(pswp.viewportSize.x + pswp.viewportSize.x * pswp.options.spacing); // Mobile browsers might trigger a resize event during a gesture.\n      // (due to toolbar appearing or hiding).\n      // Avoid re-adjusting main scroll position if width wasn't changed\n\n      var slideWidthChanged = newSlideWidth !== this.slideWidth;\n\n      if (slideWidthChanged) {\n        this.slideWidth = newSlideWidth;\n        this.moveTo(this.getCurrSlideX());\n      }\n\n      this.itemHolders.forEach(function (itemHolder, index) {\n        if (slideWidthChanged) {\n          setTransform(itemHolder.el, (index + _this6._containerShiftIndex) * _this6.slideWidth);\n        }\n\n        if (resizeSlides && itemHolder.slide) {\n          itemHolder.slide.resize();\n        }\n      });\n    }\n    /**\r\n     * Reset X position of the main scroller to zero\r\n     */\n\n  }, {\n    key: \"resetPosition\",\n    value: function resetPosition() {\n      // Position on the main scroller (offset)\n      // it is independent from slide index\n      this._currPositionIndex = 0;\n      this._prevPositionIndex = 0; // This will force recalculation of size on next resize()\n\n      this.slideWidth = 0; // _containerShiftIndex*viewportSize will give you amount of transform of the current slide\n\n      this._containerShiftIndex = -1;\n    }\n    /**\r\n     * Create and append array of three items\r\n     * that hold data about slides in DOM\r\n     */\n\n  }, {\n    key: \"appendHolders\",\n    value: function appendHolders() {\n      this.itemHolders = []; // append our three slide holders -\n      // previous, current, and next\n\n      for (var i = 0; i < 3; i++) {\n        var el = createElement('pswp__item', false, this.pswp.container);\n        el.setAttribute('role', 'group');\n        el.setAttribute('aria-roledescription', 'slide');\n        el.setAttribute('aria-hidden', 'true'); // hide nearby item holders until initial zoom animation finishes (to avoid extra Paints)\n\n        el.style.display = i === 1 ? 'block' : 'none';\n        this.itemHolders.push({\n          el: el //index: -1\n\n        });\n      }\n    }\n    /**\r\n     * Whether the main scroll can be horizontally swiped to the next or previous slide.\r\n     */\n\n  }, {\n    key: \"canBeSwiped\",\n    value: function canBeSwiped() {\n      return this.pswp.getNumItems() > 1;\n    }\n    /**\r\n     * Move main scroll by X amount of slides.\r\n     * For example:\r\n     *   `-1` will move to the previous slide,\r\n     *    `0` will reset the scroll position of the current slide,\r\n     *    `3` will move three slides forward\r\n     *\r\n     * If loop option is enabled - index will be automatically looped too,\r\n     * (for example `-1` will move to the last slide of the gallery).\r\n     *\r\n     * @param {number} diff\r\n     * @param {boolean=} animate\r\n     * @param {number=} velocityX\r\n     * @returns {boolean} whether index was changed or not\r\n     */\n\n  }, {\n    key: \"moveIndexBy\",\n    value: function moveIndexBy(diff, animate, velocityX) {\n      var _this7 = this;\n\n      var pswp = this.pswp;\n      var newIndex = pswp.potentialIndex + diff;\n      var numSlides = pswp.getNumItems();\n\n      if (pswp.canLoop()) {\n        newIndex = pswp.getLoopedIndex(newIndex);\n        var distance = (diff + numSlides) % numSlides;\n\n        if (distance <= numSlides / 2) {\n          // go forward\n          diff = distance;\n        } else {\n          // go backwards\n          diff = distance - numSlides;\n        }\n      } else {\n        if (newIndex < 0) {\n          newIndex = 0;\n        } else if (newIndex >= numSlides) {\n          newIndex = numSlides - 1;\n        }\n\n        diff = newIndex - pswp.potentialIndex;\n      }\n\n      pswp.potentialIndex = newIndex;\n      this._currPositionIndex -= diff;\n      pswp.animations.stopMainScroll();\n      var destinationX = this.getCurrSlideX();\n\n      if (!animate) {\n        this.moveTo(destinationX);\n        this.updateCurrItem();\n      } else {\n        pswp.animations.startSpring({\n          isMainScroll: true,\n          start: this.x,\n          end: destinationX,\n          velocity: velocityX || 0,\n          naturalFrequency: 30,\n          dampingRatio: 1,\n          //0.7,\n          onUpdate: function onUpdate(x) {\n            _this7.moveTo(x);\n          },\n          onComplete: function onComplete() {\n            _this7.updateCurrItem();\n\n            pswp.appendHeavy();\n          }\n        });\n        var currDiff = pswp.potentialIndex - pswp.currIndex;\n\n        if (pswp.canLoop()) {\n          var currDistance = (currDiff + numSlides) % numSlides;\n\n          if (currDistance <= numSlides / 2) {\n            // go forward\n            currDiff = currDistance;\n          } else {\n            // go backwards\n            currDiff = currDistance - numSlides;\n          }\n        } // Force-append new slides during transition\n        // if difference between slides is more than 1\n\n\n        if (Math.abs(currDiff) > 1) {\n          this.updateCurrItem();\n        }\n      }\n\n      if (diff) {\n        return true;\n      }\n    }\n    /**\r\n     * X position of the main scroll for the current slide\r\n     * (ignores position during dragging)\r\n     */\n\n  }, {\n    key: \"getCurrSlideX\",\n    value: function getCurrSlideX() {\n      return this.slideWidth * this._currPositionIndex;\n    }\n    /**\r\n     * Whether scroll position is shifted.\r\n     * For example, it will return true if the scroll is being dragged or animated.\r\n     */\n\n  }, {\n    key: \"isShifted\",\n    value: function isShifted() {\n      return this.x !== this.getCurrSlideX();\n    }\n    /**\r\n     * Update slides X positions and set their content\r\n     */\n\n  }, {\n    key: \"updateCurrItem\",\n    value: function updateCurrItem() {\n      var pswp = this.pswp;\n      var positionDifference = this._prevPositionIndex - this._currPositionIndex;\n\n      if (!positionDifference) {\n        return;\n      }\n\n      this._prevPositionIndex = this._currPositionIndex;\n      pswp.currIndex = pswp.potentialIndex;\n      var diffAbs = Math.abs(positionDifference);\n      var tempHolder;\n\n      if (diffAbs >= 3) {\n        this._containerShiftIndex += positionDifference + (positionDifference > 0 ? -3 : 3);\n        diffAbs = 3;\n      }\n\n      for (var i = 0; i < diffAbs; i++) {\n        if (positionDifference > 0) {\n          tempHolder = this.itemHolders.shift();\n          this.itemHolders[2] = tempHolder; // move first to last\n\n          this._containerShiftIndex++;\n          setTransform(tempHolder.el, (this._containerShiftIndex + 2) * this.slideWidth);\n          pswp.setContent(tempHolder, pswp.currIndex - diffAbs + i + 2);\n        } else {\n          tempHolder = this.itemHolders.pop();\n          this.itemHolders.unshift(tempHolder); // move last to first\n\n          this._containerShiftIndex--;\n          setTransform(tempHolder.el, this._containerShiftIndex * this.slideWidth);\n          pswp.setContent(tempHolder, pswp.currIndex + diffAbs - i - 2);\n        }\n      } // Reset transfrom every 50ish navigations in one direction.\n      //\n      // Otherwise transform will keep growing indefinitely,\n      // which might cause issues as browsers have a maximum transform limit.\n      // I wasn't able to reach it, but just to be safe.\n      // This should not cause noticable lag.\n\n\n      if (Math.abs(this._containerShiftIndex) > 50 && !this.isShifted()) {\n        this.resetPosition();\n        this.resize();\n      } // Pan transition might be running (and consntantly updating pan position)\n\n\n      pswp.animations.stopAllPan();\n      this.itemHolders.forEach(function (itemHolder, i) {\n        if (itemHolder.slide) {\n          // Slide in the 2nd holder is always active\n          itemHolder.slide.setIsActive(i === 1);\n        }\n      });\n      pswp.currSlide = this.itemHolders[1].slide;\n      pswp.contentLoader.updateLazy(positionDifference);\n\n      if (pswp.currSlide) {\n        pswp.currSlide.applyCurrentZoomPan();\n      }\n\n      pswp.dispatch('change');\n    }\n    /**\r\n     * Move the X position of the main scroll container\r\n     *\r\n     * @param {number} x\r\n     * @param {boolean=} dragging\r\n     */\n\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(x, dragging) {\n      /** @type {number} */\n      var newSlideIndexOffset;\n      /** @type {number} */\n\n      var delta;\n\n      if (!this.pswp.canLoop() && dragging) {\n        // Apply friction\n        newSlideIndexOffset = (this.slideWidth * this._currPositionIndex - x) / this.slideWidth;\n        newSlideIndexOffset += this.pswp.currIndex;\n        delta = Math.round(x - this.x);\n\n        if (newSlideIndexOffset < 0 && delta > 0 || newSlideIndexOffset >= this.pswp.getNumItems() - 1 && delta < 0) {\n          x = this.x + delta * MAIN_SCROLL_END_FRICTION;\n        }\n      }\n\n      this.x = x;\n      setTransform(this.pswp.container, x);\n      this.pswp.dispatch('moveMainScroll', {\n        x: x,\n        dragging: dragging\n      });\n    }\n  }]);\n\n  return MainScroll;\n}();\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Methods<T>} Methods<T>\r\n */\n\n/**\r\n * - Manages keyboard shortcuts.\r\n * - Heps trap focus within photoswipe.\r\n */\n\n\nvar Keyboard = /*#__PURE__*/function () {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  function Keyboard(pswp) {\n    var _this8 = this;\n\n    _classCallCheck(this, Keyboard);\n\n    this.pswp = pswp;\n    pswp.on('bindEvents', function () {\n      // Dialog was likely opened by keyboard if initial point is not defined\n      if (!pswp.options.initialPointerPos) {\n        // focus causes layout,\n        // which causes lag during the animation,\n        // that's why we delay it until the opener transition ends\n        _this8._focusRoot();\n      }\n\n      pswp.events.add(document, 'focusin', _this8._onFocusIn.bind(_this8));\n      pswp.events.add(document, 'keydown', _this8._onKeyDown.bind(_this8));\n    });\n    var lastActiveElement =\n    /** @type {HTMLElement} */\n    document.activeElement;\n    pswp.on('destroy', function () {\n      if (pswp.options.returnFocus && lastActiveElement && _this8._wasFocused) {\n        lastActiveElement.focus();\n      }\n    });\n  }\n\n  _createClass(Keyboard, [{\n    key: \"_focusRoot\",\n    value: function _focusRoot() {\n      if (!this._wasFocused) {\n        this.pswp.element.focus();\n        this._wasFocused = true;\n      }\n    }\n    /**\r\n     * @param {KeyboardEvent} e\r\n     */\n\n  }, {\n    key: \"_onKeyDown\",\n    value: function _onKeyDown(e) {\n      var pswp = this.pswp;\n\n      if (pswp.dispatch('keydown', {\n        originalEvent: e\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (specialKeyUsed(e)) {\n        // don't do anything if special key pressed\n        // to prevent from overriding default browser actions\n        // for example, in Chrome on Mac cmd+arrow-left returns to previous page\n        return;\n      }\n      /** @type {Methods<PhotoSwipe>} */\n\n\n      var keydownAction;\n      /** @type {'x' | 'y'} */\n\n      var axis;\n      var isForward;\n\n      switch (e.keyCode) {\n        case 27:\n          // esc\n          if (pswp.options.escKey) {\n            keydownAction = 'close';\n          }\n\n          break;\n\n        case 90:\n          // z key\n          keydownAction = 'toggleZoom';\n          break;\n\n        case 37:\n          // left\n          axis = 'x';\n          break;\n\n        case 38:\n          // top\n          axis = 'y';\n          break;\n\n        case 39:\n          // right\n          axis = 'x';\n          isForward = true;\n          break;\n\n        case 40:\n          // bottom\n          isForward = true;\n          axis = 'y';\n          break;\n\n        case 9:\n          // tab\n          this._focusRoot();\n\n          break;\n      } // if left/right/top/bottom key\n\n\n      if (axis) {\n        // prevent page scroll\n        e.preventDefault();\n        var currSlide = pswp.currSlide;\n\n        if (pswp.options.arrowKeys && axis === 'x' && pswp.getNumItems() > 1) {\n          keydownAction = isForward ? 'next' : 'prev';\n        } else if (currSlide && currSlide.currZoomLevel > currSlide.zoomLevels.fit) {\n          // up/down arrow keys pan the image vertically\n          // left/right arrow keys pan horizontally.\n          // Unless there is only one image,\n          // or arrowKeys option is disabled\n          currSlide.pan[axis] += isForward ? -80 : 80;\n          currSlide.panTo(currSlide.pan.x, currSlide.pan.y);\n        }\n      }\n\n      if (keydownAction) {\n        e.preventDefault();\n        pswp[keydownAction]();\n      }\n    }\n    /**\r\n     * Trap focus inside photoswipe\r\n     *\r\n     * @param {FocusEvent} e\r\n     */\n\n  }, {\n    key: \"_onFocusIn\",\n    value: function _onFocusIn(e) {\n      var template = this.pswp.template;\n\n      if (document !== e.target && template !== e.target && !template.contains(\n      /** @type {Node} */\n      e.target)) {\n        // focus root element\n        template.focus();\n      }\n    }\n  }]);\n\n  return Keyboard;\n}();\n\nvar DEFAULT_EASING = 'cubic-bezier(.4,0,.22,1)';\n/** @typedef {import('./animations.js').AnimationProps} AnimationProps */\n\n/**\r\n * Runs CSS transition.\r\n */\n\nvar CSSAnimation = /*#__PURE__*/function () {\n  /**\r\n   * onComplete can be unpredictable, be careful about current state\r\n   *\r\n   * @param {AnimationProps} props\r\n   */\n  function CSSAnimation(props) {\n    var _this9 = this;\n\n    _classCallCheck(this, CSSAnimation);\n\n    this.props = props;\n    var target = props.target,\n        onComplete = props.onComplete,\n        transform = props.transform,\n        onFinish = props.onFinish;\n    var duration = props.duration,\n        easing = props.easing;\n    /** @type {() => void} */\n\n    this.onFinish = onFinish; // support only transform and opacity\n\n    var prop = transform ? 'transform' : 'opacity';\n    var propValue = props[prop];\n    /** @private */\n\n    this._target = target;\n    /** @private */\n\n    this._onComplete = onComplete;\n    duration = duration || 333;\n    easing = easing || DEFAULT_EASING;\n    /** @private */\n\n    this._onTransitionEnd = this._onTransitionEnd.bind(this); // Using timeout hack to make sure that animation\n    // starts even if the animated property was changed recently,\n    // otherwise transitionend might not fire or transiton won't start.\n    // https://drafts.csswg.org/css-transitions/#starting\n    //\n    // ¯\\_(ツ)_/¯\n\n    /** @private */\n\n    this._helperTimeout = setTimeout(function () {\n      setTransitionStyle(target, prop, duration, easing);\n      _this9._helperTimeout = setTimeout(function () {\n        target.addEventListener('transitionend', _this9._onTransitionEnd, false);\n        target.addEventListener('transitioncancel', _this9._onTransitionEnd, false); // Safari occasionally does not emit transitionend event\n        // if element propery was modified during the transition,\n        // which may be caused by resize or third party component,\n        // using timeout as a safety fallback\n\n        _this9._helperTimeout = setTimeout(function () {\n          _this9._finalizeAnimation();\n        }, duration + 500);\n        target.style[prop] = propValue;\n      }, 30); // Do not reduce this number\n    }, 0);\n  }\n  /**\r\n   * @private\r\n   * @param {TransitionEvent} e\r\n   */\n\n\n  _createClass(CSSAnimation, [{\n    key: \"_onTransitionEnd\",\n    value: function _onTransitionEnd(e) {\n      if (e.target === this._target) {\n        this._finalizeAnimation();\n      }\n    }\n    /**\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_finalizeAnimation\",\n    value: function _finalizeAnimation() {\n      if (!this._finished) {\n        this._finished = true;\n        this.onFinish();\n\n        if (this._onComplete) {\n          this._onComplete();\n        }\n      }\n    } // Destroy is called automatically onFinish\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._helperTimeout) {\n        clearTimeout(this._helperTimeout);\n      }\n\n      removeTransitionStyle(this._target);\n\n      this._target.removeEventListener('transitionend', this._onTransitionEnd, false);\n\n      this._target.removeEventListener('transitioncancel', this._onTransitionEnd, false);\n\n      if (!this._finished) {\n        this._finalizeAnimation();\n      }\n    }\n  }]);\n\n  return CSSAnimation;\n}();\n\nvar DEFAULT_NATURAL_FREQUENCY = 12;\nvar DEFAULT_DAMPING_RATIO = 0.75;\n/**\r\n * Spring easing helper\r\n */\n\nvar SpringEaser = /*#__PURE__*/function () {\n  /**\r\n   * @param {number} initialVelocity Initial velocity, px per ms.\r\n   *\r\n   * @param {number} dampingRatio\r\n   * Determines how bouncy animation will be.\r\n   * From 0 to 1, 0 - always overshoot, 1 - do not overshoot.\r\n   * \"overshoot\" refers to part of animation that\r\n   * goes beyond the final value.\r\n   *\r\n   * @param {number} naturalFrequency\r\n   * Determines how fast animation will slow down.\r\n   * The higher value - the stiffer the transition will be,\r\n   * and the faster it will slow down.\r\n   * Recommended value from 10 to 50\r\n   */\n  function SpringEaser(initialVelocity, dampingRatio, naturalFrequency) {\n    _classCallCheck(this, SpringEaser);\n\n    this.velocity = initialVelocity * 1000; // convert to \"pixels per second\"\n    // https://en.wikipedia.org/wiki/Damping_ratio\n\n    this._dampingRatio = dampingRatio || DEFAULT_DAMPING_RATIO; // https://en.wikipedia.org/wiki/Natural_frequency\n\n    this._naturalFrequency = naturalFrequency || DEFAULT_NATURAL_FREQUENCY;\n\n    if (this._dampingRatio < 1) {\n      this._dampedFrequency = this._naturalFrequency * Math.sqrt(1 - this._dampingRatio * this._dampingRatio);\n    }\n  }\n  /**\r\n   * @param {number} deltaPosition Difference between current and end position of the animation\r\n   * @param {number} deltaTime Frame duration in milliseconds\r\n   *\r\n   * @returns {number} Displacement, relative to the end position.\r\n   */\n\n\n  _createClass(SpringEaser, [{\n    key: \"easeFrame\",\n    value: function easeFrame(deltaPosition, deltaTime) {\n      // Inspired by Apple Webkit and Android spring function implementation\n      // https://en.wikipedia.org/wiki/Oscillation\n      // https://en.wikipedia.org/wiki/Damping_ratio\n      // we ignore mass (assume that it's 1kg)\n      var displacement = 0;\n      var coeff;\n      deltaTime /= 1000;\n      var naturalDumpingPow = Math.pow(Math.E, -this._dampingRatio * this._naturalFrequency * deltaTime);\n\n      if (this._dampingRatio === 1) {\n        coeff = this.velocity + this._naturalFrequency * deltaPosition;\n        displacement = (deltaPosition + coeff * deltaTime) * naturalDumpingPow;\n        this.velocity = displacement * -this._naturalFrequency + coeff * naturalDumpingPow;\n      } else if (this._dampingRatio < 1) {\n        coeff = 1 / this._dampedFrequency * (this._dampingRatio * this._naturalFrequency * deltaPosition + this.velocity);\n        var dumpedFCos = Math.cos(this._dampedFrequency * deltaTime);\n        var dumpedFSin = Math.sin(this._dampedFrequency * deltaTime);\n        displacement = naturalDumpingPow * (deltaPosition * dumpedFCos + coeff * dumpedFSin);\n        this.velocity = displacement * -this._naturalFrequency * this._dampingRatio + naturalDumpingPow * (-this._dampedFrequency * deltaPosition * dumpedFSin + this._dampedFrequency * coeff * dumpedFCos);\n      } // Overdamped (>1) damping ratio is not supported\n\n\n      return displacement;\n    }\n  }]);\n\n  return SpringEaser;\n}();\n/** @typedef {import('./animations.js').AnimationProps} AnimationProps */\n\n\nvar SpringAnimation = /*#__PURE__*/function () {\n  /**\r\n   * @param {AnimationProps} props\r\n   */\n  function SpringAnimation(props) {\n    var _this10 = this;\n\n    _classCallCheck(this, SpringAnimation);\n\n    this.props = props;\n    var start = props.start,\n        end = props.end,\n        velocity = props.velocity,\n        onUpdate = props.onUpdate,\n        onComplete = props.onComplete,\n        onFinish = props.onFinish,\n        dampingRatio = props.dampingRatio,\n        naturalFrequency = props.naturalFrequency;\n    /** @type {() => void} */\n\n    this.onFinish = onFinish;\n    var easer = new SpringEaser(velocity, dampingRatio, naturalFrequency);\n    var prevTime = Date.now();\n    var deltaPosition = start - end;\n\n    var animationLoop = function animationLoop() {\n      if (_this10._raf) {\n        deltaPosition = easer.easeFrame(deltaPosition, Date.now() - prevTime); // Stop the animation if velocity is low and position is close to end\n\n        if (Math.abs(deltaPosition) < 1 && Math.abs(easer.velocity) < 50) {\n          // Finalize the animation\n          onUpdate(end);\n\n          if (onComplete) {\n            onComplete();\n          }\n\n          _this10.onFinish();\n        } else {\n          prevTime = Date.now();\n          onUpdate(deltaPosition + end);\n          _this10._raf = requestAnimationFrame(animationLoop);\n        }\n      }\n    };\n\n    this._raf = requestAnimationFrame(animationLoop);\n  } // Destroy is called automatically onFinish\n\n\n  _createClass(SpringAnimation, [{\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._raf >= 0) {\n        cancelAnimationFrame(this._raf);\n      }\n\n      this._raf = null;\n    }\n  }]);\n\n  return SpringAnimation;\n}();\n/** @typedef {SpringAnimation | CSSAnimation} Animation */\n\n/**\r\n * @typedef {Object} AnimationProps\r\n *\r\n * @prop {HTMLElement=} target\r\n *\r\n * @prop {string=} name\r\n *\r\n * @prop {number=} start\r\n * @prop {number=} end\r\n * @prop {number=} duration\r\n * @prop {number=} velocity\r\n * @prop {number=} dampingRatio\r\n * @prop {number=} naturalFrequency\r\n *\r\n * @prop {(end: number) => void} [onUpdate]\r\n * @prop {() => void} [onComplete]\r\n * @prop {() => void} [onFinish]\r\n *\r\n * @prop {string=} transform\r\n * @prop {string=} opacity\r\n * @prop {string=} easing\r\n *\r\n * @prop {boolean=} isPan\r\n * @prop {boolean=} isMainScroll\r\n */\n\n/**\r\n * Manages animations\r\n */\n\n\nvar Animations = /*#__PURE__*/function () {\n  function Animations() {\n    _classCallCheck(this, Animations);\n\n    /** @type {Animation[]} */\n    this.activeAnimations = [];\n  }\n  /**\r\n   * @param {AnimationProps} props\r\n   */\n\n\n  _createClass(Animations, [{\n    key: \"startSpring\",\n    value: function startSpring(props) {\n      this._start(props, true);\n    }\n    /**\r\n     * @param {AnimationProps} props\r\n     */\n\n  }, {\n    key: \"startTransition\",\n    value: function startTransition(props) {\n      this._start(props);\n    }\n    /**\r\n     * @param {AnimationProps} props\r\n     * @param {boolean=} isSpring\r\n     */\n\n  }, {\n    key: \"_start\",\n    value: function _start(props, isSpring) {\n      var _this11 = this;\n\n      /** @type {Animation} */\n      var animation;\n\n      if (isSpring) {\n        animation = new SpringAnimation(props);\n      } else {\n        animation = new CSSAnimation(props);\n      }\n\n      this.activeAnimations.push(animation);\n\n      animation.onFinish = function () {\n        return _this11.stop(animation);\n      };\n\n      return animation;\n    }\n    /**\r\n     * @param {Animation} animation\r\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop(animation) {\n      animation.destroy();\n      var index = this.activeAnimations.indexOf(animation);\n\n      if (index > -1) {\n        this.activeAnimations.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"stopAll\",\n    value: function stopAll() {\n      // _stopAllAnimations\n      this.activeAnimations.forEach(function (animation) {\n        animation.destroy();\n      });\n      this.activeAnimations = [];\n    }\n    /**\r\n     * Stop all pan or zoom transitions\r\n     */\n\n  }, {\n    key: \"stopAllPan\",\n    value: function stopAllPan() {\n      this.activeAnimations = this.activeAnimations.filter(function (animation) {\n        if (animation.props.isPan) {\n          animation.destroy();\n          return false;\n        }\n\n        return true;\n      });\n    }\n  }, {\n    key: \"stopMainScroll\",\n    value: function stopMainScroll() {\n      this.activeAnimations = this.activeAnimations.filter(function (animation) {\n        if (animation.props.isMainScroll) {\n          animation.destroy();\n          return false;\n        }\n\n        return true;\n      });\n    }\n    /**\r\n     * Returns true if main scroll transition is running\r\n     */\n    // isMainScrollRunning() {\n    //   return this.activeAnimations.some((animation) => {\n    //     return animation.props.isMainScroll;\n    //   });\n    // }\n\n    /**\r\n     * Returns true if any pan or zoom transition is running\r\n     */\n\n  }, {\n    key: \"isPanRunning\",\n    value: function isPanRunning() {\n      return this.activeAnimations.some(function (animation) {\n        return animation.props.isPan;\n      });\n    }\n  }]);\n\n  return Animations;\n}();\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/**\r\n * Handles scroll wheel.\r\n * Can pan and zoom current slide image.\r\n */\n\n\nvar ScrollWheel = /*#__PURE__*/function () {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  function ScrollWheel(pswp) {\n    _classCallCheck(this, ScrollWheel);\n\n    this.pswp = pswp;\n    pswp.events.add(pswp.element, 'wheel', this._onWheel.bind(this));\n  }\n  /**\r\n   * @private\r\n   * @param {WheelEvent} e\r\n   */\n\n\n  _createClass(ScrollWheel, [{\n    key: \"_onWheel\",\n    value: function _onWheel(e) {\n      e.preventDefault();\n      var currSlide = this.pswp.currSlide;\n      var deltaX = e.deltaX,\n          deltaY = e.deltaY;\n\n      if (!currSlide) {\n        return;\n      }\n\n      if (this.pswp.dispatch('wheel', {\n        originalEvent: e\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (e.ctrlKey || this.pswp.options.wheelToZoom) {\n        // zoom\n        if (currSlide.isZoomable()) {\n          var zoomFactor = -deltaY;\n\n          if (e.deltaMode === 1\n          /* DOM_DELTA_LINE */\n          ) {\n              zoomFactor *= 0.05;\n            } else {\n            zoomFactor *= e.deltaMode ? 1 : 0.002;\n          }\n\n          zoomFactor = Math.pow(2, zoomFactor);\n          var destZoomLevel = currSlide.currZoomLevel * zoomFactor;\n          currSlide.zoomTo(destZoomLevel, {\n            x: e.clientX,\n            y: e.clientY\n          });\n        }\n      } else {\n        // pan\n        if (currSlide.isPannable()) {\n          if (e.deltaMode === 1\n          /* DOM_DELTA_LINE */\n          ) {\n              // 18 - average line height\n              deltaX *= 18;\n              deltaY *= 18;\n            }\n\n          currSlide.panTo(currSlide.pan.x - deltaX, currSlide.pan.y - deltaY);\n        }\n      }\n    }\n  }]);\n\n  return ScrollWheel;\n}();\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/**\r\n * @template T\r\n * @typedef {import('../types.js').Methods<T>} Methods<T>\r\n */\n\n/**\r\n * @typedef {Object} UIElementMarkupProps\r\n * @prop {boolean=} isCustomSVG\r\n * @prop {string} inner\r\n * @prop {string=} outlineID\r\n * @prop {number | string} [size]\r\n */\n\n/**\r\n * @typedef {Object} UIElementData\r\n * @prop {DefaultUIElements | string} [name]\r\n * @prop {string=} className\r\n * @prop {UIElementMarkup=} html\r\n * @prop {boolean=} isButton\r\n * @prop {keyof HTMLElementTagNameMap} [tagName]\r\n * @prop {string=} title\r\n * @prop {string=} ariaLabel\r\n * @prop {(element: HTMLElement, pswp: PhotoSwipe) => void} [onInit]\r\n * @prop {Methods<PhotoSwipe> | ((e: MouseEvent, element: HTMLElement, pswp: PhotoSwipe) => void)} [onClick]\r\n * @prop {'bar' | 'wrapper' | 'root'} [appendTo]\r\n * @prop {number=} order\r\n */\n\n/** @typedef {'arrowPrev' | 'arrowNext' | 'close' | 'zoom' | 'counter'} DefaultUIElements */\n\n/** @typedef {string | UIElementMarkupProps} UIElementMarkup */\n\n/**\r\n * @param {UIElementMarkup} [htmlData]\r\n */\n\n\nfunction addElementHTML(htmlData) {\n  if (typeof htmlData === 'string') {\n    // Allow developers to provide full svg,\n    // For example:\n    // <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" aria-hidden=\"true\" class=\"pswp__icn\">\n    //   <path d=\"...\" />\n    //   <circle ... />\n    // </svg>\n    // Can also be any HTML string.\n    return htmlData;\n  }\n\n  if (!htmlData || !htmlData.isCustomSVG) {\n    return '';\n  }\n\n  var svgData = htmlData;\n  var out = '<svg aria-hidden=\"true\" class=\"pswp__icn\" viewBox=\"0 0 %d %d\" width=\"%d\" height=\"%d\">'; // replace all %d with size\n\n  out = out.split('%d').join(\n  /** @type {string} */\n  svgData.size || 32); // Icons may contain outline/shadow,\n  // to make it we \"clone\" base icon shape and add border to it.\n  // Icon itself and border are styled via CSS.\n  //\n  // Property shadowID defines ID of element that should be cloned.\n\n  if (svgData.outlineID) {\n    out += '<use class=\"pswp__icn-shadow\" xlink:href=\"#' + svgData.outlineID + '\"/>';\n  }\n\n  out += svgData.inner;\n  out += '</svg>';\n  return out;\n}\n\nvar UIElement =\n/**\r\n * @param {PhotoSwipe} pswp\r\n * @param {UIElementData} data\r\n */\nfunction UIElement(pswp, data) {\n  _classCallCheck(this, UIElement);\n\n  var name = data.name || data.className;\n  var elementHTML = data.html; // @ts-expect-error lookup only by `data.name` maybe?\n\n  if (pswp.options[name] === false) {\n    // exit if element is disabled from options\n    return;\n  } // Allow to override SVG icons from options\n  // @ts-expect-error lookup only by `data.name` maybe?\n\n\n  if (typeof pswp.options[name + 'SVG'] === 'string') {\n    // arrowPrevSVG\n    // arrowNextSVG\n    // closeSVG\n    // zoomSVG\n    // @ts-expect-error lookup only by `data.name` maybe?\n    elementHTML = pswp.options[name + 'SVG'];\n  }\n\n  pswp.dispatch('uiElementCreate', {\n    data: data\n  });\n  var className = '';\n\n  if (data.isButton) {\n    className += 'pswp__button ';\n    className += data.className || \"pswp__button--\".concat(data.name);\n  } else {\n    className += data.className || \"pswp__\".concat(data.name);\n  }\n  /** @type {HTMLElement} */\n\n\n  var element;\n  var tagName = data.isButton ? data.tagName || 'button' : data.tagName || 'div';\n  tagName =\n  /** @type {keyof HTMLElementTagNameMap} */\n  tagName.toLowerCase();\n  element = createElement(className, tagName);\n\n  if (data.isButton) {\n    // create button element\n    element = createElement(className, tagName);\n\n    if (tagName === 'button') {\n      /** @type {HTMLButtonElement} */\n      element.type = 'button';\n    }\n\n    var title = data.title;\n    var ariaLabel = data.ariaLabel; // @ts-expect-error lookup only by `data.name` maybe?\n\n    if (typeof pswp.options[name + 'Title'] === 'string') {\n      // @ts-expect-error lookup only by `data.name` maybe?\n      title = pswp.options[name + 'Title'];\n    }\n\n    if (title) {\n      element.title = title;\n    }\n\n    if (ariaLabel || title) {\n      /** @type {HTMLElement} */\n      element.setAttribute('aria-label', ariaLabel || title);\n    }\n  }\n\n  element.innerHTML = addElementHTML(elementHTML);\n\n  if (data.onInit) {\n    data.onInit(element, pswp);\n  }\n\n  if (data.onClick) {\n    element.onclick = function (e) {\n      if (typeof data.onClick === 'string') {\n        pswp[data.onClick]();\n      } else {\n        data.onClick(e, element, pswp);\n      }\n    };\n  } // Top bar is default position\n\n\n  var appendTo = data.appendTo || 'bar';\n  var container;\n\n  if (appendTo === 'bar') {\n    if (!pswp.topBar) {\n      pswp.topBar = createElement('pswp__top-bar pswp__hide-on-close', 'div', pswp.scrollWrap);\n    }\n\n    container = pswp.topBar;\n  } else {\n    // element outside of top bar gets a secondary class\n    // that makes element fade out on close\n    element.classList.add('pswp__hide-on-close');\n\n    if (appendTo === 'wrapper') {\n      container = pswp.scrollWrap;\n    } else {\n      // root element\n      container = pswp.element;\n    }\n  }\n\n  container.appendChild(pswp.applyFilters('uiElement', element, data));\n};\n/*\r\n  Backward and forward arrow buttons\r\n */\n\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/**\r\n *\r\n * @param {HTMLElement} element\r\n * @param {PhotoSwipe} pswp\r\n * @param {boolean=} isNextButton\r\n */\n\n\nfunction initArrowButton(element, pswp, isNextButton) {\n  element.classList.add('pswp__button--arrow'); // TODO: this should point to a unique id for this instance\n\n  element.setAttribute('aria-controls', 'pswp__items');\n  pswp.on('change', function () {\n    if (!pswp.options.loop) {\n      if (isNextButton) {\n        /** @type {HTMLButtonElement} */\n        element.disabled = !(pswp.currIndex < pswp.getNumItems() - 1);\n      } else {\n        /** @type {HTMLButtonElement} */\n        element.disabled = !(pswp.currIndex > 0);\n      }\n    }\n  });\n}\n/** @type {UIElementData} */\n\n\nvar arrowPrev = {\n  name: 'arrowPrev',\n  className: 'pswp__button--arrow--prev',\n  title: 'Previous',\n  order: 10,\n  isButton: true,\n  appendTo: 'wrapper',\n  html: {\n    isCustomSVG: true,\n    size: 60,\n    inner: '<path d=\"M29 43l-3 3-16-16 16-16 3 3-13 13 13 13z\" id=\"pswp__icn-arrow\"/>',\n    outlineID: 'pswp__icn-arrow'\n  },\n  onClick: 'prev',\n  onInit: initArrowButton\n};\n/** @type {UIElementData} */\n\nvar arrowNext = {\n  name: 'arrowNext',\n  className: 'pswp__button--arrow--next',\n  title: 'Next',\n  order: 11,\n  isButton: true,\n  appendTo: 'wrapper',\n  html: {\n    isCustomSVG: true,\n    size: 60,\n    inner: '<use xlink:href=\"#pswp__icn-arrow\"/>',\n    outlineID: 'pswp__icn-arrow'\n  },\n  onClick: 'next',\n  onInit: function onInit(el, pswp) {\n    initArrowButton(el, pswp, true);\n  }\n};\n/** @type {import('./ui-element.js').UIElementData} UIElementData */\n\nvar closeButton = {\n  name: 'close',\n  title: 'Close',\n  order: 20,\n  isButton: true,\n  html: {\n    isCustomSVG: true,\n    inner: '<path d=\"M24 10l-2-2-6 6-6-6-2 2 6 6-6 6 2 2 6-6 6 6 2-2-6-6z\" id=\"pswp__icn-close\"/>',\n    outlineID: 'pswp__icn-close'\n  },\n  onClick: 'close'\n};\n/** @type {import('./ui-element.js').UIElementData} UIElementData */\n\nvar zoomButton = {\n  name: 'zoom',\n  title: 'Zoom',\n  order: 10,\n  isButton: true,\n  html: {\n    isCustomSVG: true,\n    // eslint-disable-next-line max-len\n    inner: '<path d=\"M17.426 19.926a6 6 0 1 1 1.5-1.5L23 22.5 21.5 24l-4.074-4.074z\" id=\"pswp__icn-zoom\"/>' + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-h\" d=\"M11 16v-2h6v2z\"/>' + '<path fill=\"currentColor\" class=\"pswp__zoom-icn-bar-v\" d=\"M13 12h2v6h-2z\"/>',\n    outlineID: 'pswp__icn-zoom'\n  },\n  onClick: 'toggleZoom'\n};\n/** @type {import('./ui-element.js').UIElementData} UIElementData */\n\nvar loadingIndicator = {\n  name: 'preloader',\n  appendTo: 'bar',\n  order: 7,\n  html: {\n    isCustomSVG: true,\n    // eslint-disable-next-line max-len\n    inner: '<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M21.2 16a5.2 5.2 0 1 1-5.2-5.2V8a8 8 0 1 0 8 8h-2.8Z\" id=\"pswp__icn-loading\"/>',\n    outlineID: 'pswp__icn-loading'\n  },\n  onInit: function onInit(indicatorElement, pswp) {\n    /** @type {boolean} */\n    var isVisible;\n    /** @type {NodeJS.Timeout} */\n\n    var delayTimeout;\n    /**\r\n     * @param {string} className\r\n     * @param {boolean} add\r\n     */\n\n    var toggleIndicatorClass = function toggleIndicatorClass(className, add) {\n      indicatorElement.classList[add ? 'add' : 'remove']('pswp__preloader--' + className);\n    };\n    /**\r\n     * @param {boolean} visible\r\n     */\n\n\n    var setIndicatorVisibility = function setIndicatorVisibility(visible) {\n      if (isVisible !== visible) {\n        isVisible = visible;\n        toggleIndicatorClass('active', visible);\n      }\n    };\n\n    var updatePreloaderVisibility = function updatePreloaderVisibility() {\n      if (!pswp.currSlide.content.isLoading()) {\n        setIndicatorVisibility(false);\n\n        if (delayTimeout) {\n          clearTimeout(delayTimeout);\n          delayTimeout = null;\n        }\n\n        return;\n      }\n\n      if (!delayTimeout) {\n        // display loading indicator with delay\n        delayTimeout = setTimeout(function () {\n          setIndicatorVisibility(pswp.currSlide.content.isLoading());\n          delayTimeout = null;\n        }, pswp.options.preloaderDelay);\n      }\n    };\n\n    pswp.on('change', updatePreloaderVisibility);\n    pswp.on('loadComplete', function (e) {\n      if (pswp.currSlide === e.slide) {\n        updatePreloaderVisibility();\n      }\n    }); // expose the method\n\n    pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\n  }\n};\n/** @type {import('./ui-element.js').UIElementData} UIElementData */\n\nvar counterIndicator = {\n  name: 'counter',\n  order: 5,\n  onInit: function onInit(counterElement, pswp) {\n    pswp.on('change', function () {\n      counterElement.innerText = pswp.currIndex + 1 + pswp.options.indexIndicatorSep + pswp.getNumItems();\n    });\n  }\n};\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('./ui-element.js').UIElementData} UIElementData */\n\n/**\r\n * Set special class on element when image is zoomed.\r\n *\r\n * By default it is used to adjust\r\n * zoom icon and zoom cursor via CSS.\r\n *\r\n * @param {HTMLElement} el\r\n * @param {boolean} isZoomedIn\r\n */\n\nfunction setZoomedIn(el, isZoomedIn) {\n  el.classList[isZoomedIn ? 'add' : 'remove']('pswp--zoomed-in');\n}\n\nvar UI = /*#__PURE__*/function () {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  function UI(pswp) {\n    _classCallCheck(this, UI);\n\n    this.pswp = pswp;\n    /** @type {() => void} */\n\n    this.updatePreloaderVisibility = undefined;\n    /** @type {number} */\n\n    this._lastUpdatedZoomLevel = undefined;\n  }\n\n  _createClass(UI, [{\n    key: \"init\",\n    value: function init() {\n      var _this12 = this;\n\n      var pswp = this.pswp;\n      this.isRegistered = false;\n      /** @type {UIElementData[]} */\n\n      this.uiElementsData = [closeButton, arrowPrev, arrowNext, zoomButton, loadingIndicator, counterIndicator];\n      pswp.dispatch('uiRegister'); // sort by order\n\n      this.uiElementsData.sort(function (a, b) {\n        // default order is 0\n        return (a.order || 0) - (b.order || 0);\n      });\n      /** @type {(UIElement | UIElementData)[]} */\n\n      this.items = [];\n      this.isRegistered = true;\n      this.uiElementsData.forEach(function (uiElementData) {\n        _this12.registerElement(uiElementData);\n      });\n      pswp.on('change', function () {\n        pswp.element.classList[pswp.getNumItems() === 1 ? 'add' : 'remove']('pswp--one-slide');\n      });\n      pswp.on('zoomPanUpdate', function () {\n        return _this12._onZoomPanUpdate();\n      });\n    }\n    /**\r\n     * @param {UIElementData} elementData\r\n     */\n\n  }, {\n    key: \"registerElement\",\n    value: function registerElement(elementData) {\n      if (this.isRegistered) {\n        this.items.push(new UIElement(this.pswp, elementData));\n      } else {\n        this.uiElementsData.push(elementData);\n      }\n    }\n    /**\r\n     * Fired each time zoom or pan position is changed.\r\n     * Update classes that control visibility of zoom button and cursor icon.\r\n     */\n\n  }, {\n    key: \"_onZoomPanUpdate\",\n    value: function _onZoomPanUpdate() {\n      var _this$pswp = this.pswp,\n          template = _this$pswp.template,\n          currSlide = _this$pswp.currSlide,\n          options = _this$pswp.options;\n      var currZoomLevel = currSlide.currZoomLevel;\n\n      if (this.pswp.opener.isClosing) {\n        return;\n      } // if not open yet - check against initial zoom level\n\n\n      if (!this.pswp.opener.isOpen) {\n        currZoomLevel = currSlide.zoomLevels.initial;\n      }\n\n      if (currZoomLevel === this._lastUpdatedZoomLevel) {\n        return;\n      }\n\n      this._lastUpdatedZoomLevel = currZoomLevel;\n      var currZoomLevelDiff = currSlide.zoomLevels.initial - currSlide.zoomLevels.secondary; // Initial and secondary zoom levels are almost equal\n\n      if (Math.abs(currZoomLevelDiff) < 0.01 || !currSlide.isZoomable()) {\n        // disable zoom\n        setZoomedIn(template, false);\n        template.classList.remove('pswp--zoom-allowed');\n        return;\n      }\n\n      template.classList.add('pswp--zoom-allowed');\n      var potentialZoomLevel = currZoomLevel === currSlide.zoomLevels.initial ? currSlide.zoomLevels.secondary : currSlide.zoomLevels.initial;\n      setZoomedIn(template, potentialZoomLevel <= currZoomLevel);\n\n      if (options.imageClickAction === 'zoom' || options.imageClickAction === 'zoom-or-close') {\n        template.classList.add('pswp--click-to-zoom');\n      }\n    }\n  }]);\n\n  return UI;\n}();\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {{ x: number; y: number; w: number; innerRect?: { w: number; h: number; x: number; y: number } }} Bounds */\n\n/**\r\n * @param {HTMLElement} el\r\n */\n\n\nfunction getBoundsByElement(el) {\n  var thumbAreaRect = el.getBoundingClientRect();\n  return {\n    x: thumbAreaRect.left,\n    y: thumbAreaRect.top,\n    w: thumbAreaRect.width\n  };\n}\n/**\r\n * @param {HTMLElement} el\r\n * @param {number} imageWidth\r\n * @param {number} imageHeight\r\n */\n\n\nfunction getCroppedBoundsByElement(el, imageWidth, imageHeight) {\n  var thumbAreaRect = el.getBoundingClientRect(); // fill image into the area\n  // (do they same as object-fit:cover does to retrieve coordinates)\n\n  var hRatio = thumbAreaRect.width / imageWidth;\n  var vRatio = thumbAreaRect.height / imageHeight;\n  var fillZoomLevel = hRatio > vRatio ? hRatio : vRatio;\n  var offsetX = (thumbAreaRect.width - imageWidth * fillZoomLevel) / 2;\n  var offsetY = (thumbAreaRect.height - imageHeight * fillZoomLevel) / 2;\n  /**\r\n   * Coordinates of the image,\r\n   * as if it was not cropped,\r\n   * height is calculated automatically\r\n   *\r\n   * @type {Bounds}\r\n   */\n\n  var bounds = {\n    x: thumbAreaRect.left + offsetX,\n    y: thumbAreaRect.top + offsetY,\n    w: imageWidth * fillZoomLevel\n  }; // Coordinates of inner crop area\n  // relative to the image\n\n  bounds.innerRect = {\n    w: thumbAreaRect.width,\n    h: thumbAreaRect.height,\n    x: offsetX,\n    y: offsetY\n  };\n  return bounds;\n}\n/**\r\n * Get dimensions of thumbnail image\r\n * (click on which opens photoswipe or closes photoswipe to)\r\n *\r\n * @param {number} index\r\n * @param {SlideData} itemData\r\n * @param {PhotoSwipe} instance PhotoSwipe instance\r\n * @returns {Bounds | undefined}\r\n */\n\n\nfunction _getThumbBounds(index, itemData, instance) {\n  // legacy event, before filters were introduced\n  var event = instance.dispatch('thumbBounds', {\n    index: index,\n    itemData: itemData,\n    instance: instance\n  }); // @ts-expect-error\n\n  if (event.thumbBounds) {\n    // @ts-expect-error\n    return event.thumbBounds;\n  }\n\n  var element = itemData.element;\n  var thumbBounds;\n  /** @type {HTMLElement} */\n\n  var thumbnail;\n\n  if (element && instance.options.thumbSelector !== false) {\n    var thumbSelector = instance.options.thumbSelector || 'img';\n    thumbnail = element.matches(thumbSelector) ? element : element.querySelector(thumbSelector);\n  }\n\n  thumbnail = instance.applyFilters('thumbEl', thumbnail, itemData, index);\n\n  if (thumbnail) {\n    if (!itemData.thumbCropped) {\n      thumbBounds = getBoundsByElement(thumbnail);\n    } else {\n      thumbBounds = getCroppedBoundsByElement(thumbnail, itemData.width || itemData.w, itemData.height || itemData.h);\n    }\n  }\n\n  return instance.applyFilters('thumbBounds', thumbBounds, itemData, index);\n}\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../photoswipe.js').PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import('../photoswipe.js').DataSource} DataSource */\n\n/** @typedef {import('../ui/ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('../slide/content.js').default} ContentDefault */\n\n/** @typedef {import('../slide/slide.js').default} Slide */\n\n/** @typedef {import('../slide/slide.js').SlideData} SlideData */\n\n/** @typedef {import('../slide/zoom-level.js').default} ZoomLevel */\n\n/** @typedef {import('../slide/get-thumb-bounds.js').Bounds} Bounds */\n\n/**\r\n * Allow adding an arbitrary props to the Content\r\n * https://photoswipe.com/custom-content/#using-webp-image-format\r\n * @typedef {ContentDefault & Record<string, any>} Content\r\n */\n\n/** @typedef {{ x?: number; y?: number }} Point */\n\n/**\r\n * @typedef {Object} PhotoSwipeEventsMap https://photoswipe.com/events/\r\n *\r\n *\r\n * https://photoswipe.com/adding-ui-elements/\r\n *\r\n * @prop {undefined} uiRegister\r\n * @prop {{ data: UIElementData }} uiElementCreate\r\n *\r\n *\r\n * https://photoswipe.com/events/#initialization-events\r\n *\r\n * @prop {undefined} beforeOpen\r\n * @prop {undefined} firstUpdate\r\n * @prop {undefined} initialLayout\r\n * @prop {undefined} change\r\n * @prop {undefined} afterInit\r\n * @prop {undefined} bindEvents\r\n *\r\n *\r\n * https://photoswipe.com/events/#opening-or-closing-transition-events\r\n *\r\n * @prop {undefined} openingAnimationStart\r\n * @prop {undefined} openingAnimationEnd\r\n * @prop {undefined} closingAnimationStart\r\n * @prop {undefined} closingAnimationEnd\r\n *\r\n *\r\n * https://photoswipe.com/events/#closing-events\r\n *\r\n * @prop {undefined} close\r\n * @prop {undefined} destroy\r\n *\r\n *\r\n * https://photoswipe.com/events/#pointer-and-gesture-events\r\n *\r\n * @prop {{ originalEvent: PointerEvent }} pointerDown\r\n * @prop {{ originalEvent: PointerEvent }} pointerMove\r\n * @prop {{ originalEvent: PointerEvent }} pointerUp\r\n * @prop {{ bgOpacity: number }} pinchClose can be default prevented\r\n * @prop {{ panY: number }} verticalDrag can be default prevented\r\n *\r\n *\r\n * https://photoswipe.com/events/#slide-content-events\r\n *\r\n * @prop {{ content: Content }} contentInit\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoad can be default prevented\r\n * @prop {{ content: Content; isLazy: boolean }} contentLoadImage can be default prevented\r\n * @prop {{ content: Content; slide: Slide; isError?: boolean }} loadComplete\r\n * @prop {{ content: Content; slide: Slide }} loadError\r\n * @prop {{ content: Content; width: number; height: number }} contentResize can be default prevented\r\n * @prop {{ content: Content; width: number; height: number; slide: Slide }} imageSizeChange\r\n * @prop {{ content: Content }} contentLazyLoad can be default prevented\r\n * @prop {{ content: Content }} contentAppend can be default prevented\r\n * @prop {{ content: Content }} contentActivate can be default prevented\r\n * @prop {{ content: Content }} contentDeactivate can be default prevented\r\n * @prop {{ content: Content }} contentRemove can be default prevented\r\n * @prop {{ content: Content }} contentDestroy can be default prevented\r\n *\r\n *\r\n * undocumented\r\n *\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} imageClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} bgClickAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} tapAction can be default prevented\r\n * @prop {{ point: Point; originalEvent: PointerEvent }} doubleTapAction can be default prevented\r\n *\r\n * @prop {{ originalEvent: KeyboardEvent }} keydown can be default prevented\r\n * @prop {{ x: number; dragging: boolean }} moveMainScroll\r\n * @prop {{ slide: Slide }} firstZoomPan\r\n * @prop {{ slide: Slide, data: SlideData, index: number }} gettingData\r\n * @prop {undefined} beforeResize\r\n * @prop {undefined} resize\r\n * @prop {undefined} viewportSize\r\n * @prop {undefined} updateScrollOffset\r\n * @prop {{ slide: Slide }} slideInit\r\n * @prop {{ slide: Slide }} afterSetContent\r\n * @prop {{ slide: Slide }} slideLoad\r\n * @prop {{ slide: Slide }} appendHeavy can be default prevented\r\n * @prop {{ slide: Slide }} appendHeavyContent\r\n * @prop {{ slide: Slide }} slideActivate\r\n * @prop {{ slide: Slide }} slideDeactivate\r\n * @prop {{ slide: Slide }} slideDestroy\r\n * @prop {{ destZoomLevel: number, centerPoint: Point, transitionDuration: number | false }} beforeZoomTo\r\n * @prop {{ slide: Slide }} zoomPanUpdate\r\n * @prop {{ slide: Slide }} initialZoomPan\r\n * @prop {{ slide: Slide }} calcSlideSize\r\n * @prop {undefined} resolutionChanged\r\n * @prop {{ originalEvent: WheelEvent }} wheel can be default prevented\r\n * @prop {{ content: Content }} contentAppendImage can be default prevented\r\n * @prop {{ index: number; itemData: SlideData }} lazyLoadSlide can be default prevented\r\n * @prop {undefined} lazyLoad\r\n * @prop {{ slide: Slide }} calcBounds\r\n * @prop {{ zoomLevels: ZoomLevel, slideData: SlideData }} zoomLevelsUpdate\r\n *\r\n *\r\n * legacy\r\n *\r\n * @prop {undefined} init\r\n * @prop {undefined} initialZoomIn\r\n * @prop {undefined} initialZoomOut\r\n * @prop {undefined} initialZoomInEnd\r\n * @prop {undefined} initialZoomOutEnd\r\n * @prop {{ dataSource: DataSource, numItems: number }} numItems\r\n * @prop {{ itemData: SlideData; index: number }} itemData\r\n * @prop {{ index: number, itemData: SlideData, instance: PhotoSwipe }} thumbBounds\r\n */\n\n/**\r\n * @typedef {Object} PhotoSwipeFiltersMap https://photoswipe.com/filters/\r\n *\r\n * @prop {(numItems: number, dataSource: DataSource) => number} numItems\r\n * Modify the total amount of slides. Example on Data sources page.\r\n * https://photoswipe.com/filters/#numitems\r\n *\r\n * @prop {(itemData: SlideData, index: number) => SlideData} itemData\r\n * Modify slide item data. Example on Data sources page.\r\n * https://photoswipe.com/filters/#itemdata\r\n *\r\n * @prop {(itemData: SlideData, element: HTMLElement, linkEl: HTMLAnchorElement) => SlideData} domItemData\r\n * Modify item data when it's parsed from DOM element. Example on Data sources page.\r\n * https://photoswipe.com/filters/#domitemdata\r\n *\r\n * @prop {(clickedIndex: number, e: MouseEvent, instance: PhotoSwipeLightbox) => number} clickedIndex\r\n * Modify clicked gallery item index.\r\n * https://photoswipe.com/filters/#clickedindex\r\n *\r\n * @prop {(placeholderSrc: string | false, content: Content) => string | false} placeholderSrc\r\n * Modify placeholder image source.\r\n * https://photoswipe.com/filters/#placeholdersrc\r\n *\r\n * @prop {(isContentLoading: boolean, content: Content) => boolean} isContentLoading\r\n * Modify if the content is currently loading.\r\n * https://photoswipe.com/filters/#iscontentloading\r\n *\r\n * @prop {(isContentZoomable: boolean, content: Content) => boolean} isContentZoomable\r\n * Modify if the content can be zoomed.\r\n * https://photoswipe.com/filters/#iscontentzoomable\r\n *\r\n * @prop {(useContentPlaceholder: boolean, content: Content) => boolean} useContentPlaceholder\r\n * Modify if the placeholder should be used for the content.\r\n * https://photoswipe.com/filters/#usecontentplaceholder\r\n *\r\n * @prop {(isKeepingPlaceholder: boolean, content: Content) => boolean} isKeepingPlaceholder\r\n * Modify if the placeholder should be kept after the content is loaded.\r\n * https://photoswipe.com/filters/#iskeepingplaceholder\r\n *\r\n *\r\n * @prop {(contentErrorElement: HTMLElement, content: Content) => HTMLElement} contentErrorElement\r\n * Modify an element when the content has error state (for example, if image cannot be loaded).\r\n * https://photoswipe.com/filters/#contenterrorelement\r\n *\r\n * @prop {(element: HTMLElement, data: UIElementData) => HTMLElement} uiElement\r\n * Modify a UI element that's being created.\r\n * https://photoswipe.com/filters/#uielement\r\n *\r\n * @prop {(thumbnail: HTMLElement, itemData: SlideData, index: number) => HTMLElement} thumbEl\r\n * Modify the thubmnail element from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbel\r\n *\r\n * @prop {(thumbBounds: Bounds, itemData: SlideData, index: number) => Bounds} thumbBounds\r\n * Modify the thubmnail bounds from which opening zoom animation starts or ends.\r\n * https://photoswipe.com/filters/#thumbbounds\r\n *\r\n * @prop {(srcsetSizesWidth: number, content: Content) => number} srcsetSizesWidth\r\n *\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeFiltersMap} T\r\n * @typedef {{ fn: PhotoSwipeFiltersMap[T], priority: number }} Filter<T>\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {PhotoSwipeEventsMap[T] extends undefined ? PhotoSwipeEvent<T> : PhotoSwipeEvent<T> & PhotoSwipeEventsMap[T]} AugmentedEvent\r\n */\n\n/**\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n * @typedef {(event: AugmentedEvent<T>) => void} EventCallback<T>\r\n */\n\n/**\r\n * Base PhotoSwipe event object\r\n *\r\n * @template {keyof PhotoSwipeEventsMap} T\r\n */\n\n\nvar PhotoSwipeEvent = /*#__PURE__*/function () {\n  /**\r\n   * @param {T} type\r\n   * @param {PhotoSwipeEventsMap[T]} [details]\r\n   */\n  function PhotoSwipeEvent(type, details) {\n    _classCallCheck(this, PhotoSwipeEvent);\n\n    this.type = type;\n\n    if (details) {\n      Object.assign(this, details);\n    }\n  }\n\n  _createClass(PhotoSwipeEvent, [{\n    key: \"preventDefault\",\n    value: function preventDefault() {\n      this.defaultPrevented = true;\n    }\n  }]);\n\n  return PhotoSwipeEvent;\n}();\n/**\r\n * PhotoSwipe base class that can listen and dispatch for events.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox, extended by base.js\r\n */\n\n\nvar Eventable = /*#__PURE__*/function () {\n  function Eventable() {\n    _classCallCheck(this, Eventable);\n\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeEventsMap]?: ((event: AugmentedEvent<T>) => void)[] }}\r\n     */\n    this._listeners = {};\n    /**\r\n     * @type {{ [T in keyof PhotoSwipeFiltersMap]?: Filter<T>[] }}\r\n     */\n\n    this._filters = {};\n    /** @type {PhotoSwipe=} */\n\n    this.pswp = undefined;\n    /** @type {PhotoSwipeOptions} */\n\n    this.options = undefined;\n  }\n  /**\r\n   * @template {keyof PhotoSwipeFiltersMap} T\r\n   * @param {T} name\r\n   * @param {PhotoSwipeFiltersMap[T]} fn\r\n   * @param {number} priority\r\n   */\n\n\n  _createClass(Eventable, [{\n    key: \"addFilter\",\n    value: function addFilter(name, fn) {\n      var priority = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 100;\n\n      if (!this._filters[name]) {\n        this._filters[name] = [];\n      }\n\n      this._filters[name].push({\n        fn: fn,\n        priority: priority\n      });\n\n      this._filters[name].sort(function (f1, f2) {\n        return f1.priority - f2.priority;\n      });\n\n      if (this.pswp) {\n        this.pswp.addFilter(name, fn, priority);\n      }\n    }\n    /**\r\n     * @template {keyof PhotoSwipeFiltersMap} T\r\n     * @param {T} name\r\n     * @param {PhotoSwipeFiltersMap[T]} fn\r\n     */\n\n  }, {\n    key: \"removeFilter\",\n    value: function removeFilter(name, fn) {\n      if (this._filters[name]) {\n        // @ts-expect-error\n        this._filters[name] = this._filters[name].filter(function (filter) {\n          return filter.fn !== fn;\n        });\n      }\n\n      if (this.pswp) {\n        this.pswp.removeFilter(name, fn);\n      }\n    }\n    /**\r\n     * @template {keyof PhotoSwipeFiltersMap} T\r\n     * @param {T} name\r\n     * @param {Parameters<PhotoSwipeFiltersMap[T]>} args\r\n     * @returns {Parameters<PhotoSwipeFiltersMap[T]>[0]}\r\n     */\n\n  }, {\n    key: \"applyFilters\",\n    value: function applyFilters(name) {\n      var _this13 = this;\n\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (this._filters[name]) {\n        this._filters[name].forEach(function (filter) {\n          // @ts-expect-error\n          args[0] = filter.fn.apply(_this13, args);\n        });\n      }\n\n      return args[0];\n    }\n    /**\r\n     * @template {keyof PhotoSwipeEventsMap} T\r\n     * @param {T} name\r\n     * @param {EventCallback<T>} fn\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(name, fn) {\n      if (!this._listeners[name]) {\n        this._listeners[name] = [];\n      }\n\n      this._listeners[name].push(fn); // When binding events to lightbox,\n      // also bind events to PhotoSwipe Core,\n      // if it's open.\n\n\n      if (this.pswp) {\n        this.pswp.on(name, fn);\n      }\n    }\n    /**\r\n     * @template {keyof PhotoSwipeEventsMap} T\r\n     * @param {T} name\r\n     * @param {EventCallback<T>} fn\r\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(name, fn) {\n      if (this._listeners[name]) {\n        // @ts-expect-error\n        this._listeners[name] = this._listeners[name].filter(function (listener) {\n          return fn !== listener;\n        });\n      }\n\n      if (this.pswp) {\n        this.pswp.off(name, fn);\n      }\n    }\n    /**\r\n     * @template {keyof PhotoSwipeEventsMap} T\r\n     * @param {T} name\r\n     * @param {PhotoSwipeEventsMap[T]} [details]\r\n     * @returns {AugmentedEvent<T>}\r\n     */\n\n  }, {\n    key: \"dispatch\",\n    value: function dispatch(name, details) {\n      var _this14 = this;\n\n      if (this.pswp) {\n        return this.pswp.dispatch(name, details);\n      }\n\n      var event =\n      /** @type {AugmentedEvent<T>} */\n      new PhotoSwipeEvent(name, details);\n\n      if (!this._listeners) {\n        return event;\n      }\n\n      if (this._listeners[name]) {\n        this._listeners[name].forEach(function (listener) {\n          listener.call(_this14, event);\n        });\n      }\n\n      return event;\n    }\n  }]);\n\n  return Eventable;\n}();\n\nvar Placeholder = /*#__PURE__*/function () {\n  /**\r\n   * @param {string | false} imageSrc\r\n   * @param {HTMLElement} container\r\n   */\n  function Placeholder(imageSrc, container) {\n    _classCallCheck(this, Placeholder);\n\n    // Create placeholder\n    // (stretched thumbnail or simple div behind the main image)\n    this.element = createElement('pswp__img pswp__img--placeholder', imageSrc ? 'img' : '', container);\n\n    if (imageSrc) {\n      /** @type {HTMLImageElement} */\n      this.element.decoding = 'async';\n      /** @type {HTMLImageElement} */\n\n      this.element.alt = '';\n      /** @type {HTMLImageElement} */\n\n      this.element.src = imageSrc;\n      this.element.setAttribute('role', 'presentation');\n    }\n\n    this.element.setAttribute('aria-hidden', 'true');\n  }\n  /**\r\n   * @param {number} width\r\n   * @param {number} height\r\n   */\n\n\n  _createClass(Placeholder, [{\n    key: \"setDisplayedSize\",\n    value: function setDisplayedSize(width, height) {\n      if (!this.element) {\n        return;\n      }\n\n      if (this.element.tagName === 'IMG') {\n        // Use transform scale() to modify img placeholder size\n        // (instead of changing width/height directly).\n        // This helps with performance, specifically in iOS15 Safari.\n        setWidthHeight(this.element, 250, 'auto');\n        this.element.style.transformOrigin = '0 0';\n        this.element.style.transform = toTransformString(0, 0, width / 250);\n      } else {\n        setWidthHeight(this.element, width, height);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.element.parentNode) {\n        this.element.remove();\n      }\n\n      this.element = null;\n    }\n  }]);\n\n  return Placeholder;\n}();\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../util/util.js').LoadState} LoadState */\n\n\nvar Content = /*#__PURE__*/function () {\n  /**\r\n   * @param {SlideData} itemData Slide data\r\n   * @param {PhotoSwipe} instance PhotoSwipe or PhotoSwipeLightbox instance\r\n   * @param {number} index\r\n   */\n  function Content(itemData, instance, index) {\n    _classCallCheck(this, Content);\n\n    this.instance = instance;\n    this.data = itemData;\n    this.index = index;\n    /** @type {HTMLImageElement | HTMLDivElement} */\n\n    this.element = undefined;\n    this.displayedImageWidth = 0;\n    this.displayedImageHeight = 0;\n    this.width = Number(this.data.w) || Number(this.data.width) || 0;\n    this.height = Number(this.data.h) || Number(this.data.height) || 0;\n    this.isAttached = false;\n    this.hasSlide = false;\n    /** @type {LoadState} */\n\n    this.state = LOAD_STATE.IDLE;\n\n    if (this.data.type) {\n      this.type = this.data.type;\n    } else if (this.data.src) {\n      this.type = 'image';\n    } else {\n      this.type = 'html';\n    }\n\n    this.instance.dispatch('contentInit', {\n      content: this\n    });\n  }\n\n  _createClass(Content, [{\n    key: \"removePlaceholder\",\n    value: function removePlaceholder() {\n      var _this15 = this;\n\n      if (this.placeholder && !this.keepPlaceholder()) {\n        // With delay, as image might be loaded, but not rendered\n        setTimeout(function () {\n          if (_this15.placeholder) {\n            _this15.placeholder.destroy();\n\n            _this15.placeholder = null;\n          }\n        }, 1000);\n      }\n    }\n    /**\r\n     * Preload content\r\n     *\r\n     * @param {boolean=} isLazy\r\n     * @param {boolean=} reload\r\n     */\n\n  }, {\n    key: \"load\",\n    value: function load(isLazy, reload) {\n      if (this.slide && this.usePlaceholder()) {\n        if (!this.placeholder) {\n          var placeholderSrc = this.instance.applyFilters('placeholderSrc', // use  image-based placeholder only for the first slide,\n          // as rendering (even small stretched thumbnail) is an expensive operation\n          this.data.msrc && this.slide.isFirstSlide ? this.data.msrc : false, this);\n          this.placeholder = new Placeholder(placeholderSrc, this.slide.container);\n        } else {\n          var placeholderEl = this.placeholder.element; // Add placeholder to DOM if it was already created\n\n          if (placeholderEl && !placeholderEl.parentElement) {\n            this.slide.container.prepend(placeholderEl);\n          }\n        }\n      }\n\n      if (this.element && !reload) {\n        return;\n      }\n\n      if (this.instance.dispatch('contentLoad', {\n        content: this,\n        isLazy: isLazy\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (this.isImageContent()) {\n        this.element = createElement('pswp__img', 'img'); // Start loading only after width is defined, as sizes might depend on it.\n        // Due to Safari feature, we must define sizes before srcset.\n\n        if (this.displayedImageWidth) {\n          this.loadImage(isLazy);\n        }\n      } else {\n        this.element = createElement('pswp__content');\n        this.element.innerHTML = this.data.html || '';\n      }\n\n      if (reload && this.slide) {\n        this.slide.updateContentSize(true);\n      }\n    }\n    /**\r\n     * Preload image\r\n     *\r\n     * @param {boolean} isLazy\r\n     */\n\n  }, {\n    key: \"loadImage\",\n    value: function loadImage(isLazy) {\n      var _this16 = this;\n\n      var imageElement =\n      /** @type HTMLImageElement */\n      this.element;\n\n      if (this.instance.dispatch('contentLoadImage', {\n        content: this,\n        isLazy: isLazy\n      }).defaultPrevented) {\n        return;\n      }\n\n      this.updateSrcsetSizes();\n\n      if (this.data.srcset) {\n        imageElement.srcset = this.data.srcset;\n      }\n\n      imageElement.src = this.data.src;\n      imageElement.alt = this.data.alt || '';\n      this.state = LOAD_STATE.LOADING;\n\n      if (imageElement.complete) {\n        this.onLoaded();\n      } else {\n        imageElement.onload = function () {\n          _this16.onLoaded();\n        };\n\n        imageElement.onerror = function () {\n          _this16.onError();\n        };\n      }\n    }\n    /**\r\n     * Assign slide to content\r\n     *\r\n     * @param {Slide} slide\r\n     */\n\n  }, {\n    key: \"setSlide\",\n    value: function setSlide(slide) {\n      this.slide = slide;\n      this.hasSlide = true;\n      this.instance = slide.pswp; // todo: do we need to unset slide?\n    }\n    /**\r\n     * Content load success handler\r\n     */\n\n  }, {\n    key: \"onLoaded\",\n    value: function onLoaded() {\n      this.state = LOAD_STATE.LOADED;\n\n      if (this.slide) {\n        this.instance.dispatch('loadComplete', {\n          slide: this.slide,\n          content: this\n        }); // if content is reloaded\n\n        if (this.slide.isActive && this.slide.heavyAppended && !this.element.parentNode) {\n          this.append();\n          this.slide.updateContentSize(true);\n        }\n\n        if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n          this.removePlaceholder();\n        }\n      }\n    }\n    /**\r\n     * Content load error handler\r\n     */\n\n  }, {\n    key: \"onError\",\n    value: function onError() {\n      this.state = LOAD_STATE.ERROR;\n\n      if (this.slide) {\n        this.displayError();\n        this.instance.dispatch('loadComplete', {\n          slide: this.slide,\n          isError: true,\n          content: this\n        });\n        this.instance.dispatch('loadError', {\n          slide: this.slide,\n          content: this\n        });\n      }\n    }\n    /**\r\n     * @returns {Boolean} If the content is currently loading\r\n     */\n\n  }, {\n    key: \"isLoading\",\n    value: function isLoading() {\n      return this.instance.applyFilters('isContentLoading', this.state === LOAD_STATE.LOADING, this);\n    }\n  }, {\n    key: \"isError\",\n    value: function isError() {\n      return this.state === LOAD_STATE.ERROR;\n    }\n    /**\r\n     * @returns {boolean} If the content is image\r\n     */\n\n  }, {\n    key: \"isImageContent\",\n    value: function isImageContent() {\n      return this.type === 'image';\n    }\n    /**\r\n     * Update content size\r\n     *\r\n     * @param {Number} width\r\n     * @param {Number} height\r\n     */\n\n  }, {\n    key: \"setDisplayedSize\",\n    value: function setDisplayedSize(width, height) {\n      if (!this.element) {\n        return;\n      }\n\n      if (this.placeholder) {\n        this.placeholder.setDisplayedSize(width, height);\n      } // eslint-disable-next-line max-len\n\n\n      if (this.instance.dispatch('contentResize', {\n        content: this,\n        width: width,\n        height: height\n      }).defaultPrevented) {\n        return;\n      }\n\n      setWidthHeight(this.element, width, height);\n\n      if (this.isImageContent() && !this.isError()) {\n        var isInitialSizeUpdate = !this.displayedImageWidth && width;\n        this.displayedImageWidth = width;\n        this.displayedImageHeight = height;\n\n        if (isInitialSizeUpdate) {\n          this.loadImage(false);\n        } else {\n          this.updateSrcsetSizes();\n        }\n\n        if (this.slide) {\n          // eslint-disable-next-line max-len\n          this.instance.dispatch('imageSizeChange', {\n            slide: this.slide,\n            width: width,\n            height: height,\n            content: this\n          });\n        }\n      }\n    }\n    /**\r\n     * @returns {boolean} If the content can be zoomed\r\n     */\n\n  }, {\n    key: \"isZoomable\",\n    value: function isZoomable() {\n      return this.instance.applyFilters('isContentZoomable', this.isImageContent() && this.state !== LOAD_STATE.ERROR, this);\n    }\n    /**\r\n     * Update image srcset sizes attribute based on width and height\r\n     */\n\n  }, {\n    key: \"updateSrcsetSizes\",\n    value: function updateSrcsetSizes() {\n      // Handle srcset sizes attribute.\n      //\n      // Never lower quality, if it was increased previously.\n      // Chrome does this automatically, Firefox and Safari do not,\n      // so we store largest used size in dataset.\n      // Handle srcset sizes attribute.\n      //\n      // Never lower quality, if it was increased previously.\n      // Chrome does this automatically, Firefox and Safari do not,\n      // so we store largest used size in dataset.\n      if (this.data.srcset) {\n        var image =\n        /** @type HTMLImageElement */\n        this.element;\n        var sizesWidth = this.instance.applyFilters('srcsetSizesWidth', this.displayedImageWidth, this);\n\n        if (!image.dataset.largestUsedSize || sizesWidth > parseInt(image.dataset.largestUsedSize, 10)) {\n          image.sizes = sizesWidth + 'px';\n          image.dataset.largestUsedSize = String(sizesWidth);\n        }\n      }\n    }\n    /**\r\n     * @returns {boolean} If content should use a placeholder (from msrc by default)\r\n     */\n\n  }, {\n    key: \"usePlaceholder\",\n    value: function usePlaceholder() {\n      return this.instance.applyFilters('useContentPlaceholder', this.isImageContent(), this);\n    }\n    /**\r\n     * Preload content with lazy-loading param\r\n     */\n\n  }, {\n    key: \"lazyLoad\",\n    value: function lazyLoad() {\n      if (this.instance.dispatch('contentLazyLoad', {\n        content: this\n      }).defaultPrevented) {\n        return;\n      }\n\n      this.load(true);\n    }\n    /**\r\n     * @returns {boolean} If placeholder should be kept after content is loaded\r\n     */\n\n  }, {\n    key: \"keepPlaceholder\",\n    value: function keepPlaceholder() {\n      return this.instance.applyFilters('isKeepingPlaceholder', this.isLoading(), this);\n    }\n    /**\r\n     * Destroy the content\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.hasSlide = false;\n      this.slide = null;\n\n      if (this.instance.dispatch('contentDestroy', {\n        content: this\n      }).defaultPrevented) {\n        return;\n      }\n\n      this.remove();\n\n      if (this.placeholder) {\n        this.placeholder.destroy();\n        this.placeholder = null;\n      }\n\n      if (this.isImageContent() && this.element) {\n        this.element.onload = null;\n        this.element.onerror = null;\n        this.element = null;\n      }\n    }\n    /**\r\n     * Display error message\r\n     */\n\n  }, {\n    key: \"displayError\",\n    value: function displayError() {\n      if (this.slide) {\n        /** @type {HTMLElement} */\n        var errorMsgEl = createElement('pswp__error-msg');\n        errorMsgEl.innerText = this.instance.options.errorMsg;\n        errorMsgEl = this.instance.applyFilters('contentErrorElement', errorMsgEl, this);\n        this.element = createElement('pswp__content pswp__error-msg-container');\n        this.element.appendChild(errorMsgEl);\n        this.slide.container.innerText = '';\n        this.slide.container.appendChild(this.element);\n        this.slide.updateContentSize(true);\n        this.removePlaceholder();\n      }\n    }\n    /**\r\n     * Append the content\r\n     */\n\n  }, {\n    key: \"append\",\n    value: function append() {\n      var _this17 = this;\n\n      if (this.isAttached) {\n        return;\n      }\n\n      this.isAttached = true;\n\n      if (this.state === LOAD_STATE.ERROR) {\n        this.displayError();\n        return;\n      }\n\n      if (this.instance.dispatch('contentAppend', {\n        content: this\n      }).defaultPrevented) {\n        return;\n      }\n\n      var supportsDecode = ('decode' in this.element);\n\n      if (this.isImageContent()) {\n        // Use decode() on nearby slides\n        //\n        // Nearby slide images are in DOM and not hidden via display:none.\n        // However, they are placed offscreen (to the left and right side).\n        //\n        // Some browsers do not composite the image until it's actually visible,\n        // using decode() helps.\n        //\n        // You might ask \"why dont you just decode() and then append all images\",\n        // that's because I want to show image before it's fully loaded,\n        // as browser can render parts of image while it is loading.\n        // We do not do this in Safari due to partial loading bug.\n        if (supportsDecode && this.slide && (!this.slide.isActive || isSafari())) {\n          this.isDecoding = true; // purposefully using finally instead of then,\n          // as if srcset sizes changes dynamically - it may cause decode error\n\n          /** @type {HTMLImageElement} */\n\n          this.element.decode().catch(function () {}).finally(function () {\n            _this17.isDecoding = false;\n\n            _this17.appendImage();\n          });\n        } else {\n          this.appendImage();\n        }\n      } else if (this.element && !this.element.parentNode) {\n        this.slide.container.appendChild(this.element);\n      }\n    }\n    /**\r\n     * Activate the slide,\r\n     * active slide is generally the current one,\r\n     * meaning the user can see it.\r\n     */\n\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      if (this.instance.dispatch('contentActivate', {\n        content: this\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (this.slide) {\n        if (this.isImageContent() && this.isDecoding && !isSafari()) {\n          // add image to slide when it becomes active,\n          // even if it's not finished decoding\n          this.appendImage();\n        } else if (this.isError()) {\n          this.load(false, true); // try to reload\n        }\n\n        if (this.slide.holderElement) {\n          this.slide.holderElement.setAttribute('aria-hidden', 'false');\n        }\n      }\n    }\n    /**\r\n     * Deactivate the content\r\n     */\n\n  }, {\n    key: \"deactivate\",\n    value: function deactivate() {\n      this.instance.dispatch('contentDeactivate', {\n        content: this\n      });\n\n      if (this.slide && this.slide.holderElement) {\n        this.slide.holderElement.setAttribute('aria-hidden', 'true');\n      }\n    }\n    /**\r\n     * Remove the content from DOM\r\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      this.isAttached = false;\n\n      if (this.instance.dispatch('contentRemove', {\n        content: this\n      }).defaultPrevented) {\n        return;\n      }\n\n      if (this.element && this.element.parentNode) {\n        this.element.remove();\n      }\n\n      if (this.placeholder && this.placeholder.element) {\n        this.placeholder.element.remove();\n      }\n    }\n    /**\r\n     * Append the image content to slide container\r\n     */\n\n  }, {\n    key: \"appendImage\",\n    value: function appendImage() {\n      if (!this.isAttached) {\n        return;\n      }\n\n      if (this.instance.dispatch('contentAppendImage', {\n        content: this\n      }).defaultPrevented) {\n        return;\n      } // ensure that element exists and is not already appended\n\n\n      if (this.slide && this.element && !this.element.parentNode) {\n        this.slide.container.appendChild(this.element);\n      }\n\n      if (this.state === LOAD_STATE.LOADED || this.state === LOAD_STATE.ERROR) {\n        this.removePlaceholder();\n      }\n    }\n  }]);\n\n  return Content;\n}();\n/** @typedef {import('./content.js').default} Content */\n\n/** @typedef {import('./slide.js').default} Slide */\n\n/** @typedef {import('./slide.js').SlideData} SlideData */\n\n/** @typedef {import('../core/base.js').default} PhotoSwipeBase */\n\n/** @typedef {import('../photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('../lightbox/lightbox.js').default} PhotoSwipeLightbox */\n\n\nvar MIN_SLIDES_TO_CACHE = 5;\n/**\r\n * Lazy-load an image\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * @param {SlideData} itemData Data about the slide\r\n * @param {PhotoSwipe | PhotoSwipeLightbox | PhotoSwipeBase} instance PhotoSwipe instance\r\n * @param {number} index\r\n * @returns Image that is being decoded or false.\r\n */\n\nfunction _lazyLoadData(itemData, instance, index) {\n  // src/slide/content/content.js\n  var content = instance.createContentFromData(itemData, index);\n\n  if (!content || !content.lazyLoad) {\n    return;\n  }\n\n  var options = instance.options; // We need to know dimensions of the image to preload it,\n  // as it might use srcset and we need to define sizes\n  // @ts-expect-error should provide pswp instance?\n\n  var viewportSize = instance.viewportSize || getViewportSize(options, instance);\n  var panAreaSize = getPanAreaSize(options, viewportSize, itemData, index);\n  var zoomLevel = new ZoomLevel(options, itemData, -1);\n  zoomLevel.update(content.width, content.height, panAreaSize);\n  content.lazyLoad();\n  content.setDisplayedSize(Math.ceil(content.width * zoomLevel.initial), Math.ceil(content.height * zoomLevel.initial));\n  return content;\n}\n/**\r\n * Lazy-loads specific slide.\r\n * This function is used both by Lightbox and PhotoSwipe core,\r\n * thus it can be called before dialog is opened.\r\n *\r\n * By default it loads image based on viewport size and initial zoom level.\r\n *\r\n * @param {number} index Slide index\r\n * @param {PhotoSwipe | PhotoSwipeLightbox} instance PhotoSwipe or PhotoSwipeLightbox eventable instance\r\n */\n\n\nfunction lazyLoadSlide(index, instance) {\n  var itemData = instance.getItemData(index);\n\n  if (instance.dispatch('lazyLoadSlide', {\n    index: index,\n    itemData: itemData\n  }).defaultPrevented) {\n    return;\n  }\n\n  return _lazyLoadData(itemData, instance, index);\n}\n\nvar ContentLoader = /*#__PURE__*/function () {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  function ContentLoader(pswp) {\n    _classCallCheck(this, ContentLoader);\n\n    this.pswp = pswp; // Total amount of cached images\n\n    this.limit = Math.max(pswp.options.preload[0] + pswp.options.preload[1] + 1, MIN_SLIDES_TO_CACHE);\n    /** @type {Content[]} */\n\n    this._cachedItems = [];\n  }\n  /**\r\n   * Lazy load nearby slides based on `preload` option.\r\n   *\r\n   * @param {number=} diff Difference between slide indexes that was changed recently, or 0.\r\n   */\n\n\n  _createClass(ContentLoader, [{\n    key: \"updateLazy\",\n    value: function updateLazy(diff) {\n      var pswp = this.pswp;\n\n      if (pswp.dispatch('lazyLoad').defaultPrevented) {\n        return;\n      }\n\n      var preload = pswp.options.preload;\n      var isForward = diff === undefined ? true : diff >= 0;\n      var i; // preload[1] - num items to preload in forward direction\n\n      for (i = 0; i <= preload[1]; i++) {\n        this.loadSlideByIndex(pswp.currIndex + (isForward ? i : -i));\n      } // preload[0] - num items to preload in backward direction\n\n\n      for (i = 1; i <= preload[0]; i++) {\n        this.loadSlideByIndex(pswp.currIndex + (isForward ? -i : i));\n      }\n    }\n    /**\r\n     * @param {number} index\r\n     */\n\n  }, {\n    key: \"loadSlideByIndex\",\n    value: function loadSlideByIndex(index) {\n      index = this.pswp.getLoopedIndex(index); // try to get cached content\n\n      var content = this.getContentByIndex(index);\n\n      if (!content) {\n        // no cached content, so try to load from scratch:\n        content = lazyLoadSlide(index, this.pswp); // if content can be loaded, add it to cache:\n\n        if (content) {\n          this.addToCache(content);\n        }\n      }\n    }\n    /**\r\n     * @param {Slide} slide\r\n     */\n\n  }, {\n    key: \"getContentBySlide\",\n    value: function getContentBySlide(slide) {\n      var content = this.getContentByIndex(slide.index);\n\n      if (!content) {\n        // create content if not found in cache\n        content = this.pswp.createContentFromData(slide.data, slide.index);\n\n        if (content) {\n          this.addToCache(content);\n        }\n      }\n\n      if (content) {\n        // assign slide to content\n        content.setSlide(slide);\n      }\n\n      return content;\n    }\n    /**\r\n     * @param {Content} content\r\n     */\n\n  }, {\n    key: \"addToCache\",\n    value: function addToCache(content) {\n      // move to the end of array\n      this.removeByIndex(content.index);\n\n      this._cachedItems.push(content);\n\n      if (this._cachedItems.length > this.limit) {\n        // Destroy the first content that's not attached\n        var indexToRemove = this._cachedItems.findIndex(function (item) {\n          return !item.isAttached && !item.hasSlide;\n        });\n\n        if (indexToRemove !== -1) {\n          var removedItem = this._cachedItems.splice(indexToRemove, 1)[0];\n\n          removedItem.destroy();\n        }\n      }\n    }\n    /**\r\n     * Removes an image from cache, does not destroy() it, just removes.\r\n     *\r\n     * @param {number} index\r\n     */\n\n  }, {\n    key: \"removeByIndex\",\n    value: function removeByIndex(index) {\n      var indexToRemove = this._cachedItems.findIndex(function (item) {\n        return item.index === index;\n      });\n\n      if (indexToRemove !== -1) {\n        this._cachedItems.splice(indexToRemove, 1);\n      }\n    }\n    /**\r\n     * @param {number} index\r\n     */\n\n  }, {\n    key: \"getContentByIndex\",\n    value: function getContentByIndex(index) {\n      return this._cachedItems.find(function (content) {\n        return content.index === index;\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._cachedItems.forEach(function (content) {\n        return content.destroy();\n      });\n\n      this._cachedItems = null;\n    }\n  }]);\n\n  return ContentLoader;\n}();\n/** @typedef {import(\"../photoswipe.js\").default} PhotoSwipe */\n\n/** @typedef {import(\"../photoswipe.js\").PhotoSwipeOptions} PhotoSwipeOptions */\n\n/** @typedef {import(\"../slide/slide.js\").SlideData} SlideData */\n\n/**\r\n * PhotoSwipe base class that can retrieve data about every slide.\r\n * Shared by PhotoSwipe Core and PhotoSwipe Lightbox\r\n */\n\n\nvar PhotoSwipeBase = /*#__PURE__*/function (_Eventable) {\n  _inherits(PhotoSwipeBase, _Eventable);\n\n  var _super = _createSuper(PhotoSwipeBase);\n\n  function PhotoSwipeBase() {\n    _classCallCheck(this, PhotoSwipeBase);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PhotoSwipeBase, [{\n    key: \"getNumItems\",\n    value:\n    /**\r\n     * Get total number of slides\r\n     *\r\n     * @returns {number}\r\n     */\n    function getNumItems() {\n      var numItems;\n      var dataSource = this.options.dataSource;\n\n      if (!dataSource) {\n        numItems = 0;\n      } else if ('length' in dataSource) {\n        // may be an array or just object with length property\n        numItems = dataSource.length;\n      } else if ('gallery' in dataSource) {\n        // query DOM elements\n        if (!dataSource.items) {\n          dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n        }\n\n        if (dataSource.items) {\n          numItems = dataSource.items.length;\n        }\n      } // legacy event, before filters were introduced\n\n\n      var event = this.dispatch('numItems', {\n        dataSource: dataSource,\n        numItems: numItems\n      });\n      return this.applyFilters('numItems', event.numItems, dataSource);\n    }\n    /**\r\n     * @param {SlideData} slideData\r\n     * @param {number} index\r\n     */\n\n  }, {\n    key: \"createContentFromData\",\n    value: function createContentFromData(slideData, index) {\n      // @ts-expect-error\n      return new Content(slideData, this, index);\n    }\n    /**\r\n     * Get item data by index.\r\n     *\r\n     * \"item data\" should contain normalized information that PhotoSwipe needs to generate a slide.\r\n     * For example, it may contain properties like\r\n     * `src`, `srcset`, `w`, `h`, which will be used to generate a slide with image.\r\n     *\r\n     * @param {number} index\r\n     */\n\n  }, {\n    key: \"getItemData\",\n    value: function getItemData(index) {\n      var dataSource = this.options.dataSource;\n      var dataSourceItem;\n\n      if (Array.isArray(dataSource)) {\n        // Datasource is an array of elements\n        dataSourceItem = dataSource[index];\n      } else if (dataSource && dataSource.gallery) {\n        // dataSource has gallery property,\n        // thus it was created by Lightbox, based on\n        // gallery and children options\n        // query DOM elements\n        if (!dataSource.items) {\n          dataSource.items = this._getGalleryDOMElements(dataSource.gallery);\n        }\n\n        dataSourceItem = dataSource.items[index];\n      }\n\n      var itemData = dataSourceItem;\n\n      if (itemData instanceof Element) {\n        itemData = this._domElementToItemData(itemData);\n      } // Dispatching the itemData event,\n      // it's a legacy verion before filters were introduced\n\n\n      var event = this.dispatch('itemData', {\n        itemData: itemData || {},\n        index: index\n      });\n      return this.applyFilters('itemData', event.itemData, index);\n    }\n    /**\r\n     * Get array of gallery DOM elements,\r\n     * based on childSelector and gallery element.\r\n     *\r\n     * @param {HTMLElement} galleryElement\r\n     */\n\n  }, {\n    key: \"_getGalleryDOMElements\",\n    value: function _getGalleryDOMElements(galleryElement) {\n      if (this.options.children || this.options.childSelector) {\n        return getElementsFromOption(this.options.children, this.options.childSelector, galleryElement) || [];\n      }\n\n      return [galleryElement];\n    }\n    /**\r\n     * Converts DOM element to item data object.\r\n     *\r\n     * @param {HTMLElement} element DOM element\r\n     */\n    // eslint-disable-next-line class-methods-use-this\n\n  }, {\n    key: \"_domElementToItemData\",\n    value: function _domElementToItemData(element) {\n      /** @type {SlideData} */\n      var itemData = {\n        element: element\n      }; // eslint-disable-next-line max-len\n\n      var linkEl =\n      /** @type {HTMLAnchorElement} */\n      element.tagName === 'A' ? element : element.querySelector('a');\n\n      if (linkEl) {\n        // src comes from data-pswp-src attribute,\n        // if it's empty link href is used\n        itemData.src = linkEl.dataset.pswpSrc || linkEl.href;\n\n        if (linkEl.dataset.pswpSrcset) {\n          itemData.srcset = linkEl.dataset.pswpSrcset;\n        }\n\n        itemData.width = parseInt(linkEl.dataset.pswpWidth, 10);\n        itemData.height = parseInt(linkEl.dataset.pswpHeight, 10); // support legacy w & h properties\n\n        itemData.w = itemData.width;\n        itemData.h = itemData.height;\n\n        if (linkEl.dataset.pswpType) {\n          itemData.type = linkEl.dataset.pswpType;\n        }\n\n        var thumbnailEl = element.querySelector('img');\n\n        if (thumbnailEl) {\n          // msrc is URL to placeholder image that's displayed before large image is loaded\n          // by default it's displayed only for the first slide\n          itemData.msrc = thumbnailEl.currentSrc || thumbnailEl.src;\n          itemData.alt = thumbnailEl.getAttribute('alt');\n        }\n\n        if (linkEl.dataset.pswpCropped || linkEl.dataset.cropped) {\n          itemData.thumbCropped = true;\n        }\n      }\n\n      return this.applyFilters('domItemData', itemData, element, linkEl);\n    }\n    /**\r\n     * Lazy-load by slide data\r\n     *\r\n     * @param {SlideData} itemData Data about the slide\r\n     * @param {number} index\r\n     * @returns Image that is being decoded or false.\r\n     */\n\n  }, {\n    key: \"lazyLoadData\",\n    value: function lazyLoadData(itemData, index) {\n      return _lazyLoadData(itemData, this, index);\n    }\n  }]);\n\n  return PhotoSwipeBase;\n}(Eventable);\n/** @typedef {import('./photoswipe.js').default} PhotoSwipe */\n\n/** @typedef {import('./slide/get-thumb-bounds.js').Bounds} Bounds */\n\n/** @typedef {import('./util/animations.js').AnimationProps} AnimationProps */\n// some browsers do not paint\n// elements which opacity is set to 0,\n// since we need to pre-render elements for the animation -\n// we set it to the minimum amount\n\n\nvar MIN_OPACITY = 0.003;\n/**\r\n * Manages opening and closing transitions of the PhotoSwipe.\r\n *\r\n * It can perform zoom, fade or no transition.\r\n */\n\nvar Opener = /*#__PURE__*/function () {\n  /**\r\n   * @param {PhotoSwipe} pswp\r\n   */\n  function Opener(pswp) {\n    _classCallCheck(this, Opener);\n\n    this.pswp = pswp;\n    this.isClosed = true;\n    this._prepareOpen = this._prepareOpen.bind(this);\n    /** @type {false | Bounds} */\n\n    this._thumbBounds = undefined; // Override initial zoom and pan position\n\n    pswp.on('firstZoomPan', this._prepareOpen);\n  }\n\n  _createClass(Opener, [{\n    key: \"open\",\n    value: function open() {\n      this._prepareOpen();\n\n      this._start();\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      var _this18 = this;\n\n      if (this.isClosed || this.isClosing || this.isOpening) {\n        // if we close during opening animation\n        // for now do nothing,\n        // browsers aren't good at changing the direction of the CSS transition\n        return false;\n      }\n\n      var slide = this.pswp.currSlide;\n      this.isOpen = false;\n      this.isOpening = false;\n      this.isClosing = true;\n      this._duration = this.pswp.options.hideAnimationDuration;\n\n      if (slide && slide.currZoomLevel * slide.width >= this.pswp.options.maxWidthToAnimate) {\n        this._duration = 0;\n      }\n\n      this._applyStartProps();\n\n      setTimeout(function () {\n        _this18._start();\n      }, this._croppedZoom ? 30 : 0);\n      return true;\n    }\n  }, {\n    key: \"_prepareOpen\",\n    value: function _prepareOpen() {\n      this.pswp.off('firstZoomPan', this._prepareOpen);\n\n      if (!this.isOpening) {\n        var slide = this.pswp.currSlide;\n        this.isOpening = true;\n        this.isClosing = false;\n        this._duration = this.pswp.options.showAnimationDuration;\n\n        if (slide && slide.zoomLevels.initial * slide.width >= this.pswp.options.maxWidthToAnimate) {\n          this._duration = 0;\n        }\n\n        this._applyStartProps();\n      }\n    }\n  }, {\n    key: \"_applyStartProps\",\n    value: function _applyStartProps() {\n      var pswp = this.pswp;\n      var slide = this.pswp.currSlide;\n      var options = pswp.options;\n\n      if (options.showHideAnimationType === 'fade') {\n        options.showHideOpacity = true;\n        this._thumbBounds = false;\n      } else if (options.showHideAnimationType === 'none') {\n        options.showHideOpacity = false;\n        this._duration = 0;\n        this._thumbBounds = false;\n      } else if (this.isOpening && pswp._initialThumbBounds) {\n        // Use initial bounds if defined\n        this._thumbBounds = pswp._initialThumbBounds;\n      } else {\n        this._thumbBounds = this.pswp.getThumbBounds();\n      }\n\n      this._placeholder = slide.getPlaceholderElement();\n      pswp.animations.stopAll(); // Discard animations when duration is less than 50ms\n\n      this._useAnimation = this._duration > 50;\n      this._animateZoom = Boolean(this._thumbBounds) && slide.content && slide.content.usePlaceholder() && (!this.isClosing || !pswp.mainScroll.isShifted());\n\n      if (!this._animateZoom) {\n        this._animateRootOpacity = true;\n\n        if (this.isOpening) {\n          slide.zoomAndPanToInitial();\n          slide.applyCurrentZoomPan();\n        }\n      } else {\n        this._animateRootOpacity = options.showHideOpacity;\n      }\n\n      this._animateBgOpacity = !this._animateRootOpacity && this.pswp.options.bgOpacity > MIN_OPACITY;\n      this._opacityElement = this._animateRootOpacity ? pswp.element : pswp.bg;\n\n      if (!this._useAnimation) {\n        this._duration = 0;\n        this._animateZoom = false;\n        this._animateBgOpacity = false;\n        this._animateRootOpacity = true;\n\n        if (this.isOpening) {\n          pswp.element.style.opacity = String(MIN_OPACITY);\n          pswp.applyBgOpacity(1);\n        }\n\n        return;\n      }\n\n      if (this._animateZoom && this._thumbBounds && this._thumbBounds.innerRect) {\n        // Properties are used when animation from cropped thumbnail\n        this._croppedZoom = true;\n        this._cropContainer1 = this.pswp.container;\n        this._cropContainer2 = this.pswp.currSlide.holderElement;\n        pswp.container.style.overflow = 'hidden';\n        pswp.container.style.width = pswp.viewportSize.x + 'px';\n      } else {\n        this._croppedZoom = false;\n      }\n\n      if (this.isOpening) {\n        // Apply styles before opening transition\n        if (this._animateRootOpacity) {\n          pswp.element.style.opacity = String(MIN_OPACITY);\n          pswp.applyBgOpacity(1);\n        } else {\n          if (this._animateBgOpacity) {\n            pswp.bg.style.opacity = String(MIN_OPACITY);\n          }\n\n          pswp.element.style.opacity = '1';\n        }\n\n        if (this._animateZoom) {\n          this._setClosedStateZoomPan();\n\n          if (this._placeholder) {\n            // tell browser that we plan to animate the placeholder\n            this._placeholder.style.willChange = 'transform'; // hide placeholder to allow hiding of\n            // elements that overlap it (such as icons over the thumbnail)\n\n            this._placeholder.style.opacity = String(MIN_OPACITY);\n          }\n        }\n      } else if (this.isClosing) {\n        // hide nearby slides to make sure that\n        // they are not painted during the transition\n        pswp.mainScroll.itemHolders[0].el.style.display = 'none';\n        pswp.mainScroll.itemHolders[2].el.style.display = 'none';\n\n        if (this._croppedZoom) {\n          if (pswp.mainScroll.x !== 0) {\n            // shift the main scroller to zero position\n            pswp.mainScroll.resetPosition();\n            pswp.mainScroll.resize();\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_start\",\n    value: function _start() {\n      var _this19 = this;\n\n      if (this.isOpening && this._useAnimation && this._placeholder && this._placeholder.tagName === 'IMG') {\n        // To ensure smooth animation\n        // we wait till the current slide image placeholder is decoded,\n        // but no longer than 250ms,\n        // and no shorter than 50ms\n        // (just using requestanimationframe is not enough in Firefox,\n        // for some reason)\n        new Promise(function (resolve) {\n          var decoded = false;\n          var isDelaying = true;\n          decodeImage(\n          /** @type {HTMLImageElement} */\n          _this19._placeholder).finally(function () {\n            decoded = true;\n\n            if (!isDelaying) {\n              resolve();\n            }\n          });\n          setTimeout(function () {\n            isDelaying = false;\n\n            if (decoded) {\n              resolve();\n            }\n          }, 50);\n          setTimeout(resolve, 250);\n        }).finally(function () {\n          return _this19._initiate();\n        });\n      } else {\n        this._initiate();\n      }\n    }\n  }, {\n    key: \"_initiate\",\n    value: function _initiate() {\n      this.pswp.element.style.setProperty('--pswp-transition-duration', this._duration + 'ms');\n      this.pswp.dispatch(this.isOpening ? 'openingAnimationStart' : 'closingAnimationStart'); // legacy event\n\n      this.pswp.dispatch(\n      /** @type {'initialZoomIn' | 'initialZoomOut'} */\n      'initialZoom' + (this.isOpening ? 'In' : 'Out'));\n      this.pswp.element.classList[this.isOpening ? 'add' : 'remove']('pswp--ui-visible');\n\n      if (this.isOpening) {\n        if (this._placeholder) {\n          // unhide the placeholder\n          this._placeholder.style.opacity = '1';\n        }\n\n        this._animateToOpenState();\n      } else if (this.isClosing) {\n        this._animateToClosedState();\n      }\n\n      if (!this._useAnimation) {\n        this._onAnimationComplete();\n      }\n    }\n  }, {\n    key: \"_onAnimationComplete\",\n    value: function _onAnimationComplete() {\n      var pswp = this.pswp;\n      this.isOpen = this.isOpening;\n      this.isClosed = this.isClosing;\n      this.isOpening = false;\n      this.isClosing = false;\n      pswp.dispatch(this.isOpen ? 'openingAnimationEnd' : 'closingAnimationEnd'); // legacy event\n\n      pswp.dispatch(\n      /** @type {'initialZoomInEnd' | 'initialZoomOutEnd'} */\n      'initialZoom' + (this.isOpen ? 'InEnd' : 'OutEnd'));\n\n      if (this.isClosed) {\n        pswp.destroy();\n      } else if (this.isOpen) {\n        if (this._animateZoom) {\n          pswp.container.style.overflow = 'visible';\n          pswp.container.style.width = '100%';\n        }\n\n        pswp.currSlide.applyCurrentZoomPan();\n      }\n    }\n  }, {\n    key: \"_animateToOpenState\",\n    value: function _animateToOpenState() {\n      var pswp = this.pswp;\n\n      if (this._animateZoom) {\n        if (this._croppedZoom) {\n          this._animateTo(this._cropContainer1, 'transform', 'translate3d(0,0,0)');\n\n          this._animateTo(this._cropContainer2, 'transform', 'none');\n        }\n\n        pswp.currSlide.zoomAndPanToInitial();\n\n        this._animateTo(pswp.currSlide.container, 'transform', pswp.currSlide.getCurrentTransform());\n      }\n\n      if (this._animateBgOpacity) {\n        this._animateTo(pswp.bg, 'opacity', String(pswp.options.bgOpacity));\n      }\n\n      if (this._animateRootOpacity) {\n        this._animateTo(pswp.element, 'opacity', '1');\n      }\n    }\n  }, {\n    key: \"_animateToClosedState\",\n    value: function _animateToClosedState() {\n      var pswp = this.pswp;\n\n      if (this._animateZoom) {\n        this._setClosedStateZoomPan(true);\n      }\n\n      if (this._animateBgOpacity && pswp.bgOpacity > 0.01) {\n        // do not animate opacity if it's already at 0\n        this._animateTo(pswp.bg, 'opacity', '0');\n      }\n\n      if (this._animateRootOpacity) {\n        this._animateTo(pswp.element, 'opacity', '0');\n      }\n    }\n    /**\r\n     * @param {boolean=} animate\r\n     */\n\n  }, {\n    key: \"_setClosedStateZoomPan\",\n    value: function _setClosedStateZoomPan(animate) {\n      if (!this._thumbBounds) return;\n      var pswp = this.pswp;\n      var innerRect = this._thumbBounds.innerRect;\n      var currSlide = pswp.currSlide,\n          viewportSize = pswp.viewportSize;\n\n      if (this._croppedZoom) {\n        var containerOnePanX = -viewportSize.x + (this._thumbBounds.x - innerRect.x) + innerRect.w;\n        var containerOnePanY = -viewportSize.y + (this._thumbBounds.y - innerRect.y) + innerRect.h;\n        var containerTwoPanX = viewportSize.x - innerRect.w;\n        var containerTwoPanY = viewportSize.y - innerRect.h;\n\n        if (animate) {\n          this._animateTo(this._cropContainer1, 'transform', toTransformString(containerOnePanX, containerOnePanY));\n\n          this._animateTo(this._cropContainer2, 'transform', toTransformString(containerTwoPanX, containerTwoPanY));\n        } else {\n          setTransform(this._cropContainer1, containerOnePanX, containerOnePanY);\n          setTransform(this._cropContainer2, containerTwoPanX, containerTwoPanY);\n        }\n      }\n\n      equalizePoints(currSlide.pan, innerRect || this._thumbBounds);\n      currSlide.currZoomLevel = this._thumbBounds.w / currSlide.width;\n\n      if (animate) {\n        this._animateTo(currSlide.container, 'transform', currSlide.getCurrentTransform());\n      } else {\n        currSlide.applyCurrentZoomPan();\n      }\n    }\n    /**\r\n     * @param {HTMLElement} target\r\n     * @param {'transform' | 'opacity'} prop\r\n     * @param {string} propValue\r\n     */\n\n  }, {\n    key: \"_animateTo\",\n    value: function _animateTo(target, prop, propValue) {\n      var _this20 = this;\n\n      if (!this._duration) {\n        target.style[prop] = propValue;\n        return;\n      }\n\n      var animations = this.pswp.animations;\n      /** @type {AnimationProps} */\n\n      var animProps = {\n        duration: this._duration,\n        easing: this.pswp.options.easing,\n        onComplete: function onComplete() {\n          if (!animations.activeAnimations.length) {\n            _this20._onAnimationComplete();\n          }\n        },\n        target: target\n      };\n      animProps[prop] = propValue;\n      animations.startTransition(animProps);\n    }\n  }]);\n\n  return Opener;\n}();\n/**\r\n * @template T\r\n * @typedef {import('./types.js').Type<T>} Type<T>\r\n */\n\n/** @typedef {import('./slide/slide.js').SlideData} SlideData */\n\n/** @typedef {import('./slide/zoom-level.js').ZoomLevelOption} ZoomLevelOption */\n\n/** @typedef {import('./ui/ui-element.js').UIElementData} UIElementData */\n\n/** @typedef {import('./main-scroll.js').ItemHolder} ItemHolder */\n\n/** @typedef {import('./core/eventable.js').PhotoSwipeEventsMap} PhotoSwipeEventsMap */\n\n/** @typedef {import('./core/eventable.js').PhotoSwipeFiltersMap} PhotoSwipeFiltersMap */\n\n/**\r\n * @template T\r\n * @typedef {import('./core/eventable.js').EventCallback<T>} EventCallback<T>\r\n */\n\n/**\r\n * @template T\r\n * @typedef {import('./core/eventable.js').AugmentedEvent<T>} AugmentedEvent<T>\r\n */\n\n/** @typedef {{ x?: number; y?: number; id?: string | number }} Point */\n\n/** @typedef {{ x?: number; y?: number }} Size */\n\n/** @typedef {{ top: number; bottom: number; left: number; right: number }} Padding */\n\n/** @typedef {SlideData[]} DataSourceArray */\n\n/** @typedef {{ gallery: HTMLElement; items?: HTMLElement[] }} DataSourceObject */\n\n/** @typedef {DataSourceArray | DataSourceObject} DataSource */\n\n/** @typedef {(point: Point, originalEvent: PointerEvent) => void} ActionFn */\n\n/** @typedef {'close' | 'next' | 'zoom' | 'zoom-or-close' | 'toggle-controls'} ActionType */\n\n/** @typedef {Type<PhotoSwipe> | { default: Type<PhotoSwipe> }} PhotoSwipeModule */\n\n/** @typedef {PhotoSwipeModule | Promise<PhotoSwipeModule> | (() => Promise<PhotoSwipeModule>)} PhotoSwipeModuleOption */\n\n/**\r\n * @typedef {string | NodeListOf<HTMLElement> | HTMLElement[] | HTMLElement} ElementProvider\r\n */\n\n/**\r\n * @typedef {Object} PhotoSwipeOptions https://photoswipe.com/options/\r\n *\r\n * @prop {DataSource=} dataSource\r\n * Pass an array of any items via dataSource option. Its length will determine amount of slides\r\n * (which may be modified further from numItems event).\r\n *\r\n * Each item should contain data that you need to generate slide\r\n * (for image slide it would be src (image URL), width (image width), height, srcset, alt).\r\n *\r\n * If these properties are not present in your initial array, you may \"pre-parse\" each item from itemData filter.\r\n *\r\n * @prop {number=} bgOpacity\r\n * Background backdrop opacity, always define it via this option and not via CSS rgba color.\r\n *\r\n * @prop {number=} spacing\r\n * Spacing between slides. Defined as ratio relative to the viewport width (0.1 = 10% of viewport).\r\n *\r\n * @prop {boolean=} allowPanToNext\r\n * Allow swipe navigation to the next slide when the current slide is zoomed. Does not apply to mouse events.\r\n *\r\n * @prop {boolean=} loop\r\n * If set to true you'll be able to swipe from the last to the first image.\r\n * Option is always false when there are less than 3 slides.\r\n *\r\n * @prop {boolean=} wheelToZoom\r\n * By default PhotoSwipe zooms image with ctrl-wheel, if you enable this option - image will zoom just via wheel.\r\n *\r\n * @prop {boolean=} pinchToClose\r\n * Pinch touch gesture to close the gallery.\r\n *\r\n * @prop {boolean=} closeOnVerticalDrag\r\n * Vertical drag gesture to close the PhotoSwipe.\r\n *\r\n * @prop {Padding=} padding\r\n * Slide area padding (in pixels).\r\n *\r\n * @prop {(viewportSize: Size, itemData: SlideData, index: number) => Padding} [paddingFn]\r\n * The option is checked frequently, so make sure it's performant. Overrides padding option if defined. For example:\r\n *\r\n * @prop {number | false} [hideAnimationDuration]\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} [showAnimationDuration]\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {number | false} [zoomAnimationDuration]\r\n * Transition duration in milliseconds, can be 0.\r\n *\r\n * @prop {string=} easing\r\n * String, 'cubic-bezier(.4,0,.22,1)'. CSS easing function for open/close/zoom transitions.\r\n *\r\n * @prop {boolean=} escKey\r\n * Esc key to close.\r\n *\r\n * @prop {boolean=} arrowKeys\r\n * Left/right arrow keys for navigation.\r\n *\r\n * @prop {boolean=} returnFocus\r\n * Restore focus the last active element after PhotoSwipe is closed.\r\n *\r\n * @prop {boolean=} clickToCloseNonZoomable\r\n * If image is not zoomable (for example, smaller than viewport) it can be closed by clicking on it.\r\n *\r\n * @prop {ActionType | ActionFn | false} [imageClickAction]\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} [bgClickAction]\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} [tapAction]\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {ActionType | ActionFn | false} [doubleTapAction]\r\n * Refer to click and tap actions page.\r\n *\r\n * @prop {number=} preloaderDelay\r\n * Delay before the loading indicator will be displayed,\r\n * if image is loaded during it - the indicator will not be displayed at all. Can be zero.\r\n *\r\n * @prop {string=} indexIndicatorSep\r\n * Used for slide count indicator (\"1 of 10 \").\r\n *\r\n * @prop {(options: PhotoSwipeOptions, pswp: PhotoSwipe) => { x: number; y: number }} [getViewportSizeFn]\r\n * A function that should return slide viewport width and height, in format {x: 100, y: 100}.\r\n *\r\n * @prop {string=} errorMsg\r\n * Message to display when the image wasn't able to load. If you need to display HTML - use contentErrorElement filter.\r\n *\r\n * @prop {[number, number]=} preload\r\n * Lazy loading of nearby slides based on direction of movement. Should be an array with two integers,\r\n * first one - number of items to preload before the current image, second one - after the current image.\r\n * Two nearby images are always loaded.\r\n *\r\n * @prop {string=} mainClass\r\n * Class that will be added to the root element of PhotoSwipe, may contain multiple separated by space.\r\n * Example on Styling page.\r\n *\r\n * @prop {HTMLElement=} appendToEl\r\n * Element to which PhotoSwipe dialog will be appended when it opens.\r\n *\r\n * @prop {number=} maxWidthToAnimate\r\n * Maximum width of image to animate, if initial rendered image width\r\n * is larger than this value - the opening/closing transition will be automatically disabled.\r\n *\r\n * @prop {string=} closeTitle\r\n * Translating\r\n *\r\n * @prop {string=} zoomTitle\r\n * Translating\r\n *\r\n * @prop {string=} arrowPrevTitle\r\n * Translating\r\n *\r\n * @prop {string=} arrowNextTitle\r\n * Translating\r\n *\r\n * @prop {'zoom' | 'fade' | 'none'} [showHideAnimationType]\r\n * To adjust opening or closing transition type use lightbox option `showHideAnimationType` (`String`).\r\n * It supports three values - `zoom` (default), `fade` (default if there is no thumbnail) and `none`.\r\n *\r\n * Animations are automatically disabled if user `(prefers-reduced-motion: reduce)`.\r\n *\r\n * @prop {number=} index\r\n * Defines start slide index.\r\n *\r\n * @prop {(e: MouseEvent) => number} [getClickedIndexFn]\r\n *\r\n * @prop {boolean=} arrowPrev\r\n * @prop {boolean=} arrowNext\r\n * @prop {boolean=} zoom\r\n * @prop {boolean=} close\r\n * @prop {boolean=} counter\r\n *\r\n * @prop {string=} arrowPrevSVG\r\n * @prop {string=} arrowNextSVG\r\n * @prop {string=} zoomSVG\r\n * @prop {string=} closeSVG\r\n * @prop {string=} counterSVG\r\n *\r\n * @prop {string=} arrowPrevTitle\r\n * @prop {string=} arrowNextTitle\r\n * @prop {string=} zoomTitle\r\n * @prop {string=} closeTitle\r\n * @prop {string=} counterTitle\r\n *\r\n * @prop {ZoomLevelOption=} initialZoomLevel\r\n * @prop {ZoomLevelOption=} secondaryZoomLevel\r\n * @prop {ZoomLevelOption=} maxZoomLevel\r\n *\r\n * @prop {boolean=} mouseMovePan\r\n * @prop {Point | null} [initialPointerPos]\r\n * @prop {boolean=} showHideOpacity\r\n *\r\n * @prop {PhotoSwipeModuleOption} [pswpModule]\r\n * @prop {() => Promise<any>} [openPromise]\r\n * @prop {boolean=} preloadFirstSlide\r\n * @prop {ElementProvider=} gallery\r\n * @prop {string=} gallerySelector\r\n * @prop {ElementProvider=} children\r\n * @prop {string=} childSelector\r\n * @prop {string | false} [thumbSelector]\r\n */\n\n/** @type {PhotoSwipeOptions} */\n\n\nvar defaultOptions = {\n  allowPanToNext: true,\n  spacing: 0.1,\n  loop: true,\n  pinchToClose: true,\n  closeOnVerticalDrag: true,\n  hideAnimationDuration: 333,\n  showAnimationDuration: 333,\n  zoomAnimationDuration: 333,\n  escKey: true,\n  arrowKeys: true,\n  returnFocus: true,\n  maxWidthToAnimate: 4000,\n  clickToCloseNonZoomable: true,\n  imageClickAction: 'zoom-or-close',\n  bgClickAction: 'close',\n  tapAction: 'toggle-controls',\n  doubleTapAction: 'zoom',\n  indexIndicatorSep: ' / ',\n  preloaderDelay: 2000,\n  bgOpacity: 0.8,\n  index: 0,\n  errorMsg: 'The image cannot be loaded',\n  preload: [1, 2],\n  easing: 'cubic-bezier(.4,0,.22,1)'\n};\n/**\r\n * PhotoSwipe Core\r\n */\n\nvar PhotoSwipe = /*#__PURE__*/function (_PhotoSwipeBase) {\n  _inherits(PhotoSwipe, _PhotoSwipeBase);\n\n  var _super2 = _createSuper(PhotoSwipe);\n\n  /**\r\n   * @param {PhotoSwipeOptions} options\r\n   */\n  function PhotoSwipe(options) {\n    var _this21;\n\n    _classCallCheck(this, PhotoSwipe);\n\n    _this21 = _super2.call(this);\n\n    _this21._prepareOptions(options);\n    /**\r\n     * offset of viewport relative to document\r\n     *\r\n     * @type {{ x?: number; y?: number }}\r\n     */\n\n\n    _this21.offset = {};\n    /**\r\n     * @type {{ x?: number; y?: number }}\r\n     * @private\r\n     */\n\n    _this21._prevViewportSize = {};\n    /**\r\n     * Size of scrollable PhotoSwipe viewport\r\n     *\r\n     * @type {{ x?: number; y?: number }}\r\n     */\n\n    _this21.viewportSize = {};\n    /**\r\n     * background (backdrop) opacity\r\n     *\r\n     * @type {number}\r\n     */\n\n    _this21.bgOpacity = 1;\n    /** @type {HTMLDivElement} */\n\n    _this21.topBar = undefined;\n    _this21.events = new DOMEvents();\n    /** @type {Animations} */\n\n    _this21.animations = new Animations();\n    _this21.mainScroll = new MainScroll(_assertThisInitialized(_this21));\n    _this21.gestures = new Gestures(_assertThisInitialized(_this21));\n    _this21.opener = new Opener(_assertThisInitialized(_this21));\n    _this21.keyboard = new Keyboard(_assertThisInitialized(_this21));\n    _this21.contentLoader = new ContentLoader(_assertThisInitialized(_this21));\n    return _this21;\n  }\n\n  _createClass(PhotoSwipe, [{\n    key: \"init\",\n    value: function init() {\n      var _this22 = this;\n\n      if (this.isOpen || this.isDestroying) {\n        return;\n      }\n\n      this.isOpen = true;\n      this.dispatch('init'); // legacy\n\n      this.dispatch('beforeOpen');\n\n      this._createMainStructure(); // add classes to the root element of PhotoSwipe\n\n\n      var rootClasses = 'pswp--open';\n\n      if (this.gestures.supportsTouch) {\n        rootClasses += ' pswp--touch';\n      }\n\n      if (this.options.mainClass) {\n        rootClasses += ' ' + this.options.mainClass;\n      }\n\n      this.element.className += ' ' + rootClasses;\n      this.currIndex = this.options.index || 0;\n      this.potentialIndex = this.currIndex;\n      this.dispatch('firstUpdate'); // starting index can be modified here\n      // initialize scroll wheel handler to block the scroll\n\n      this.scrollWheel = new ScrollWheel(this); // sanitize index\n\n      if (Number.isNaN(this.currIndex) || this.currIndex < 0 || this.currIndex >= this.getNumItems()) {\n        this.currIndex = 0;\n      }\n\n      if (!this.gestures.supportsTouch) {\n        // enable mouse features if no touch support detected\n        this.mouseDetected();\n      } // causes forced synchronous layout\n\n\n      this.updateSize();\n      this.offset.y = window.pageYOffset;\n      this._initialItemData = this.getItemData(this.currIndex);\n      this.dispatch('gettingData', {\n        index: this.currIndex,\n        data: this._initialItemData,\n        slide: undefined\n      }); // *Layout* - calculate size and position of elements here\n\n      this._initialThumbBounds = this.getThumbBounds();\n      this.dispatch('initialLayout');\n      this.on('openingAnimationEnd', function () {\n        _this22.mainScroll.itemHolders[0].el.style.display = 'block';\n        _this22.mainScroll.itemHolders[2].el.style.display = 'block'; // Add content to the previous and next slide\n\n        _this22.setContent(_this22.mainScroll.itemHolders[0], _this22.currIndex - 1);\n\n        _this22.setContent(_this22.mainScroll.itemHolders[2], _this22.currIndex + 1);\n\n        _this22.appendHeavy();\n\n        _this22.contentLoader.updateLazy();\n\n        _this22.events.add(window, 'resize', _this22._handlePageResize.bind(_this22));\n\n        _this22.events.add(window, 'scroll', _this22._updatePageScrollOffset.bind(_this22));\n\n        _this22.dispatch('bindEvents');\n      }); // set content for center slide (first time)\n\n      this.setContent(this.mainScroll.itemHolders[1], this.currIndex);\n      this.dispatch('change');\n      this.opener.open();\n      this.dispatch('afterInit');\n      return true;\n    }\n    /**\r\n     * Get looped slide index\r\n     * (for example, -1 will return the last slide)\r\n     *\r\n     * @param {number} index\r\n     */\n\n  }, {\n    key: \"getLoopedIndex\",\n    value: function getLoopedIndex(index) {\n      var numSlides = this.getNumItems();\n\n      if (this.options.loop) {\n        if (index > numSlides - 1) {\n          index -= numSlides;\n        }\n\n        if (index < 0) {\n          index += numSlides;\n        }\n      }\n\n      index = clamp(index, 0, numSlides - 1);\n      return index;\n    }\n  }, {\n    key: \"appendHeavy\",\n    value: function appendHeavy() {\n      this.mainScroll.itemHolders.forEach(function (itemHolder) {\n        if (itemHolder.slide) {\n          itemHolder.slide.appendHeavy();\n        }\n      });\n    }\n    /**\r\n     * Change the slide\r\n     * @param {number} index New index\r\n     */\n\n  }, {\n    key: \"goTo\",\n    value: function goTo(index) {\n      this.mainScroll.moveIndexBy(this.getLoopedIndex(index) - this.potentialIndex);\n    }\n    /**\r\n     * Go to the next slide.\r\n     */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.goTo(this.potentialIndex + 1);\n    }\n    /**\r\n     * Go to the previous slide.\r\n     */\n\n  }, {\n    key: \"prev\",\n    value: function prev() {\n      this.goTo(this.potentialIndex - 1);\n    }\n    /**\r\n     * @see slide/slide.js zoomTo\r\n     *\r\n     * @param {Parameters<Slide['zoomTo']>} args\r\n     */\n\n  }, {\n    key: \"zoomTo\",\n    value: function zoomTo() {\n      var _this$currSlide;\n\n      (_this$currSlide = this.currSlide).zoomTo.apply(_this$currSlide, arguments);\n    }\n    /**\r\n     * @see slide/slide.js toggleZoom\r\n     */\n\n  }, {\n    key: \"toggleZoom\",\n    value: function toggleZoom() {\n      this.currSlide.toggleZoom();\n    }\n    /**\r\n     * Close the gallery.\r\n     * After closing transition ends - destroy it\r\n     */\n\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (!this.opener.isOpen || this.isDestroying) {\n        return;\n      }\n\n      this.isDestroying = true;\n      this.dispatch('close');\n      this.events.removeAll();\n      this.opener.close();\n    }\n    /**\r\n     * Destroys the gallery:\r\n     * - instantly closes the gallery\r\n     * - unbinds events,\r\n     * - cleans intervals and timeouts\r\n     * - removes elements from DOM\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (!this.isDestroying) {\n        this.options.showHideAnimationType = 'none';\n        this.close();\n        return;\n      }\n\n      this.dispatch('destroy');\n      this.listeners = null;\n      this.scrollWrap.ontouchmove = null;\n      this.scrollWrap.ontouchend = null;\n      this.element.remove();\n      this.mainScroll.itemHolders.forEach(function (itemHolder) {\n        if (itemHolder.slide) {\n          itemHolder.slide.destroy();\n        }\n      });\n      this.contentLoader.destroy();\n      this.events.removeAll();\n    }\n    /**\r\n     * Refresh/reload content of a slide by its index\r\n     *\r\n     * @param {number} slideIndex\r\n     */\n\n  }, {\n    key: \"refreshSlideContent\",\n    value: function refreshSlideContent(slideIndex) {\n      var _this23 = this;\n\n      this.contentLoader.removeByIndex(slideIndex);\n      this.mainScroll.itemHolders.forEach(function (itemHolder, i) {\n        var potentialHolderIndex = _this23.currSlide.index - 1 + i;\n\n        if (_this23.canLoop()) {\n          potentialHolderIndex = _this23.getLoopedIndex(potentialHolderIndex);\n        }\n\n        if (potentialHolderIndex === slideIndex) {\n          // set the new slide content\n          _this23.setContent(itemHolder, slideIndex, true); // activate the new slide if it's current\n\n\n          if (i === 1) {\n            /** @type {Slide} */\n            _this23.currSlide = itemHolder.slide;\n            itemHolder.slide.setIsActive(true);\n          }\n        }\n      });\n      this.dispatch('change');\n    }\n    /**\r\n     * Set slide content\r\n     *\r\n     * @param {ItemHolder} holder mainScroll.itemHolders array item\r\n     * @param {number} index Slide index\r\n     * @param {boolean=} force If content should be set even if index wasn't changed\r\n     */\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(holder, index, force) {\n      if (this.canLoop()) {\n        index = this.getLoopedIndex(index);\n      }\n\n      if (holder.slide) {\n        if (holder.slide.index === index && !force) {\n          // exit if holder already contains this slide\n          // this could be common when just three slides are used\n          return;\n        } // destroy previous slide\n\n\n        holder.slide.destroy();\n        holder.slide = null;\n      } // exit if no loop and index is out of bounds\n\n\n      if (!this.canLoop() && (index < 0 || index >= this.getNumItems())) {\n        return;\n      }\n\n      var itemData = this.getItemData(index);\n      holder.slide = new Slide(itemData, index, this); // set current slide\n\n      if (index === this.currIndex) {\n        this.currSlide = holder.slide;\n      }\n\n      holder.slide.append(holder.el);\n    }\n  }, {\n    key: \"getViewportCenterPoint\",\n    value: function getViewportCenterPoint() {\n      return {\n        x: this.viewportSize.x / 2,\n        y: this.viewportSize.y / 2\n      };\n    }\n    /**\r\n     * Update size of all elements.\r\n     * Executed on init and on page resize.\r\n     *\r\n     * @param {boolean=} force Update size even if size of viewport was not changed.\r\n     */\n\n  }, {\n    key: \"updateSize\",\n    value: function updateSize(force) {\n      // let item;\n      // let itemIndex;\n      if (this.isDestroying) {\n        // exit if PhotoSwipe is closed or closing\n        // (to avoid errors, as resize event might be delayed)\n        return;\n      } //const newWidth = this.scrollWrap.clientWidth;\n      //const newHeight = this.scrollWrap.clientHeight;\n\n\n      var newViewportSize = getViewportSize(this.options, this);\n\n      if (!force && pointsEqual(newViewportSize, this._prevViewportSize)) {\n        // Exit if dimensions were not changed\n        return;\n      } //this._prevViewportSize.x = newWidth;\n      //this._prevViewportSize.y = newHeight;\n\n\n      equalizePoints(this._prevViewportSize, newViewportSize);\n      this.dispatch('beforeResize');\n      equalizePoints(this.viewportSize, this._prevViewportSize);\n\n      this._updatePageScrollOffset();\n\n      this.dispatch('viewportSize'); // Resize slides only after opener animation is finished\n      // and don't re-calculate size on inital size update\n\n      this.mainScroll.resize(this.opener.isOpen);\n\n      if (!this.hasMouse && window.matchMedia('(any-hover: hover)').matches) {\n        this.mouseDetected();\n      }\n\n      this.dispatch('resize');\n    }\n    /**\r\n     * @param {number} opacity\r\n     */\n\n  }, {\n    key: \"applyBgOpacity\",\n    value: function applyBgOpacity(opacity) {\n      this.bgOpacity = Math.max(opacity, 0);\n      this.bg.style.opacity = String(this.bgOpacity * this.options.bgOpacity);\n    }\n    /**\r\n     * Whether mouse is detected\r\n     */\n\n  }, {\n    key: \"mouseDetected\",\n    value: function mouseDetected() {\n      if (!this.hasMouse) {\n        this.hasMouse = true;\n        this.element.classList.add('pswp--has_mouse');\n      }\n    }\n    /**\r\n     * Page resize event handler\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_handlePageResize\",\n    value: function _handlePageResize() {\n      var _this24 = this;\n\n      this.updateSize(); // In iOS webview, if element size depends on document size,\n      // it'll be measured incorrectly in resize event\n      //\n      // https://bugs.webkit.org/show_bug.cgi?id=170595\n      // https://hackernoon.com/onresize-event-broken-in-mobile-safari-d8469027bf4d\n\n      if (/iPhone|iPad|iPod/i.test(window.navigator.userAgent)) {\n        setTimeout(function () {\n          _this24.updateSize();\n        }, 500);\n      }\n    }\n    /**\r\n     * Page scroll offset is used\r\n     * to get correct coordinates\r\n     * relative to PhotoSwipe viewport.\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_updatePageScrollOffset\",\n    value: function _updatePageScrollOffset() {\n      this.setScrollOffset(0, window.pageYOffset);\n    }\n    /**\r\n     * @param {number} x\r\n     * @param {number} y\r\n     */\n\n  }, {\n    key: \"setScrollOffset\",\n    value: function setScrollOffset(x, y) {\n      this.offset.x = x;\n      this.offset.y = y;\n      this.dispatch('updateScrollOffset');\n    }\n    /**\r\n     * Create main HTML structure of PhotoSwipe,\r\n     * and add it to DOM\r\n     *\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_createMainStructure\",\n    value: function _createMainStructure() {\n      // root DOM element of PhotoSwipe (.pswp)\n      this.element = createElement('pswp');\n      this.element.setAttribute('tabindex', '-1');\n      this.element.setAttribute('role', 'dialog'); // template is legacy prop\n\n      this.template = this.element; // Background is added as a separate element,\n      // as animating opacity is faster than animating rgba()\n\n      this.bg = createElement('pswp__bg', false, this.element);\n      this.scrollWrap = createElement('pswp__scroll-wrap', 'section', this.element);\n      this.container = createElement('pswp__container', false, this.scrollWrap); // aria pattern: carousel\n\n      this.scrollWrap.setAttribute('aria-roledescription', 'carousel');\n      this.container.setAttribute('aria-live', 'off');\n      this.container.setAttribute('id', 'pswp__items');\n      this.mainScroll.appendHolders();\n      this.ui = new UI(this);\n      this.ui.init(); // append to DOM\n\n      (this.options.appendToEl || document.body).appendChild(this.element);\n    }\n    /**\r\n     * Get position and dimensions of small thumbnail\r\n     *   {x:,y:,w:}\r\n     *\r\n     * Height is optional (calculated based on the large image)\r\n     */\n\n  }, {\n    key: \"getThumbBounds\",\n    value: function getThumbBounds() {\n      return _getThumbBounds(this.currIndex, this.currSlide ? this.currSlide.data : this._initialItemData, this);\n    }\n    /**\r\n     * If the PhotoSwipe can have continious loop\r\n     * @returns Boolean\r\n     */\n\n  }, {\n    key: \"canLoop\",\n    value: function canLoop() {\n      return this.options.loop && this.getNumItems() > 2;\n    }\n    /**\r\n     * @param {PhotoSwipeOptions} options\r\n     * @private\r\n     */\n\n  }, {\n    key: \"_prepareOptions\",\n    value: function _prepareOptions(options) {\n      if (window.matchMedia('(prefers-reduced-motion), (update: slow)').matches) {\n        options.showHideAnimationType = 'none';\n        options.zoomAnimationDuration = 0;\n      }\n      /** @type {PhotoSwipeOptions}*/\n\n\n      this.options = _objectSpread(_objectSpread({}, defaultOptions), options);\n    }\n  }]);\n\n  return PhotoSwipe;\n}(PhotoSwipeBase);\n\nexport { PhotoSwipe as default };"],"sourceRoot":""}